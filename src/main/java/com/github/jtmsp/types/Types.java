// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: types.proto

package com.github.jtmsp.types;

public final class Types {
  private Types() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * <pre>
   * Not being used
   * Could be added to request/response
   * so we don't have to type switch
   * (would be twice as fast, but we're talking about 15ns)
   * </pre>
   *
   * Protobuf enum {@code com.github.jtmsp.types.MessageType}
   */
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NullMessage = 0;</code>
     */
    NullMessage(0),
    /**
     * <code>Echo = 1;</code>
     */
    Echo(1),
    /**
     * <code>Flush = 2;</code>
     */
    Flush(2),
    /**
     * <code>Info = 3;</code>
     */
    Info(3),
    /**
     * <code>SetOption = 4;</code>
     */
    SetOption(4),
    /**
     * <code>Exception = 5;</code>
     */
    Exception(5),
    /**
     * <code>AppendTx = 17;</code>
     */
    AppendTx(17),
    /**
     * <code>CheckTx = 18;</code>
     */
    CheckTx(18),
    /**
     * <code>Commit = 19;</code>
     */
    Commit(19),
    /**
     * <code>Query = 20;</code>
     */
    Query(20),
    /**
     * <code>InitChain = 21;</code>
     */
    InitChain(21),
    /**
     * <code>BeginBlock = 22;</code>
     */
    BeginBlock(22),
    /**
     * <code>EndBlock = 23;</code>
     */
    EndBlock(23),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NullMessage = 0;</code>
     */
    public static final int NullMessage_VALUE = 0;
    /**
     * <code>Echo = 1;</code>
     */
    public static final int Echo_VALUE = 1;
    /**
     * <code>Flush = 2;</code>
     */
    public static final int Flush_VALUE = 2;
    /**
     * <code>Info = 3;</code>
     */
    public static final int Info_VALUE = 3;
    /**
     * <code>SetOption = 4;</code>
     */
    public static final int SetOption_VALUE = 4;
    /**
     * <code>Exception = 5;</code>
     */
    public static final int Exception_VALUE = 5;
    /**
     * <code>AppendTx = 17;</code>
     */
    public static final int AppendTx_VALUE = 17;
    /**
     * <code>CheckTx = 18;</code>
     */
    public static final int CheckTx_VALUE = 18;
    /**
     * <code>Commit = 19;</code>
     */
    public static final int Commit_VALUE = 19;
    /**
     * <code>Query = 20;</code>
     */
    public static final int Query_VALUE = 20;
    /**
     * <code>InitChain = 21;</code>
     */
    public static final int InitChain_VALUE = 21;
    /**
     * <code>BeginBlock = 22;</code>
     */
    public static final int BeginBlock_VALUE = 22;
    /**
     * <code>EndBlock = 23;</code>
     */
    public static final int EndBlock_VALUE = 23;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageType valueOf(int value) {
      return forNumber(value);
    }

    public static MessageType forNumber(int value) {
      switch (value) {
        case 0: return NullMessage;
        case 1: return Echo;
        case 2: return Flush;
        case 3: return Info;
        case 4: return SetOption;
        case 5: return Exception;
        case 17: return AppendTx;
        case 18: return CheckTx;
        case 19: return Commit;
        case 20: return Query;
        case 21: return InitChain;
        case 22: return BeginBlock;
        case 23: return EndBlock;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.getDescriptor().getEnumTypes().get(0);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.jtmsp.types.MessageType)
  }

  /**
   * Protobuf enum {@code com.github.jtmsp.types.CodeType}
   */
  public enum CodeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OK = 0;</code>
     */
    OK(0),
    /**
     * <pre>
     * General response codes, 0 ~ 99
     * </pre>
     *
     * <code>InternalError = 1;</code>
     */
    InternalError(1),
    /**
     * <code>EncodingError = 2;</code>
     */
    EncodingError(2),
    /**
     * <code>BadNonce = 3;</code>
     */
    BadNonce(3),
    /**
     * <code>Unauthorized = 4;</code>
     */
    Unauthorized(4),
    /**
     * <code>InsufficientFunds = 5;</code>
     */
    InsufficientFunds(5),
    /**
     * <code>UnknownRequest = 6;</code>
     */
    UnknownRequest(6),
    /**
     * <pre>
     * Reserved for basecoin, 100 ~ 199
     * </pre>
     *
     * <code>BaseDuplicateAddress = 101;</code>
     */
    BaseDuplicateAddress(101),
    /**
     * <code>BaseEncodingError = 102;</code>
     */
    BaseEncodingError(102),
    /**
     * <code>BaseInsufficientFees = 103;</code>
     */
    BaseInsufficientFees(103),
    /**
     * <code>BaseInsufficientFunds = 104;</code>
     */
    BaseInsufficientFunds(104),
    /**
     * <code>BaseInsufficientGasPrice = 105;</code>
     */
    BaseInsufficientGasPrice(105),
    /**
     * <code>BaseInvalidInput = 106;</code>
     */
    BaseInvalidInput(106),
    /**
     * <code>BaseInvalidOutput = 107;</code>
     */
    BaseInvalidOutput(107),
    /**
     * <code>BaseInvalidPubKey = 108;</code>
     */
    BaseInvalidPubKey(108),
    /**
     * <code>BaseInvalidSequence = 109;</code>
     */
    BaseInvalidSequence(109),
    /**
     * <code>BaseInvalidSignature = 110;</code>
     */
    BaseInvalidSignature(110),
    /**
     * <code>BaseUnknownAddress = 111;</code>
     */
    BaseUnknownAddress(111),
    /**
     * <code>BaseUnknownPubKey = 112;</code>
     */
    BaseUnknownPubKey(112),
    /**
     * <code>BaseUnknownPlugin = 113;</code>
     */
    BaseUnknownPlugin(113),
    /**
     * <pre>
     * Reserved for governance, 200 ~ 299
     * </pre>
     *
     * <code>GovUnknownEntity = 201;</code>
     */
    GovUnknownEntity(201),
    /**
     * <code>GovUnknownGroup = 202;</code>
     */
    GovUnknownGroup(202),
    /**
     * <code>GovUnknownProposal = 203;</code>
     */
    GovUnknownProposal(203),
    /**
     * <code>GovDuplicateGroup = 204;</code>
     */
    GovDuplicateGroup(204),
    /**
     * <code>GovDuplicateMember = 205;</code>
     */
    GovDuplicateMember(205),
    /**
     * <code>GovDuplicateProposal = 206;</code>
     */
    GovDuplicateProposal(206),
    /**
     * <code>GovDuplicateVote = 207;</code>
     */
    GovDuplicateVote(207),
    /**
     * <code>GovInvalidMember = 208;</code>
     */
    GovInvalidMember(208),
    /**
     * <code>GovInvalidVote = 209;</code>
     */
    GovInvalidVote(209),
    /**
     * <code>GovInvalidVotingPower = 210;</code>
     */
    GovInvalidVotingPower(210),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OK = 0;</code>
     */
    public static final int OK_VALUE = 0;
    /**
     * <pre>
     * General response codes, 0 ~ 99
     * </pre>
     *
     * <code>InternalError = 1;</code>
     */
    public static final int InternalError_VALUE = 1;
    /**
     * <code>EncodingError = 2;</code>
     */
    public static final int EncodingError_VALUE = 2;
    /**
     * <code>BadNonce = 3;</code>
     */
    public static final int BadNonce_VALUE = 3;
    /**
     * <code>Unauthorized = 4;</code>
     */
    public static final int Unauthorized_VALUE = 4;
    /**
     * <code>InsufficientFunds = 5;</code>
     */
    public static final int InsufficientFunds_VALUE = 5;
    /**
     * <code>UnknownRequest = 6;</code>
     */
    public static final int UnknownRequest_VALUE = 6;
    /**
     * <pre>
     * Reserved for basecoin, 100 ~ 199
     * </pre>
     *
     * <code>BaseDuplicateAddress = 101;</code>
     */
    public static final int BaseDuplicateAddress_VALUE = 101;
    /**
     * <code>BaseEncodingError = 102;</code>
     */
    public static final int BaseEncodingError_VALUE = 102;
    /**
     * <code>BaseInsufficientFees = 103;</code>
     */
    public static final int BaseInsufficientFees_VALUE = 103;
    /**
     * <code>BaseInsufficientFunds = 104;</code>
     */
    public static final int BaseInsufficientFunds_VALUE = 104;
    /**
     * <code>BaseInsufficientGasPrice = 105;</code>
     */
    public static final int BaseInsufficientGasPrice_VALUE = 105;
    /**
     * <code>BaseInvalidInput = 106;</code>
     */
    public static final int BaseInvalidInput_VALUE = 106;
    /**
     * <code>BaseInvalidOutput = 107;</code>
     */
    public static final int BaseInvalidOutput_VALUE = 107;
    /**
     * <code>BaseInvalidPubKey = 108;</code>
     */
    public static final int BaseInvalidPubKey_VALUE = 108;
    /**
     * <code>BaseInvalidSequence = 109;</code>
     */
    public static final int BaseInvalidSequence_VALUE = 109;
    /**
     * <code>BaseInvalidSignature = 110;</code>
     */
    public static final int BaseInvalidSignature_VALUE = 110;
    /**
     * <code>BaseUnknownAddress = 111;</code>
     */
    public static final int BaseUnknownAddress_VALUE = 111;
    /**
     * <code>BaseUnknownPubKey = 112;</code>
     */
    public static final int BaseUnknownPubKey_VALUE = 112;
    /**
     * <code>BaseUnknownPlugin = 113;</code>
     */
    public static final int BaseUnknownPlugin_VALUE = 113;
    /**
     * <pre>
     * Reserved for governance, 200 ~ 299
     * </pre>
     *
     * <code>GovUnknownEntity = 201;</code>
     */
    public static final int GovUnknownEntity_VALUE = 201;
    /**
     * <code>GovUnknownGroup = 202;</code>
     */
    public static final int GovUnknownGroup_VALUE = 202;
    /**
     * <code>GovUnknownProposal = 203;</code>
     */
    public static final int GovUnknownProposal_VALUE = 203;
    /**
     * <code>GovDuplicateGroup = 204;</code>
     */
    public static final int GovDuplicateGroup_VALUE = 204;
    /**
     * <code>GovDuplicateMember = 205;</code>
     */
    public static final int GovDuplicateMember_VALUE = 205;
    /**
     * <code>GovDuplicateProposal = 206;</code>
     */
    public static final int GovDuplicateProposal_VALUE = 206;
    /**
     * <code>GovDuplicateVote = 207;</code>
     */
    public static final int GovDuplicateVote_VALUE = 207;
    /**
     * <code>GovInvalidMember = 208;</code>
     */
    public static final int GovInvalidMember_VALUE = 208;
    /**
     * <code>GovInvalidVote = 209;</code>
     */
    public static final int GovInvalidVote_VALUE = 209;
    /**
     * <code>GovInvalidVotingPower = 210;</code>
     */
    public static final int GovInvalidVotingPower_VALUE = 210;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CodeType valueOf(int value) {
      return forNumber(value);
    }

    public static CodeType forNumber(int value) {
      switch (value) {
        case 0: return OK;
        case 1: return InternalError;
        case 2: return EncodingError;
        case 3: return BadNonce;
        case 4: return Unauthorized;
        case 5: return InsufficientFunds;
        case 6: return UnknownRequest;
        case 101: return BaseDuplicateAddress;
        case 102: return BaseEncodingError;
        case 103: return BaseInsufficientFees;
        case 104: return BaseInsufficientFunds;
        case 105: return BaseInsufficientGasPrice;
        case 106: return BaseInvalidInput;
        case 107: return BaseInvalidOutput;
        case 108: return BaseInvalidPubKey;
        case 109: return BaseInvalidSequence;
        case 110: return BaseInvalidSignature;
        case 111: return BaseUnknownAddress;
        case 112: return BaseUnknownPubKey;
        case 113: return BaseUnknownPlugin;
        case 201: return GovUnknownEntity;
        case 202: return GovUnknownGroup;
        case 203: return GovUnknownProposal;
        case 204: return GovDuplicateGroup;
        case 205: return GovDuplicateMember;
        case 206: return GovDuplicateProposal;
        case 207: return GovDuplicateVote;
        case 208: return GovInvalidMember;
        case 209: return GovInvalidVote;
        case 210: return GovInvalidVotingPower;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CodeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CodeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CodeType>() {
            public CodeType findValueByNumber(int number) {
              return CodeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.getDescriptor().getEnumTypes().get(1);
    }

    private static final CodeType[] VALUES = values();

    public static CodeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CodeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.jtmsp.types.CodeType)
  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
     */
    com.github.jtmsp.types.Types.RequestEcho getEcho();
    /**
     * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
     */
    com.github.jtmsp.types.Types.RequestEchoOrBuilder getEchoOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
     */
    com.github.jtmsp.types.Types.RequestFlush getFlush();
    /**
     * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
     */
    com.github.jtmsp.types.Types.RequestFlushOrBuilder getFlushOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
     */
    com.github.jtmsp.types.Types.RequestInfo getInfo();
    /**
     * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
     */
    com.github.jtmsp.types.Types.RequestInfoOrBuilder getInfoOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
     */
    com.github.jtmsp.types.Types.RequestSetOption getSetOption();
    /**
     * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
     */
    com.github.jtmsp.types.Types.RequestSetOptionOrBuilder getSetOptionOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
     */
    com.github.jtmsp.types.Types.RequestAppendTx getAppendTx();
    /**
     * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
     */
    com.github.jtmsp.types.Types.RequestAppendTxOrBuilder getAppendTxOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
     */
    com.github.jtmsp.types.Types.RequestCheckTx getCheckTx();
    /**
     * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
     */
    com.github.jtmsp.types.Types.RequestCheckTxOrBuilder getCheckTxOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
     */
    com.github.jtmsp.types.Types.RequestCommit getCommit();
    /**
     * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
     */
    com.github.jtmsp.types.Types.RequestCommitOrBuilder getCommitOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
     */
    com.github.jtmsp.types.Types.RequestQuery getQuery();
    /**
     * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
     */
    com.github.jtmsp.types.Types.RequestQueryOrBuilder getQueryOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
     */
    com.github.jtmsp.types.Types.RequestInitChain getInitChain();
    /**
     * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
     */
    com.github.jtmsp.types.Types.RequestInitChainOrBuilder getInitChainOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
     */
    com.github.jtmsp.types.Types.RequestBeginBlock getBeginBlock();
    /**
     * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
     */
    com.github.jtmsp.types.Types.RequestBeginBlockOrBuilder getBeginBlockOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
     */
    com.github.jtmsp.types.Types.RequestEndBlock getEndBlock();
    /**
     * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
     */
    com.github.jtmsp.types.Types.RequestEndBlockOrBuilder getEndBlockOrBuilder();

    public com.github.jtmsp.types.Types.Request.ValueCase getValueCase();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.Request)
      RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Request() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.github.jtmsp.types.Types.RequestEcho.Builder subBuilder = null;
              if (valueCase_ == 1) {
                subBuilder = ((com.github.jtmsp.types.Types.RequestEcho) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.RequestEcho.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.RequestEcho) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 1;
              break;
            }
            case 18: {
              com.github.jtmsp.types.Types.RequestFlush.Builder subBuilder = null;
              if (valueCase_ == 2) {
                subBuilder = ((com.github.jtmsp.types.Types.RequestFlush) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.RequestFlush.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.RequestFlush) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 2;
              break;
            }
            case 26: {
              com.github.jtmsp.types.Types.RequestInfo.Builder subBuilder = null;
              if (valueCase_ == 3) {
                subBuilder = ((com.github.jtmsp.types.Types.RequestInfo) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.RequestInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.RequestInfo) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 3;
              break;
            }
            case 34: {
              com.github.jtmsp.types.Types.RequestSetOption.Builder subBuilder = null;
              if (valueCase_ == 4) {
                subBuilder = ((com.github.jtmsp.types.Types.RequestSetOption) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.RequestSetOption.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.RequestSetOption) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 4;
              break;
            }
            case 42: {
              com.github.jtmsp.types.Types.RequestAppendTx.Builder subBuilder = null;
              if (valueCase_ == 5) {
                subBuilder = ((com.github.jtmsp.types.Types.RequestAppendTx) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.RequestAppendTx.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.RequestAppendTx) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 5;
              break;
            }
            case 50: {
              com.github.jtmsp.types.Types.RequestCheckTx.Builder subBuilder = null;
              if (valueCase_ == 6) {
                subBuilder = ((com.github.jtmsp.types.Types.RequestCheckTx) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.RequestCheckTx.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.RequestCheckTx) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 6;
              break;
            }
            case 58: {
              com.github.jtmsp.types.Types.RequestCommit.Builder subBuilder = null;
              if (valueCase_ == 7) {
                subBuilder = ((com.github.jtmsp.types.Types.RequestCommit) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.RequestCommit.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.RequestCommit) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 7;
              break;
            }
            case 66: {
              com.github.jtmsp.types.Types.RequestQuery.Builder subBuilder = null;
              if (valueCase_ == 8) {
                subBuilder = ((com.github.jtmsp.types.Types.RequestQuery) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.RequestQuery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.RequestQuery) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 8;
              break;
            }
            case 74: {
              com.github.jtmsp.types.Types.RequestInitChain.Builder subBuilder = null;
              if (valueCase_ == 9) {
                subBuilder = ((com.github.jtmsp.types.Types.RequestInitChain) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.RequestInitChain.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.RequestInitChain) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 9;
              break;
            }
            case 82: {
              com.github.jtmsp.types.Types.RequestBeginBlock.Builder subBuilder = null;
              if (valueCase_ == 10) {
                subBuilder = ((com.github.jtmsp.types.Types.RequestBeginBlock) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.RequestBeginBlock.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.RequestBeginBlock) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 10;
              break;
            }
            case 90: {
              com.github.jtmsp.types.Types.RequestEndBlock.Builder subBuilder = null;
              if (valueCase_ == 11) {
                subBuilder = ((com.github.jtmsp.types.Types.RequestEndBlock) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.RequestEndBlock.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.RequestEndBlock) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 11;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.Request.class, com.github.jtmsp.types.Types.Request.Builder.class);
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      ECHO(1),
      FLUSH(2),
      INFO(3),
      SET_OPTION(4),
      APPEND_TX(5),
      CHECK_TX(6),
      COMMIT(7),
      QUERY(8),
      INIT_CHAIN(9),
      BEGIN_BLOCK(10),
      END_BLOCK(11),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 1: return ECHO;
          case 2: return FLUSH;
          case 3: return INFO;
          case 4: return SET_OPTION;
          case 5: return APPEND_TX;
          case 6: return CHECK_TX;
          case 7: return COMMIT;
          case 8: return QUERY;
          case 9: return INIT_CHAIN;
          case 10: return BEGIN_BLOCK;
          case 11: return END_BLOCK;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int ECHO_FIELD_NUMBER = 1;
    /**
     * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
     */
    public com.github.jtmsp.types.Types.RequestEcho getEcho() {
      if (valueCase_ == 1) {
         return (com.github.jtmsp.types.Types.RequestEcho) value_;
      }
      return com.github.jtmsp.types.Types.RequestEcho.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
     */
    public com.github.jtmsp.types.Types.RequestEchoOrBuilder getEchoOrBuilder() {
      if (valueCase_ == 1) {
         return (com.github.jtmsp.types.Types.RequestEcho) value_;
      }
      return com.github.jtmsp.types.Types.RequestEcho.getDefaultInstance();
    }

    public static final int FLUSH_FIELD_NUMBER = 2;
    /**
     * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
     */
    public com.github.jtmsp.types.Types.RequestFlush getFlush() {
      if (valueCase_ == 2) {
         return (com.github.jtmsp.types.Types.RequestFlush) value_;
      }
      return com.github.jtmsp.types.Types.RequestFlush.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
     */
    public com.github.jtmsp.types.Types.RequestFlushOrBuilder getFlushOrBuilder() {
      if (valueCase_ == 2) {
         return (com.github.jtmsp.types.Types.RequestFlush) value_;
      }
      return com.github.jtmsp.types.Types.RequestFlush.getDefaultInstance();
    }

    public static final int INFO_FIELD_NUMBER = 3;
    /**
     * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
     */
    public com.github.jtmsp.types.Types.RequestInfo getInfo() {
      if (valueCase_ == 3) {
         return (com.github.jtmsp.types.Types.RequestInfo) value_;
      }
      return com.github.jtmsp.types.Types.RequestInfo.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
     */
    public com.github.jtmsp.types.Types.RequestInfoOrBuilder getInfoOrBuilder() {
      if (valueCase_ == 3) {
         return (com.github.jtmsp.types.Types.RequestInfo) value_;
      }
      return com.github.jtmsp.types.Types.RequestInfo.getDefaultInstance();
    }

    public static final int SET_OPTION_FIELD_NUMBER = 4;
    /**
     * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
     */
    public com.github.jtmsp.types.Types.RequestSetOption getSetOption() {
      if (valueCase_ == 4) {
         return (com.github.jtmsp.types.Types.RequestSetOption) value_;
      }
      return com.github.jtmsp.types.Types.RequestSetOption.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
     */
    public com.github.jtmsp.types.Types.RequestSetOptionOrBuilder getSetOptionOrBuilder() {
      if (valueCase_ == 4) {
         return (com.github.jtmsp.types.Types.RequestSetOption) value_;
      }
      return com.github.jtmsp.types.Types.RequestSetOption.getDefaultInstance();
    }

    public static final int APPEND_TX_FIELD_NUMBER = 5;
    /**
     * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
     */
    public com.github.jtmsp.types.Types.RequestAppendTx getAppendTx() {
      if (valueCase_ == 5) {
         return (com.github.jtmsp.types.Types.RequestAppendTx) value_;
      }
      return com.github.jtmsp.types.Types.RequestAppendTx.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
     */
    public com.github.jtmsp.types.Types.RequestAppendTxOrBuilder getAppendTxOrBuilder() {
      if (valueCase_ == 5) {
         return (com.github.jtmsp.types.Types.RequestAppendTx) value_;
      }
      return com.github.jtmsp.types.Types.RequestAppendTx.getDefaultInstance();
    }

    public static final int CHECK_TX_FIELD_NUMBER = 6;
    /**
     * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
     */
    public com.github.jtmsp.types.Types.RequestCheckTx getCheckTx() {
      if (valueCase_ == 6) {
         return (com.github.jtmsp.types.Types.RequestCheckTx) value_;
      }
      return com.github.jtmsp.types.Types.RequestCheckTx.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
     */
    public com.github.jtmsp.types.Types.RequestCheckTxOrBuilder getCheckTxOrBuilder() {
      if (valueCase_ == 6) {
         return (com.github.jtmsp.types.Types.RequestCheckTx) value_;
      }
      return com.github.jtmsp.types.Types.RequestCheckTx.getDefaultInstance();
    }

    public static final int COMMIT_FIELD_NUMBER = 7;
    /**
     * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
     */
    public com.github.jtmsp.types.Types.RequestCommit getCommit() {
      if (valueCase_ == 7) {
         return (com.github.jtmsp.types.Types.RequestCommit) value_;
      }
      return com.github.jtmsp.types.Types.RequestCommit.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
     */
    public com.github.jtmsp.types.Types.RequestCommitOrBuilder getCommitOrBuilder() {
      if (valueCase_ == 7) {
         return (com.github.jtmsp.types.Types.RequestCommit) value_;
      }
      return com.github.jtmsp.types.Types.RequestCommit.getDefaultInstance();
    }

    public static final int QUERY_FIELD_NUMBER = 8;
    /**
     * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
     */
    public com.github.jtmsp.types.Types.RequestQuery getQuery() {
      if (valueCase_ == 8) {
         return (com.github.jtmsp.types.Types.RequestQuery) value_;
      }
      return com.github.jtmsp.types.Types.RequestQuery.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
     */
    public com.github.jtmsp.types.Types.RequestQueryOrBuilder getQueryOrBuilder() {
      if (valueCase_ == 8) {
         return (com.github.jtmsp.types.Types.RequestQuery) value_;
      }
      return com.github.jtmsp.types.Types.RequestQuery.getDefaultInstance();
    }

    public static final int INIT_CHAIN_FIELD_NUMBER = 9;
    /**
     * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
     */
    public com.github.jtmsp.types.Types.RequestInitChain getInitChain() {
      if (valueCase_ == 9) {
         return (com.github.jtmsp.types.Types.RequestInitChain) value_;
      }
      return com.github.jtmsp.types.Types.RequestInitChain.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
     */
    public com.github.jtmsp.types.Types.RequestInitChainOrBuilder getInitChainOrBuilder() {
      if (valueCase_ == 9) {
         return (com.github.jtmsp.types.Types.RequestInitChain) value_;
      }
      return com.github.jtmsp.types.Types.RequestInitChain.getDefaultInstance();
    }

    public static final int BEGIN_BLOCK_FIELD_NUMBER = 10;
    /**
     * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
     */
    public com.github.jtmsp.types.Types.RequestBeginBlock getBeginBlock() {
      if (valueCase_ == 10) {
         return (com.github.jtmsp.types.Types.RequestBeginBlock) value_;
      }
      return com.github.jtmsp.types.Types.RequestBeginBlock.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
     */
    public com.github.jtmsp.types.Types.RequestBeginBlockOrBuilder getBeginBlockOrBuilder() {
      if (valueCase_ == 10) {
         return (com.github.jtmsp.types.Types.RequestBeginBlock) value_;
      }
      return com.github.jtmsp.types.Types.RequestBeginBlock.getDefaultInstance();
    }

    public static final int END_BLOCK_FIELD_NUMBER = 11;
    /**
     * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
     */
    public com.github.jtmsp.types.Types.RequestEndBlock getEndBlock() {
      if (valueCase_ == 11) {
         return (com.github.jtmsp.types.Types.RequestEndBlock) value_;
      }
      return com.github.jtmsp.types.Types.RequestEndBlock.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
     */
    public com.github.jtmsp.types.Types.RequestEndBlockOrBuilder getEndBlockOrBuilder() {
      if (valueCase_ == 11) {
         return (com.github.jtmsp.types.Types.RequestEndBlock) value_;
      }
      return com.github.jtmsp.types.Types.RequestEndBlock.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (valueCase_ == 1) {
        output.writeMessage(1, (com.github.jtmsp.types.Types.RequestEcho) value_);
      }
      if (valueCase_ == 2) {
        output.writeMessage(2, (com.github.jtmsp.types.Types.RequestFlush) value_);
      }
      if (valueCase_ == 3) {
        output.writeMessage(3, (com.github.jtmsp.types.Types.RequestInfo) value_);
      }
      if (valueCase_ == 4) {
        output.writeMessage(4, (com.github.jtmsp.types.Types.RequestSetOption) value_);
      }
      if (valueCase_ == 5) {
        output.writeMessage(5, (com.github.jtmsp.types.Types.RequestAppendTx) value_);
      }
      if (valueCase_ == 6) {
        output.writeMessage(6, (com.github.jtmsp.types.Types.RequestCheckTx) value_);
      }
      if (valueCase_ == 7) {
        output.writeMessage(7, (com.github.jtmsp.types.Types.RequestCommit) value_);
      }
      if (valueCase_ == 8) {
        output.writeMessage(8, (com.github.jtmsp.types.Types.RequestQuery) value_);
      }
      if (valueCase_ == 9) {
        output.writeMessage(9, (com.github.jtmsp.types.Types.RequestInitChain) value_);
      }
      if (valueCase_ == 10) {
        output.writeMessage(10, (com.github.jtmsp.types.Types.RequestBeginBlock) value_);
      }
      if (valueCase_ == 11) {
        output.writeMessage(11, (com.github.jtmsp.types.Types.RequestEndBlock) value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (valueCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.github.jtmsp.types.Types.RequestEcho) value_);
      }
      if (valueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.github.jtmsp.types.Types.RequestFlush) value_);
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.github.jtmsp.types.Types.RequestInfo) value_);
      }
      if (valueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.github.jtmsp.types.Types.RequestSetOption) value_);
      }
      if (valueCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.github.jtmsp.types.Types.RequestAppendTx) value_);
      }
      if (valueCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (com.github.jtmsp.types.Types.RequestCheckTx) value_);
      }
      if (valueCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.github.jtmsp.types.Types.RequestCommit) value_);
      }
      if (valueCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (com.github.jtmsp.types.Types.RequestQuery) value_);
      }
      if (valueCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.github.jtmsp.types.Types.RequestInitChain) value_);
      }
      if (valueCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (com.github.jtmsp.types.Types.RequestBeginBlock) value_);
      }
      if (valueCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (com.github.jtmsp.types.Types.RequestEndBlock) value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.Request)
        com.github.jtmsp.types.Types.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.Request.class, com.github.jtmsp.types.Types.Request.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        valueCase_ = 0;
        value_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Request_descriptor;
      }

      public com.github.jtmsp.types.Types.Request getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.Request.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.Request build() {
        com.github.jtmsp.types.Types.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.Request buildPartial() {
        com.github.jtmsp.types.Types.Request result = new com.github.jtmsp.types.Types.Request(this);
        if (valueCase_ == 1) {
          if (echoBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = echoBuilder_.build();
          }
        }
        if (valueCase_ == 2) {
          if (flushBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = flushBuilder_.build();
          }
        }
        if (valueCase_ == 3) {
          if (infoBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = infoBuilder_.build();
          }
        }
        if (valueCase_ == 4) {
          if (setOptionBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = setOptionBuilder_.build();
          }
        }
        if (valueCase_ == 5) {
          if (appendTxBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = appendTxBuilder_.build();
          }
        }
        if (valueCase_ == 6) {
          if (checkTxBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = checkTxBuilder_.build();
          }
        }
        if (valueCase_ == 7) {
          if (commitBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = commitBuilder_.build();
          }
        }
        if (valueCase_ == 8) {
          if (queryBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = queryBuilder_.build();
          }
        }
        if (valueCase_ == 9) {
          if (initChainBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = initChainBuilder_.build();
          }
        }
        if (valueCase_ == 10) {
          if (beginBlockBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = beginBlockBuilder_.build();
          }
        }
        if (valueCase_ == 11) {
          if (endBlockBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = endBlockBuilder_.build();
          }
        }
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.Request) {
          return mergeFrom((com.github.jtmsp.types.Types.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.Request other) {
        if (other == com.github.jtmsp.types.Types.Request.getDefaultInstance()) return this;
        switch (other.getValueCase()) {
          case ECHO: {
            mergeEcho(other.getEcho());
            break;
          }
          case FLUSH: {
            mergeFlush(other.getFlush());
            break;
          }
          case INFO: {
            mergeInfo(other.getInfo());
            break;
          }
          case SET_OPTION: {
            mergeSetOption(other.getSetOption());
            break;
          }
          case APPEND_TX: {
            mergeAppendTx(other.getAppendTx());
            break;
          }
          case CHECK_TX: {
            mergeCheckTx(other.getCheckTx());
            break;
          }
          case COMMIT: {
            mergeCommit(other.getCommit());
            break;
          }
          case QUERY: {
            mergeQuery(other.getQuery());
            break;
          }
          case INIT_CHAIN: {
            mergeInitChain(other.getInitChain());
            break;
          }
          case BEGIN_BLOCK: {
            mergeBeginBlock(other.getBeginBlock());
            break;
          }
          case END_BLOCK: {
            mergeEndBlock(other.getEndBlock());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestEcho, com.github.jtmsp.types.Types.RequestEcho.Builder, com.github.jtmsp.types.Types.RequestEchoOrBuilder> echoBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
       */
      public com.github.jtmsp.types.Types.RequestEcho getEcho() {
        if (echoBuilder_ == null) {
          if (valueCase_ == 1) {
            return (com.github.jtmsp.types.Types.RequestEcho) value_;
          }
          return com.github.jtmsp.types.Types.RequestEcho.getDefaultInstance();
        } else {
          if (valueCase_ == 1) {
            return echoBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.RequestEcho.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
       */
      public Builder setEcho(com.github.jtmsp.types.Types.RequestEcho value) {
        if (echoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          echoBuilder_.setMessage(value);
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
       */
      public Builder setEcho(
          com.github.jtmsp.types.Types.RequestEcho.Builder builderForValue) {
        if (echoBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          echoBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
       */
      public Builder mergeEcho(com.github.jtmsp.types.Types.RequestEcho value) {
        if (echoBuilder_ == null) {
          if (valueCase_ == 1 &&
              value_ != com.github.jtmsp.types.Types.RequestEcho.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.RequestEcho.newBuilder((com.github.jtmsp.types.Types.RequestEcho) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 1) {
            echoBuilder_.mergeFrom(value);
          }
          echoBuilder_.setMessage(value);
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
       */
      public Builder clearEcho() {
        if (echoBuilder_ == null) {
          if (valueCase_ == 1) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 1) {
            valueCase_ = 0;
            value_ = null;
          }
          echoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
       */
      public com.github.jtmsp.types.Types.RequestEcho.Builder getEchoBuilder() {
        return getEchoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
       */
      public com.github.jtmsp.types.Types.RequestEchoOrBuilder getEchoOrBuilder() {
        if ((valueCase_ == 1) && (echoBuilder_ != null)) {
          return echoBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 1) {
            return (com.github.jtmsp.types.Types.RequestEcho) value_;
          }
          return com.github.jtmsp.types.Types.RequestEcho.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEcho echo = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestEcho, com.github.jtmsp.types.Types.RequestEcho.Builder, com.github.jtmsp.types.Types.RequestEchoOrBuilder> 
          getEchoFieldBuilder() {
        if (echoBuilder_ == null) {
          if (!(valueCase_ == 1)) {
            value_ = com.github.jtmsp.types.Types.RequestEcho.getDefaultInstance();
          }
          echoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.RequestEcho, com.github.jtmsp.types.Types.RequestEcho.Builder, com.github.jtmsp.types.Types.RequestEchoOrBuilder>(
                  (com.github.jtmsp.types.Types.RequestEcho) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 1;
        onChanged();;
        return echoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestFlush, com.github.jtmsp.types.Types.RequestFlush.Builder, com.github.jtmsp.types.Types.RequestFlushOrBuilder> flushBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
       */
      public com.github.jtmsp.types.Types.RequestFlush getFlush() {
        if (flushBuilder_ == null) {
          if (valueCase_ == 2) {
            return (com.github.jtmsp.types.Types.RequestFlush) value_;
          }
          return com.github.jtmsp.types.Types.RequestFlush.getDefaultInstance();
        } else {
          if (valueCase_ == 2) {
            return flushBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.RequestFlush.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
       */
      public Builder setFlush(com.github.jtmsp.types.Types.RequestFlush value) {
        if (flushBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          flushBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
       */
      public Builder setFlush(
          com.github.jtmsp.types.Types.RequestFlush.Builder builderForValue) {
        if (flushBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          flushBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
       */
      public Builder mergeFlush(com.github.jtmsp.types.Types.RequestFlush value) {
        if (flushBuilder_ == null) {
          if (valueCase_ == 2 &&
              value_ != com.github.jtmsp.types.Types.RequestFlush.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.RequestFlush.newBuilder((com.github.jtmsp.types.Types.RequestFlush) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 2) {
            flushBuilder_.mergeFrom(value);
          }
          flushBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
       */
      public Builder clearFlush() {
        if (flushBuilder_ == null) {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
          }
          flushBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
       */
      public com.github.jtmsp.types.Types.RequestFlush.Builder getFlushBuilder() {
        return getFlushFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
       */
      public com.github.jtmsp.types.Types.RequestFlushOrBuilder getFlushOrBuilder() {
        if ((valueCase_ == 2) && (flushBuilder_ != null)) {
          return flushBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 2) {
            return (com.github.jtmsp.types.Types.RequestFlush) value_;
          }
          return com.github.jtmsp.types.Types.RequestFlush.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestFlush flush = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestFlush, com.github.jtmsp.types.Types.RequestFlush.Builder, com.github.jtmsp.types.Types.RequestFlushOrBuilder> 
          getFlushFieldBuilder() {
        if (flushBuilder_ == null) {
          if (!(valueCase_ == 2)) {
            value_ = com.github.jtmsp.types.Types.RequestFlush.getDefaultInstance();
          }
          flushBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.RequestFlush, com.github.jtmsp.types.Types.RequestFlush.Builder, com.github.jtmsp.types.Types.RequestFlushOrBuilder>(
                  (com.github.jtmsp.types.Types.RequestFlush) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 2;
        onChanged();;
        return flushBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestInfo, com.github.jtmsp.types.Types.RequestInfo.Builder, com.github.jtmsp.types.Types.RequestInfoOrBuilder> infoBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
       */
      public com.github.jtmsp.types.Types.RequestInfo getInfo() {
        if (infoBuilder_ == null) {
          if (valueCase_ == 3) {
            return (com.github.jtmsp.types.Types.RequestInfo) value_;
          }
          return com.github.jtmsp.types.Types.RequestInfo.getDefaultInstance();
        } else {
          if (valueCase_ == 3) {
            return infoBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.RequestInfo.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
       */
      public Builder setInfo(com.github.jtmsp.types.Types.RequestInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          infoBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
       */
      public Builder setInfo(
          com.github.jtmsp.types.Types.RequestInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          infoBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
       */
      public Builder mergeInfo(com.github.jtmsp.types.Types.RequestInfo value) {
        if (infoBuilder_ == null) {
          if (valueCase_ == 3 &&
              value_ != com.github.jtmsp.types.Types.RequestInfo.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.RequestInfo.newBuilder((com.github.jtmsp.types.Types.RequestInfo) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 3) {
            infoBuilder_.mergeFrom(value);
          }
          infoBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
          }
          infoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
       */
      public com.github.jtmsp.types.Types.RequestInfo.Builder getInfoBuilder() {
        return getInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
       */
      public com.github.jtmsp.types.Types.RequestInfoOrBuilder getInfoOrBuilder() {
        if ((valueCase_ == 3) && (infoBuilder_ != null)) {
          return infoBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 3) {
            return (com.github.jtmsp.types.Types.RequestInfo) value_;
          }
          return com.github.jtmsp.types.Types.RequestInfo.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInfo info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestInfo, com.github.jtmsp.types.Types.RequestInfo.Builder, com.github.jtmsp.types.Types.RequestInfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          if (!(valueCase_ == 3)) {
            value_ = com.github.jtmsp.types.Types.RequestInfo.getDefaultInstance();
          }
          infoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.RequestInfo, com.github.jtmsp.types.Types.RequestInfo.Builder, com.github.jtmsp.types.Types.RequestInfoOrBuilder>(
                  (com.github.jtmsp.types.Types.RequestInfo) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 3;
        onChanged();;
        return infoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestSetOption, com.github.jtmsp.types.Types.RequestSetOption.Builder, com.github.jtmsp.types.Types.RequestSetOptionOrBuilder> setOptionBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
       */
      public com.github.jtmsp.types.Types.RequestSetOption getSetOption() {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 4) {
            return (com.github.jtmsp.types.Types.RequestSetOption) value_;
          }
          return com.github.jtmsp.types.Types.RequestSetOption.getDefaultInstance();
        } else {
          if (valueCase_ == 4) {
            return setOptionBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.RequestSetOption.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
       */
      public Builder setSetOption(com.github.jtmsp.types.Types.RequestSetOption value) {
        if (setOptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          setOptionBuilder_.setMessage(value);
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
       */
      public Builder setSetOption(
          com.github.jtmsp.types.Types.RequestSetOption.Builder builderForValue) {
        if (setOptionBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          setOptionBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
       */
      public Builder mergeSetOption(com.github.jtmsp.types.Types.RequestSetOption value) {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 4 &&
              value_ != com.github.jtmsp.types.Types.RequestSetOption.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.RequestSetOption.newBuilder((com.github.jtmsp.types.Types.RequestSetOption) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 4) {
            setOptionBuilder_.mergeFrom(value);
          }
          setOptionBuilder_.setMessage(value);
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
       */
      public Builder clearSetOption() {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
          }
          setOptionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
       */
      public com.github.jtmsp.types.Types.RequestSetOption.Builder getSetOptionBuilder() {
        return getSetOptionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
       */
      public com.github.jtmsp.types.Types.RequestSetOptionOrBuilder getSetOptionOrBuilder() {
        if ((valueCase_ == 4) && (setOptionBuilder_ != null)) {
          return setOptionBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 4) {
            return (com.github.jtmsp.types.Types.RequestSetOption) value_;
          }
          return com.github.jtmsp.types.Types.RequestSetOption.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestSetOption set_option = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestSetOption, com.github.jtmsp.types.Types.RequestSetOption.Builder, com.github.jtmsp.types.Types.RequestSetOptionOrBuilder> 
          getSetOptionFieldBuilder() {
        if (setOptionBuilder_ == null) {
          if (!(valueCase_ == 4)) {
            value_ = com.github.jtmsp.types.Types.RequestSetOption.getDefaultInstance();
          }
          setOptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.RequestSetOption, com.github.jtmsp.types.Types.RequestSetOption.Builder, com.github.jtmsp.types.Types.RequestSetOptionOrBuilder>(
                  (com.github.jtmsp.types.Types.RequestSetOption) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 4;
        onChanged();;
        return setOptionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestAppendTx, com.github.jtmsp.types.Types.RequestAppendTx.Builder, com.github.jtmsp.types.Types.RequestAppendTxOrBuilder> appendTxBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
       */
      public com.github.jtmsp.types.Types.RequestAppendTx getAppendTx() {
        if (appendTxBuilder_ == null) {
          if (valueCase_ == 5) {
            return (com.github.jtmsp.types.Types.RequestAppendTx) value_;
          }
          return com.github.jtmsp.types.Types.RequestAppendTx.getDefaultInstance();
        } else {
          if (valueCase_ == 5) {
            return appendTxBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.RequestAppendTx.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
       */
      public Builder setAppendTx(com.github.jtmsp.types.Types.RequestAppendTx value) {
        if (appendTxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          appendTxBuilder_.setMessage(value);
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
       */
      public Builder setAppendTx(
          com.github.jtmsp.types.Types.RequestAppendTx.Builder builderForValue) {
        if (appendTxBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          appendTxBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
       */
      public Builder mergeAppendTx(com.github.jtmsp.types.Types.RequestAppendTx value) {
        if (appendTxBuilder_ == null) {
          if (valueCase_ == 5 &&
              value_ != com.github.jtmsp.types.Types.RequestAppendTx.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.RequestAppendTx.newBuilder((com.github.jtmsp.types.Types.RequestAppendTx) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 5) {
            appendTxBuilder_.mergeFrom(value);
          }
          appendTxBuilder_.setMessage(value);
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
       */
      public Builder clearAppendTx() {
        if (appendTxBuilder_ == null) {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
          }
          appendTxBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
       */
      public com.github.jtmsp.types.Types.RequestAppendTx.Builder getAppendTxBuilder() {
        return getAppendTxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
       */
      public com.github.jtmsp.types.Types.RequestAppendTxOrBuilder getAppendTxOrBuilder() {
        if ((valueCase_ == 5) && (appendTxBuilder_ != null)) {
          return appendTxBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 5) {
            return (com.github.jtmsp.types.Types.RequestAppendTx) value_;
          }
          return com.github.jtmsp.types.Types.RequestAppendTx.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestAppendTx append_tx = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestAppendTx, com.github.jtmsp.types.Types.RequestAppendTx.Builder, com.github.jtmsp.types.Types.RequestAppendTxOrBuilder> 
          getAppendTxFieldBuilder() {
        if (appendTxBuilder_ == null) {
          if (!(valueCase_ == 5)) {
            value_ = com.github.jtmsp.types.Types.RequestAppendTx.getDefaultInstance();
          }
          appendTxBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.RequestAppendTx, com.github.jtmsp.types.Types.RequestAppendTx.Builder, com.github.jtmsp.types.Types.RequestAppendTxOrBuilder>(
                  (com.github.jtmsp.types.Types.RequestAppendTx) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 5;
        onChanged();;
        return appendTxBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestCheckTx, com.github.jtmsp.types.Types.RequestCheckTx.Builder, com.github.jtmsp.types.Types.RequestCheckTxOrBuilder> checkTxBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
       */
      public com.github.jtmsp.types.Types.RequestCheckTx getCheckTx() {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 6) {
            return (com.github.jtmsp.types.Types.RequestCheckTx) value_;
          }
          return com.github.jtmsp.types.Types.RequestCheckTx.getDefaultInstance();
        } else {
          if (valueCase_ == 6) {
            return checkTxBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.RequestCheckTx.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
       */
      public Builder setCheckTx(com.github.jtmsp.types.Types.RequestCheckTx value) {
        if (checkTxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          checkTxBuilder_.setMessage(value);
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
       */
      public Builder setCheckTx(
          com.github.jtmsp.types.Types.RequestCheckTx.Builder builderForValue) {
        if (checkTxBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          checkTxBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
       */
      public Builder mergeCheckTx(com.github.jtmsp.types.Types.RequestCheckTx value) {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 6 &&
              value_ != com.github.jtmsp.types.Types.RequestCheckTx.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.RequestCheckTx.newBuilder((com.github.jtmsp.types.Types.RequestCheckTx) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 6) {
            checkTxBuilder_.mergeFrom(value);
          }
          checkTxBuilder_.setMessage(value);
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
       */
      public Builder clearCheckTx() {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
          }
          checkTxBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
       */
      public com.github.jtmsp.types.Types.RequestCheckTx.Builder getCheckTxBuilder() {
        return getCheckTxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
       */
      public com.github.jtmsp.types.Types.RequestCheckTxOrBuilder getCheckTxOrBuilder() {
        if ((valueCase_ == 6) && (checkTxBuilder_ != null)) {
          return checkTxBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 6) {
            return (com.github.jtmsp.types.Types.RequestCheckTx) value_;
          }
          return com.github.jtmsp.types.Types.RequestCheckTx.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCheckTx check_tx = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestCheckTx, com.github.jtmsp.types.Types.RequestCheckTx.Builder, com.github.jtmsp.types.Types.RequestCheckTxOrBuilder> 
          getCheckTxFieldBuilder() {
        if (checkTxBuilder_ == null) {
          if (!(valueCase_ == 6)) {
            value_ = com.github.jtmsp.types.Types.RequestCheckTx.getDefaultInstance();
          }
          checkTxBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.RequestCheckTx, com.github.jtmsp.types.Types.RequestCheckTx.Builder, com.github.jtmsp.types.Types.RequestCheckTxOrBuilder>(
                  (com.github.jtmsp.types.Types.RequestCheckTx) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 6;
        onChanged();;
        return checkTxBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestCommit, com.github.jtmsp.types.Types.RequestCommit.Builder, com.github.jtmsp.types.Types.RequestCommitOrBuilder> commitBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
       */
      public com.github.jtmsp.types.Types.RequestCommit getCommit() {
        if (commitBuilder_ == null) {
          if (valueCase_ == 7) {
            return (com.github.jtmsp.types.Types.RequestCommit) value_;
          }
          return com.github.jtmsp.types.Types.RequestCommit.getDefaultInstance();
        } else {
          if (valueCase_ == 7) {
            return commitBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.RequestCommit.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
       */
      public Builder setCommit(com.github.jtmsp.types.Types.RequestCommit value) {
        if (commitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          commitBuilder_.setMessage(value);
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
       */
      public Builder setCommit(
          com.github.jtmsp.types.Types.RequestCommit.Builder builderForValue) {
        if (commitBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          commitBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
       */
      public Builder mergeCommit(com.github.jtmsp.types.Types.RequestCommit value) {
        if (commitBuilder_ == null) {
          if (valueCase_ == 7 &&
              value_ != com.github.jtmsp.types.Types.RequestCommit.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.RequestCommit.newBuilder((com.github.jtmsp.types.Types.RequestCommit) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 7) {
            commitBuilder_.mergeFrom(value);
          }
          commitBuilder_.setMessage(value);
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
       */
      public Builder clearCommit() {
        if (commitBuilder_ == null) {
          if (valueCase_ == 7) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 7) {
            valueCase_ = 0;
            value_ = null;
          }
          commitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
       */
      public com.github.jtmsp.types.Types.RequestCommit.Builder getCommitBuilder() {
        return getCommitFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
       */
      public com.github.jtmsp.types.Types.RequestCommitOrBuilder getCommitOrBuilder() {
        if ((valueCase_ == 7) && (commitBuilder_ != null)) {
          return commitBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 7) {
            return (com.github.jtmsp.types.Types.RequestCommit) value_;
          }
          return com.github.jtmsp.types.Types.RequestCommit.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestCommit commit = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestCommit, com.github.jtmsp.types.Types.RequestCommit.Builder, com.github.jtmsp.types.Types.RequestCommitOrBuilder> 
          getCommitFieldBuilder() {
        if (commitBuilder_ == null) {
          if (!(valueCase_ == 7)) {
            value_ = com.github.jtmsp.types.Types.RequestCommit.getDefaultInstance();
          }
          commitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.RequestCommit, com.github.jtmsp.types.Types.RequestCommit.Builder, com.github.jtmsp.types.Types.RequestCommitOrBuilder>(
                  (com.github.jtmsp.types.Types.RequestCommit) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 7;
        onChanged();;
        return commitBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestQuery, com.github.jtmsp.types.Types.RequestQuery.Builder, com.github.jtmsp.types.Types.RequestQueryOrBuilder> queryBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
       */
      public com.github.jtmsp.types.Types.RequestQuery getQuery() {
        if (queryBuilder_ == null) {
          if (valueCase_ == 8) {
            return (com.github.jtmsp.types.Types.RequestQuery) value_;
          }
          return com.github.jtmsp.types.Types.RequestQuery.getDefaultInstance();
        } else {
          if (valueCase_ == 8) {
            return queryBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.RequestQuery.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
       */
      public Builder setQuery(com.github.jtmsp.types.Types.RequestQuery value) {
        if (queryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          queryBuilder_.setMessage(value);
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
       */
      public Builder setQuery(
          com.github.jtmsp.types.Types.RequestQuery.Builder builderForValue) {
        if (queryBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          queryBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
       */
      public Builder mergeQuery(com.github.jtmsp.types.Types.RequestQuery value) {
        if (queryBuilder_ == null) {
          if (valueCase_ == 8 &&
              value_ != com.github.jtmsp.types.Types.RequestQuery.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.RequestQuery.newBuilder((com.github.jtmsp.types.Types.RequestQuery) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 8) {
            queryBuilder_.mergeFrom(value);
          }
          queryBuilder_.setMessage(value);
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
       */
      public Builder clearQuery() {
        if (queryBuilder_ == null) {
          if (valueCase_ == 8) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 8) {
            valueCase_ = 0;
            value_ = null;
          }
          queryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
       */
      public com.github.jtmsp.types.Types.RequestQuery.Builder getQueryBuilder() {
        return getQueryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
       */
      public com.github.jtmsp.types.Types.RequestQueryOrBuilder getQueryOrBuilder() {
        if ((valueCase_ == 8) && (queryBuilder_ != null)) {
          return queryBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 8) {
            return (com.github.jtmsp.types.Types.RequestQuery) value_;
          }
          return com.github.jtmsp.types.Types.RequestQuery.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestQuery query = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestQuery, com.github.jtmsp.types.Types.RequestQuery.Builder, com.github.jtmsp.types.Types.RequestQueryOrBuilder> 
          getQueryFieldBuilder() {
        if (queryBuilder_ == null) {
          if (!(valueCase_ == 8)) {
            value_ = com.github.jtmsp.types.Types.RequestQuery.getDefaultInstance();
          }
          queryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.RequestQuery, com.github.jtmsp.types.Types.RequestQuery.Builder, com.github.jtmsp.types.Types.RequestQueryOrBuilder>(
                  (com.github.jtmsp.types.Types.RequestQuery) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 8;
        onChanged();;
        return queryBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestInitChain, com.github.jtmsp.types.Types.RequestInitChain.Builder, com.github.jtmsp.types.Types.RequestInitChainOrBuilder> initChainBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
       */
      public com.github.jtmsp.types.Types.RequestInitChain getInitChain() {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 9) {
            return (com.github.jtmsp.types.Types.RequestInitChain) value_;
          }
          return com.github.jtmsp.types.Types.RequestInitChain.getDefaultInstance();
        } else {
          if (valueCase_ == 9) {
            return initChainBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.RequestInitChain.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
       */
      public Builder setInitChain(com.github.jtmsp.types.Types.RequestInitChain value) {
        if (initChainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          initChainBuilder_.setMessage(value);
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
       */
      public Builder setInitChain(
          com.github.jtmsp.types.Types.RequestInitChain.Builder builderForValue) {
        if (initChainBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          initChainBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
       */
      public Builder mergeInitChain(com.github.jtmsp.types.Types.RequestInitChain value) {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 9 &&
              value_ != com.github.jtmsp.types.Types.RequestInitChain.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.RequestInitChain.newBuilder((com.github.jtmsp.types.Types.RequestInitChain) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 9) {
            initChainBuilder_.mergeFrom(value);
          }
          initChainBuilder_.setMessage(value);
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
       */
      public Builder clearInitChain() {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 9) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 9) {
            valueCase_ = 0;
            value_ = null;
          }
          initChainBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
       */
      public com.github.jtmsp.types.Types.RequestInitChain.Builder getInitChainBuilder() {
        return getInitChainFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
       */
      public com.github.jtmsp.types.Types.RequestInitChainOrBuilder getInitChainOrBuilder() {
        if ((valueCase_ == 9) && (initChainBuilder_ != null)) {
          return initChainBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 9) {
            return (com.github.jtmsp.types.Types.RequestInitChain) value_;
          }
          return com.github.jtmsp.types.Types.RequestInitChain.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestInitChain init_chain = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestInitChain, com.github.jtmsp.types.Types.RequestInitChain.Builder, com.github.jtmsp.types.Types.RequestInitChainOrBuilder> 
          getInitChainFieldBuilder() {
        if (initChainBuilder_ == null) {
          if (!(valueCase_ == 9)) {
            value_ = com.github.jtmsp.types.Types.RequestInitChain.getDefaultInstance();
          }
          initChainBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.RequestInitChain, com.github.jtmsp.types.Types.RequestInitChain.Builder, com.github.jtmsp.types.Types.RequestInitChainOrBuilder>(
                  (com.github.jtmsp.types.Types.RequestInitChain) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 9;
        onChanged();;
        return initChainBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestBeginBlock, com.github.jtmsp.types.Types.RequestBeginBlock.Builder, com.github.jtmsp.types.Types.RequestBeginBlockOrBuilder> beginBlockBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
       */
      public com.github.jtmsp.types.Types.RequestBeginBlock getBeginBlock() {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 10) {
            return (com.github.jtmsp.types.Types.RequestBeginBlock) value_;
          }
          return com.github.jtmsp.types.Types.RequestBeginBlock.getDefaultInstance();
        } else {
          if (valueCase_ == 10) {
            return beginBlockBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.RequestBeginBlock.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
       */
      public Builder setBeginBlock(com.github.jtmsp.types.Types.RequestBeginBlock value) {
        if (beginBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          beginBlockBuilder_.setMessage(value);
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
       */
      public Builder setBeginBlock(
          com.github.jtmsp.types.Types.RequestBeginBlock.Builder builderForValue) {
        if (beginBlockBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          beginBlockBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
       */
      public Builder mergeBeginBlock(com.github.jtmsp.types.Types.RequestBeginBlock value) {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 10 &&
              value_ != com.github.jtmsp.types.Types.RequestBeginBlock.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.RequestBeginBlock.newBuilder((com.github.jtmsp.types.Types.RequestBeginBlock) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 10) {
            beginBlockBuilder_.mergeFrom(value);
          }
          beginBlockBuilder_.setMessage(value);
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
       */
      public Builder clearBeginBlock() {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 10) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 10) {
            valueCase_ = 0;
            value_ = null;
          }
          beginBlockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
       */
      public com.github.jtmsp.types.Types.RequestBeginBlock.Builder getBeginBlockBuilder() {
        return getBeginBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
       */
      public com.github.jtmsp.types.Types.RequestBeginBlockOrBuilder getBeginBlockOrBuilder() {
        if ((valueCase_ == 10) && (beginBlockBuilder_ != null)) {
          return beginBlockBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 10) {
            return (com.github.jtmsp.types.Types.RequestBeginBlock) value_;
          }
          return com.github.jtmsp.types.Types.RequestBeginBlock.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestBeginBlock begin_block = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestBeginBlock, com.github.jtmsp.types.Types.RequestBeginBlock.Builder, com.github.jtmsp.types.Types.RequestBeginBlockOrBuilder> 
          getBeginBlockFieldBuilder() {
        if (beginBlockBuilder_ == null) {
          if (!(valueCase_ == 10)) {
            value_ = com.github.jtmsp.types.Types.RequestBeginBlock.getDefaultInstance();
          }
          beginBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.RequestBeginBlock, com.github.jtmsp.types.Types.RequestBeginBlock.Builder, com.github.jtmsp.types.Types.RequestBeginBlockOrBuilder>(
                  (com.github.jtmsp.types.Types.RequestBeginBlock) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 10;
        onChanged();;
        return beginBlockBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestEndBlock, com.github.jtmsp.types.Types.RequestEndBlock.Builder, com.github.jtmsp.types.Types.RequestEndBlockOrBuilder> endBlockBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
       */
      public com.github.jtmsp.types.Types.RequestEndBlock getEndBlock() {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 11) {
            return (com.github.jtmsp.types.Types.RequestEndBlock) value_;
          }
          return com.github.jtmsp.types.Types.RequestEndBlock.getDefaultInstance();
        } else {
          if (valueCase_ == 11) {
            return endBlockBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.RequestEndBlock.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
       */
      public Builder setEndBlock(com.github.jtmsp.types.Types.RequestEndBlock value) {
        if (endBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          endBlockBuilder_.setMessage(value);
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
       */
      public Builder setEndBlock(
          com.github.jtmsp.types.Types.RequestEndBlock.Builder builderForValue) {
        if (endBlockBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          endBlockBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
       */
      public Builder mergeEndBlock(com.github.jtmsp.types.Types.RequestEndBlock value) {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 11 &&
              value_ != com.github.jtmsp.types.Types.RequestEndBlock.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.RequestEndBlock.newBuilder((com.github.jtmsp.types.Types.RequestEndBlock) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 11) {
            endBlockBuilder_.mergeFrom(value);
          }
          endBlockBuilder_.setMessage(value);
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
       */
      public Builder clearEndBlock() {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 11) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 11) {
            valueCase_ = 0;
            value_ = null;
          }
          endBlockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
       */
      public com.github.jtmsp.types.Types.RequestEndBlock.Builder getEndBlockBuilder() {
        return getEndBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
       */
      public com.github.jtmsp.types.Types.RequestEndBlockOrBuilder getEndBlockOrBuilder() {
        if ((valueCase_ == 11) && (endBlockBuilder_ != null)) {
          return endBlockBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 11) {
            return (com.github.jtmsp.types.Types.RequestEndBlock) value_;
          }
          return com.github.jtmsp.types.Types.RequestEndBlock.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.RequestEndBlock end_block = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.RequestEndBlock, com.github.jtmsp.types.Types.RequestEndBlock.Builder, com.github.jtmsp.types.Types.RequestEndBlockOrBuilder> 
          getEndBlockFieldBuilder() {
        if (endBlockBuilder_ == null) {
          if (!(valueCase_ == 11)) {
            value_ = com.github.jtmsp.types.Types.RequestEndBlock.getDefaultInstance();
          }
          endBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.RequestEndBlock, com.github.jtmsp.types.Types.RequestEndBlock.Builder, com.github.jtmsp.types.Types.RequestEndBlockOrBuilder>(
                  (com.github.jtmsp.types.Types.RequestEndBlock) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 11;
        onChanged();;
        return endBlockBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.Request)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.Request)
    private static final com.github.jtmsp.types.Types.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.Request();
    }

    public static com.github.jtmsp.types.Types.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestEchoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.RequestEcho)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.RequestEcho}
   */
  public  static final class RequestEcho extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.RequestEcho)
      RequestEchoOrBuilder {
    // Use RequestEcho.newBuilder() to construct.
    private RequestEcho(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestEcho() {
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestEcho(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestEcho_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestEcho_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.RequestEcho.class, com.github.jtmsp.types.Types.RequestEcho.Builder.class);
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object message_;
    /**
     * <code>optional string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, message_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, message_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.RequestEcho parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestEcho parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestEcho parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestEcho parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestEcho parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestEcho parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestEcho parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestEcho parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestEcho parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestEcho parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.RequestEcho prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.RequestEcho}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.RequestEcho)
        com.github.jtmsp.types.Types.RequestEchoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestEcho_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestEcho_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.RequestEcho.class, com.github.jtmsp.types.Types.RequestEcho.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.RequestEcho.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestEcho_descriptor;
      }

      public com.github.jtmsp.types.Types.RequestEcho getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.RequestEcho.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.RequestEcho build() {
        com.github.jtmsp.types.Types.RequestEcho result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.RequestEcho buildPartial() {
        com.github.jtmsp.types.Types.RequestEcho result = new com.github.jtmsp.types.Types.RequestEcho(this);
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.RequestEcho) {
          return mergeFrom((com.github.jtmsp.types.Types.RequestEcho)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.RequestEcho other) {
        if (other == com.github.jtmsp.types.Types.RequestEcho.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.RequestEcho parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.RequestEcho) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.RequestEcho)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.RequestEcho)
    private static final com.github.jtmsp.types.Types.RequestEcho DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.RequestEcho();
    }

    public static com.github.jtmsp.types.Types.RequestEcho getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestEcho>
        PARSER = new com.google.protobuf.AbstractParser<RequestEcho>() {
      public RequestEcho parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestEcho(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestEcho> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestEcho> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.RequestEcho getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestFlushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.RequestFlush)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.RequestFlush}
   */
  public  static final class RequestFlush extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.RequestFlush)
      RequestFlushOrBuilder {
    // Use RequestFlush.newBuilder() to construct.
    private RequestFlush(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestFlush() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestFlush(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestFlush_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestFlush_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.RequestFlush.class, com.github.jtmsp.types.Types.RequestFlush.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.RequestFlush parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestFlush parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestFlush parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestFlush parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestFlush parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestFlush parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestFlush parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestFlush parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestFlush parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestFlush parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.RequestFlush prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.RequestFlush}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.RequestFlush)
        com.github.jtmsp.types.Types.RequestFlushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestFlush_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestFlush_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.RequestFlush.class, com.github.jtmsp.types.Types.RequestFlush.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.RequestFlush.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestFlush_descriptor;
      }

      public com.github.jtmsp.types.Types.RequestFlush getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.RequestFlush.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.RequestFlush build() {
        com.github.jtmsp.types.Types.RequestFlush result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.RequestFlush buildPartial() {
        com.github.jtmsp.types.Types.RequestFlush result = new com.github.jtmsp.types.Types.RequestFlush(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.RequestFlush) {
          return mergeFrom((com.github.jtmsp.types.Types.RequestFlush)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.RequestFlush other) {
        if (other == com.github.jtmsp.types.Types.RequestFlush.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.RequestFlush parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.RequestFlush) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.RequestFlush)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.RequestFlush)
    private static final com.github.jtmsp.types.Types.RequestFlush DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.RequestFlush();
    }

    public static com.github.jtmsp.types.Types.RequestFlush getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestFlush>
        PARSER = new com.google.protobuf.AbstractParser<RequestFlush>() {
      public RequestFlush parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestFlush(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestFlush> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestFlush> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.RequestFlush getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.RequestInfo)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.RequestInfo}
   */
  public  static final class RequestInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.RequestInfo)
      RequestInfoOrBuilder {
    // Use RequestInfo.newBuilder() to construct.
    private RequestInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestInfo() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.RequestInfo.class, com.github.jtmsp.types.Types.RequestInfo.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.RequestInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.RequestInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.RequestInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.RequestInfo)
        com.github.jtmsp.types.Types.RequestInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.RequestInfo.class, com.github.jtmsp.types.Types.RequestInfo.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.RequestInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestInfo_descriptor;
      }

      public com.github.jtmsp.types.Types.RequestInfo getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.RequestInfo.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.RequestInfo build() {
        com.github.jtmsp.types.Types.RequestInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.RequestInfo buildPartial() {
        com.github.jtmsp.types.Types.RequestInfo result = new com.github.jtmsp.types.Types.RequestInfo(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.RequestInfo) {
          return mergeFrom((com.github.jtmsp.types.Types.RequestInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.RequestInfo other) {
        if (other == com.github.jtmsp.types.Types.RequestInfo.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.RequestInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.RequestInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.RequestInfo)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.RequestInfo)
    private static final com.github.jtmsp.types.Types.RequestInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.RequestInfo();
    }

    public static com.github.jtmsp.types.Types.RequestInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestInfo>
        PARSER = new com.google.protobuf.AbstractParser<RequestInfo>() {
      public RequestInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestInfo> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.RequestInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestSetOptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.RequestSetOption)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <code>optional string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>optional string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <code>optional string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.RequestSetOption}
   */
  public  static final class RequestSetOption extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.RequestSetOption)
      RequestSetOptionOrBuilder {
    // Use RequestSetOption.newBuilder() to construct.
    private RequestSetOption(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestSetOption() {
      key_ = "";
      value_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestSetOption(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestSetOption_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestSetOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.RequestSetOption.class, com.github.jtmsp.types.Types.RequestSetOption.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <code>optional string key = 1;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>optional string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile java.lang.Object value_;
    /**
     * <code>optional string value = 2;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>optional string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.RequestSetOption parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestSetOption parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestSetOption parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestSetOption parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestSetOption parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestSetOption parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestSetOption parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestSetOption parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestSetOption parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestSetOption parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.RequestSetOption prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.RequestSetOption}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.RequestSetOption)
        com.github.jtmsp.types.Types.RequestSetOptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestSetOption_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestSetOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.RequestSetOption.class, com.github.jtmsp.types.Types.RequestSetOption.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.RequestSetOption.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        key_ = "";

        value_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestSetOption_descriptor;
      }

      public com.github.jtmsp.types.Types.RequestSetOption getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.RequestSetOption.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.RequestSetOption build() {
        com.github.jtmsp.types.Types.RequestSetOption result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.RequestSetOption buildPartial() {
        com.github.jtmsp.types.Types.RequestSetOption result = new com.github.jtmsp.types.Types.RequestSetOption(this);
        result.key_ = key_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.RequestSetOption) {
          return mergeFrom((com.github.jtmsp.types.Types.RequestSetOption)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.RequestSetOption other) {
        if (other == com.github.jtmsp.types.Types.RequestSetOption.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.RequestSetOption parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.RequestSetOption) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>optional string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 1;</code>
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>optional string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.RequestSetOption)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.RequestSetOption)
    private static final com.github.jtmsp.types.Types.RequestSetOption DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.RequestSetOption();
    }

    public static com.github.jtmsp.types.Types.RequestSetOption getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestSetOption>
        PARSER = new com.google.protobuf.AbstractParser<RequestSetOption>() {
      public RequestSetOption parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestSetOption(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestSetOption> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestSetOption> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.RequestSetOption getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestAppendTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.RequestAppendTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes tx = 1;</code>
     */
    com.google.protobuf.ByteString getTx();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.RequestAppendTx}
   */
  public  static final class RequestAppendTx extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.RequestAppendTx)
      RequestAppendTxOrBuilder {
    // Use RequestAppendTx.newBuilder() to construct.
    private RequestAppendTx(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestAppendTx() {
      tx_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestAppendTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              tx_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestAppendTx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestAppendTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.RequestAppendTx.class, com.github.jtmsp.types.Types.RequestAppendTx.Builder.class);
    }

    public static final int TX_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString tx_;
    /**
     * <code>optional bytes tx = 1;</code>
     */
    public com.google.protobuf.ByteString getTx() {
      return tx_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!tx_.isEmpty()) {
        output.writeBytes(1, tx_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!tx_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, tx_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.RequestAppendTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestAppendTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestAppendTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestAppendTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestAppendTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestAppendTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestAppendTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestAppendTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestAppendTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestAppendTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.RequestAppendTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.RequestAppendTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.RequestAppendTx)
        com.github.jtmsp.types.Types.RequestAppendTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestAppendTx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestAppendTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.RequestAppendTx.class, com.github.jtmsp.types.Types.RequestAppendTx.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.RequestAppendTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        tx_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestAppendTx_descriptor;
      }

      public com.github.jtmsp.types.Types.RequestAppendTx getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.RequestAppendTx.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.RequestAppendTx build() {
        com.github.jtmsp.types.Types.RequestAppendTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.RequestAppendTx buildPartial() {
        com.github.jtmsp.types.Types.RequestAppendTx result = new com.github.jtmsp.types.Types.RequestAppendTx(this);
        result.tx_ = tx_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.RequestAppendTx) {
          return mergeFrom((com.github.jtmsp.types.Types.RequestAppendTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.RequestAppendTx other) {
        if (other == com.github.jtmsp.types.Types.RequestAppendTx.getDefaultInstance()) return this;
        if (other.getTx() != com.google.protobuf.ByteString.EMPTY) {
          setTx(other.getTx());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.RequestAppendTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.RequestAppendTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString tx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes tx = 1;</code>
       */
      public com.google.protobuf.ByteString getTx() {
        return tx_;
      }
      /**
       * <code>optional bytes tx = 1;</code>
       */
      public Builder setTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes tx = 1;</code>
       */
      public Builder clearTx() {
        
        tx_ = getDefaultInstance().getTx();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.RequestAppendTx)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.RequestAppendTx)
    private static final com.github.jtmsp.types.Types.RequestAppendTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.RequestAppendTx();
    }

    public static com.github.jtmsp.types.Types.RequestAppendTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestAppendTx>
        PARSER = new com.google.protobuf.AbstractParser<RequestAppendTx>() {
      public RequestAppendTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestAppendTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestAppendTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestAppendTx> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.RequestAppendTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestCheckTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.RequestCheckTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes tx = 1;</code>
     */
    com.google.protobuf.ByteString getTx();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.RequestCheckTx}
   */
  public  static final class RequestCheckTx extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.RequestCheckTx)
      RequestCheckTxOrBuilder {
    // Use RequestCheckTx.newBuilder() to construct.
    private RequestCheckTx(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestCheckTx() {
      tx_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestCheckTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              tx_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestCheckTx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestCheckTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.RequestCheckTx.class, com.github.jtmsp.types.Types.RequestCheckTx.Builder.class);
    }

    public static final int TX_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString tx_;
    /**
     * <code>optional bytes tx = 1;</code>
     */
    public com.google.protobuf.ByteString getTx() {
      return tx_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!tx_.isEmpty()) {
        output.writeBytes(1, tx_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!tx_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, tx_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.RequestCheckTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestCheckTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestCheckTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestCheckTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestCheckTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestCheckTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestCheckTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestCheckTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestCheckTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestCheckTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.RequestCheckTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.RequestCheckTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.RequestCheckTx)
        com.github.jtmsp.types.Types.RequestCheckTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestCheckTx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestCheckTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.RequestCheckTx.class, com.github.jtmsp.types.Types.RequestCheckTx.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.RequestCheckTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        tx_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestCheckTx_descriptor;
      }

      public com.github.jtmsp.types.Types.RequestCheckTx getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.RequestCheckTx.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.RequestCheckTx build() {
        com.github.jtmsp.types.Types.RequestCheckTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.RequestCheckTx buildPartial() {
        com.github.jtmsp.types.Types.RequestCheckTx result = new com.github.jtmsp.types.Types.RequestCheckTx(this);
        result.tx_ = tx_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.RequestCheckTx) {
          return mergeFrom((com.github.jtmsp.types.Types.RequestCheckTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.RequestCheckTx other) {
        if (other == com.github.jtmsp.types.Types.RequestCheckTx.getDefaultInstance()) return this;
        if (other.getTx() != com.google.protobuf.ByteString.EMPTY) {
          setTx(other.getTx());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.RequestCheckTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.RequestCheckTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString tx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes tx = 1;</code>
       */
      public com.google.protobuf.ByteString getTx() {
        return tx_;
      }
      /**
       * <code>optional bytes tx = 1;</code>
       */
      public Builder setTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes tx = 1;</code>
       */
      public Builder clearTx() {
        
        tx_ = getDefaultInstance().getTx();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.RequestCheckTx)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.RequestCheckTx)
    private static final com.github.jtmsp.types.Types.RequestCheckTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.RequestCheckTx();
    }

    public static com.github.jtmsp.types.Types.RequestCheckTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestCheckTx>
        PARSER = new com.google.protobuf.AbstractParser<RequestCheckTx>() {
      public RequestCheckTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestCheckTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestCheckTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestCheckTx> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.RequestCheckTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestQueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.RequestQuery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes query = 1;</code>
     */
    com.google.protobuf.ByteString getQuery();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.RequestQuery}
   */
  public  static final class RequestQuery extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.RequestQuery)
      RequestQueryOrBuilder {
    // Use RequestQuery.newBuilder() to construct.
    private RequestQuery(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestQuery() {
      query_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestQuery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              query_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestQuery_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.RequestQuery.class, com.github.jtmsp.types.Types.RequestQuery.Builder.class);
    }

    public static final int QUERY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString query_;
    /**
     * <code>optional bytes query = 1;</code>
     */
    public com.google.protobuf.ByteString getQuery() {
      return query_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!query_.isEmpty()) {
        output.writeBytes(1, query_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!query_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, query_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.RequestQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.RequestQuery prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.RequestQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.RequestQuery)
        com.github.jtmsp.types.Types.RequestQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestQuery_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestQuery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.RequestQuery.class, com.github.jtmsp.types.Types.RequestQuery.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.RequestQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        query_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestQuery_descriptor;
      }

      public com.github.jtmsp.types.Types.RequestQuery getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.RequestQuery.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.RequestQuery build() {
        com.github.jtmsp.types.Types.RequestQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.RequestQuery buildPartial() {
        com.github.jtmsp.types.Types.RequestQuery result = new com.github.jtmsp.types.Types.RequestQuery(this);
        result.query_ = query_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.RequestQuery) {
          return mergeFrom((com.github.jtmsp.types.Types.RequestQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.RequestQuery other) {
        if (other == com.github.jtmsp.types.Types.RequestQuery.getDefaultInstance()) return this;
        if (other.getQuery() != com.google.protobuf.ByteString.EMPTY) {
          setQuery(other.getQuery());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.RequestQuery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.RequestQuery) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString query_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes query = 1;</code>
       */
      public com.google.protobuf.ByteString getQuery() {
        return query_;
      }
      /**
       * <code>optional bytes query = 1;</code>
       */
      public Builder setQuery(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        query_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes query = 1;</code>
       */
      public Builder clearQuery() {
        
        query_ = getDefaultInstance().getQuery();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.RequestQuery)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.RequestQuery)
    private static final com.github.jtmsp.types.Types.RequestQuery DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.RequestQuery();
    }

    public static com.github.jtmsp.types.Types.RequestQuery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestQuery>
        PARSER = new com.google.protobuf.AbstractParser<RequestQuery>() {
      public RequestQuery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestQuery(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestQuery> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestQuery> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.RequestQuery getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestCommitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.RequestCommit)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.RequestCommit}
   */
  public  static final class RequestCommit extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.RequestCommit)
      RequestCommitOrBuilder {
    // Use RequestCommit.newBuilder() to construct.
    private RequestCommit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestCommit() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestCommit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestCommit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestCommit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.RequestCommit.class, com.github.jtmsp.types.Types.RequestCommit.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.RequestCommit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestCommit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestCommit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestCommit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestCommit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestCommit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestCommit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestCommit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestCommit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestCommit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.RequestCommit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.RequestCommit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.RequestCommit)
        com.github.jtmsp.types.Types.RequestCommitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestCommit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestCommit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.RequestCommit.class, com.github.jtmsp.types.Types.RequestCommit.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.RequestCommit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestCommit_descriptor;
      }

      public com.github.jtmsp.types.Types.RequestCommit getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.RequestCommit.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.RequestCommit build() {
        com.github.jtmsp.types.Types.RequestCommit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.RequestCommit buildPartial() {
        com.github.jtmsp.types.Types.RequestCommit result = new com.github.jtmsp.types.Types.RequestCommit(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.RequestCommit) {
          return mergeFrom((com.github.jtmsp.types.Types.RequestCommit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.RequestCommit other) {
        if (other == com.github.jtmsp.types.Types.RequestCommit.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.RequestCommit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.RequestCommit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.RequestCommit)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.RequestCommit)
    private static final com.github.jtmsp.types.Types.RequestCommit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.RequestCommit();
    }

    public static com.github.jtmsp.types.Types.RequestCommit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestCommit>
        PARSER = new com.google.protobuf.AbstractParser<RequestCommit>() {
      public RequestCommit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestCommit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestCommit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestCommit> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.RequestCommit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestInitChainOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.RequestInitChain)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
     */
    java.util.List<com.github.jtmsp.types.Types.Validator> 
        getValidatorsList();
    /**
     * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
     */
    com.github.jtmsp.types.Types.Validator getValidators(int index);
    /**
     * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
     */
    int getValidatorsCount();
    /**
     * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
     */
    java.util.List<? extends com.github.jtmsp.types.Types.ValidatorOrBuilder> 
        getValidatorsOrBuilderList();
    /**
     * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
     */
    com.github.jtmsp.types.Types.ValidatorOrBuilder getValidatorsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.RequestInitChain}
   */
  public  static final class RequestInitChain extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.RequestInitChain)
      RequestInitChainOrBuilder {
    // Use RequestInitChain.newBuilder() to construct.
    private RequestInitChain(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestInitChain() {
      validators_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestInitChain(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                validators_ = new java.util.ArrayList<com.github.jtmsp.types.Types.Validator>();
                mutable_bitField0_ |= 0x00000001;
              }
              validators_.add(input.readMessage(com.github.jtmsp.types.Types.Validator.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          validators_ = java.util.Collections.unmodifiableList(validators_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestInitChain_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestInitChain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.RequestInitChain.class, com.github.jtmsp.types.Types.RequestInitChain.Builder.class);
    }

    public static final int VALIDATORS_FIELD_NUMBER = 1;
    private java.util.List<com.github.jtmsp.types.Types.Validator> validators_;
    /**
     * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
     */
    public java.util.List<com.github.jtmsp.types.Types.Validator> getValidatorsList() {
      return validators_;
    }
    /**
     * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
     */
    public java.util.List<? extends com.github.jtmsp.types.Types.ValidatorOrBuilder> 
        getValidatorsOrBuilderList() {
      return validators_;
    }
    /**
     * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
     */
    public int getValidatorsCount() {
      return validators_.size();
    }
    /**
     * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
     */
    public com.github.jtmsp.types.Types.Validator getValidators(int index) {
      return validators_.get(index);
    }
    /**
     * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
     */
    public com.github.jtmsp.types.Types.ValidatorOrBuilder getValidatorsOrBuilder(
        int index) {
      return validators_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < validators_.size(); i++) {
        output.writeMessage(1, validators_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < validators_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, validators_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.RequestInitChain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestInitChain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestInitChain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestInitChain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestInitChain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestInitChain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestInitChain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestInitChain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestInitChain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestInitChain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.RequestInitChain prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.RequestInitChain}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.RequestInitChain)
        com.github.jtmsp.types.Types.RequestInitChainOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestInitChain_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestInitChain_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.RequestInitChain.class, com.github.jtmsp.types.Types.RequestInitChain.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.RequestInitChain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValidatorsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (validatorsBuilder_ == null) {
          validators_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          validatorsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestInitChain_descriptor;
      }

      public com.github.jtmsp.types.Types.RequestInitChain getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.RequestInitChain.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.RequestInitChain build() {
        com.github.jtmsp.types.Types.RequestInitChain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.RequestInitChain buildPartial() {
        com.github.jtmsp.types.Types.RequestInitChain result = new com.github.jtmsp.types.Types.RequestInitChain(this);
        int from_bitField0_ = bitField0_;
        if (validatorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            validators_ = java.util.Collections.unmodifiableList(validators_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.validators_ = validators_;
        } else {
          result.validators_ = validatorsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.RequestInitChain) {
          return mergeFrom((com.github.jtmsp.types.Types.RequestInitChain)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.RequestInitChain other) {
        if (other == com.github.jtmsp.types.Types.RequestInitChain.getDefaultInstance()) return this;
        if (validatorsBuilder_ == null) {
          if (!other.validators_.isEmpty()) {
            if (validators_.isEmpty()) {
              validators_ = other.validators_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValidatorsIsMutable();
              validators_.addAll(other.validators_);
            }
            onChanged();
          }
        } else {
          if (!other.validators_.isEmpty()) {
            if (validatorsBuilder_.isEmpty()) {
              validatorsBuilder_.dispose();
              validatorsBuilder_ = null;
              validators_ = other.validators_;
              bitField0_ = (bitField0_ & ~0x00000001);
              validatorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValidatorsFieldBuilder() : null;
            } else {
              validatorsBuilder_.addAllMessages(other.validators_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.RequestInitChain parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.RequestInitChain) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.github.jtmsp.types.Types.Validator> validators_ =
        java.util.Collections.emptyList();
      private void ensureValidatorsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          validators_ = new java.util.ArrayList<com.github.jtmsp.types.Types.Validator>(validators_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.github.jtmsp.types.Types.Validator, com.github.jtmsp.types.Types.Validator.Builder, com.github.jtmsp.types.Types.ValidatorOrBuilder> validatorsBuilder_;

      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public java.util.List<com.github.jtmsp.types.Types.Validator> getValidatorsList() {
        if (validatorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(validators_);
        } else {
          return validatorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public int getValidatorsCount() {
        if (validatorsBuilder_ == null) {
          return validators_.size();
        } else {
          return validatorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public com.github.jtmsp.types.Types.Validator getValidators(int index) {
        if (validatorsBuilder_ == null) {
          return validators_.get(index);
        } else {
          return validatorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public Builder setValidators(
          int index, com.github.jtmsp.types.Types.Validator value) {
        if (validatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValidatorsIsMutable();
          validators_.set(index, value);
          onChanged();
        } else {
          validatorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public Builder setValidators(
          int index, com.github.jtmsp.types.Types.Validator.Builder builderForValue) {
        if (validatorsBuilder_ == null) {
          ensureValidatorsIsMutable();
          validators_.set(index, builderForValue.build());
          onChanged();
        } else {
          validatorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public Builder addValidators(com.github.jtmsp.types.Types.Validator value) {
        if (validatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValidatorsIsMutable();
          validators_.add(value);
          onChanged();
        } else {
          validatorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public Builder addValidators(
          int index, com.github.jtmsp.types.Types.Validator value) {
        if (validatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValidatorsIsMutable();
          validators_.add(index, value);
          onChanged();
        } else {
          validatorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public Builder addValidators(
          com.github.jtmsp.types.Types.Validator.Builder builderForValue) {
        if (validatorsBuilder_ == null) {
          ensureValidatorsIsMutable();
          validators_.add(builderForValue.build());
          onChanged();
        } else {
          validatorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public Builder addValidators(
          int index, com.github.jtmsp.types.Types.Validator.Builder builderForValue) {
        if (validatorsBuilder_ == null) {
          ensureValidatorsIsMutable();
          validators_.add(index, builderForValue.build());
          onChanged();
        } else {
          validatorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public Builder addAllValidators(
          java.lang.Iterable<? extends com.github.jtmsp.types.Types.Validator> values) {
        if (validatorsBuilder_ == null) {
          ensureValidatorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, validators_);
          onChanged();
        } else {
          validatorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public Builder clearValidators() {
        if (validatorsBuilder_ == null) {
          validators_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          validatorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public Builder removeValidators(int index) {
        if (validatorsBuilder_ == null) {
          ensureValidatorsIsMutable();
          validators_.remove(index);
          onChanged();
        } else {
          validatorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public com.github.jtmsp.types.Types.Validator.Builder getValidatorsBuilder(
          int index) {
        return getValidatorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public com.github.jtmsp.types.Types.ValidatorOrBuilder getValidatorsOrBuilder(
          int index) {
        if (validatorsBuilder_ == null) {
          return validators_.get(index);  } else {
          return validatorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public java.util.List<? extends com.github.jtmsp.types.Types.ValidatorOrBuilder> 
           getValidatorsOrBuilderList() {
        if (validatorsBuilder_ != null) {
          return validatorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(validators_);
        }
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public com.github.jtmsp.types.Types.Validator.Builder addValidatorsBuilder() {
        return getValidatorsFieldBuilder().addBuilder(
            com.github.jtmsp.types.Types.Validator.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public com.github.jtmsp.types.Types.Validator.Builder addValidatorsBuilder(
          int index) {
        return getValidatorsFieldBuilder().addBuilder(
            index, com.github.jtmsp.types.Types.Validator.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator validators = 1;</code>
       */
      public java.util.List<com.github.jtmsp.types.Types.Validator.Builder> 
           getValidatorsBuilderList() {
        return getValidatorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.github.jtmsp.types.Types.Validator, com.github.jtmsp.types.Types.Validator.Builder, com.github.jtmsp.types.Types.ValidatorOrBuilder> 
          getValidatorsFieldBuilder() {
        if (validatorsBuilder_ == null) {
          validatorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.github.jtmsp.types.Types.Validator, com.github.jtmsp.types.Types.Validator.Builder, com.github.jtmsp.types.Types.ValidatorOrBuilder>(
                  validators_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          validators_ = null;
        }
        return validatorsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.RequestInitChain)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.RequestInitChain)
    private static final com.github.jtmsp.types.Types.RequestInitChain DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.RequestInitChain();
    }

    public static com.github.jtmsp.types.Types.RequestInitChain getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestInitChain>
        PARSER = new com.google.protobuf.AbstractParser<RequestInitChain>() {
      public RequestInitChain parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestInitChain(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestInitChain> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestInitChain> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.RequestInitChain getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestBeginBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.RequestBeginBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 height = 1;</code>
     */
    long getHeight();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.RequestBeginBlock}
   */
  public  static final class RequestBeginBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.RequestBeginBlock)
      RequestBeginBlockOrBuilder {
    // Use RequestBeginBlock.newBuilder() to construct.
    private RequestBeginBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestBeginBlock() {
      height_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestBeginBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              height_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestBeginBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestBeginBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.RequestBeginBlock.class, com.github.jtmsp.types.Types.RequestBeginBlock.Builder.class);
    }

    public static final int HEIGHT_FIELD_NUMBER = 1;
    private long height_;
    /**
     * <code>optional uint64 height = 1;</code>
     */
    public long getHeight() {
      return height_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (height_ != 0L) {
        output.writeUInt64(1, height_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, height_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.RequestBeginBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestBeginBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestBeginBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestBeginBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestBeginBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestBeginBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestBeginBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestBeginBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestBeginBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestBeginBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.RequestBeginBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.RequestBeginBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.RequestBeginBlock)
        com.github.jtmsp.types.Types.RequestBeginBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestBeginBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestBeginBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.RequestBeginBlock.class, com.github.jtmsp.types.Types.RequestBeginBlock.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.RequestBeginBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        height_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestBeginBlock_descriptor;
      }

      public com.github.jtmsp.types.Types.RequestBeginBlock getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.RequestBeginBlock.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.RequestBeginBlock build() {
        com.github.jtmsp.types.Types.RequestBeginBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.RequestBeginBlock buildPartial() {
        com.github.jtmsp.types.Types.RequestBeginBlock result = new com.github.jtmsp.types.Types.RequestBeginBlock(this);
        result.height_ = height_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.RequestBeginBlock) {
          return mergeFrom((com.github.jtmsp.types.Types.RequestBeginBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.RequestBeginBlock other) {
        if (other == com.github.jtmsp.types.Types.RequestBeginBlock.getDefaultInstance()) return this;
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.RequestBeginBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.RequestBeginBlock) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long height_ ;
      /**
       * <code>optional uint64 height = 1;</code>
       */
      public long getHeight() {
        return height_;
      }
      /**
       * <code>optional uint64 height = 1;</code>
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 height = 1;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.RequestBeginBlock)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.RequestBeginBlock)
    private static final com.github.jtmsp.types.Types.RequestBeginBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.RequestBeginBlock();
    }

    public static com.github.jtmsp.types.Types.RequestBeginBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestBeginBlock>
        PARSER = new com.google.protobuf.AbstractParser<RequestBeginBlock>() {
      public RequestBeginBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestBeginBlock(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestBeginBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestBeginBlock> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.RequestBeginBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestEndBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.RequestEndBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 height = 1;</code>
     */
    long getHeight();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.RequestEndBlock}
   */
  public  static final class RequestEndBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.RequestEndBlock)
      RequestEndBlockOrBuilder {
    // Use RequestEndBlock.newBuilder() to construct.
    private RequestEndBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestEndBlock() {
      height_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestEndBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              height_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestEndBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestEndBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.RequestEndBlock.class, com.github.jtmsp.types.Types.RequestEndBlock.Builder.class);
    }

    public static final int HEIGHT_FIELD_NUMBER = 1;
    private long height_;
    /**
     * <code>optional uint64 height = 1;</code>
     */
    public long getHeight() {
      return height_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (height_ != 0L) {
        output.writeUInt64(1, height_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, height_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.RequestEndBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestEndBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestEndBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.RequestEndBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestEndBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestEndBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestEndBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestEndBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.RequestEndBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.RequestEndBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.RequestEndBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.RequestEndBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.RequestEndBlock)
        com.github.jtmsp.types.Types.RequestEndBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestEndBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestEndBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.RequestEndBlock.class, com.github.jtmsp.types.Types.RequestEndBlock.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.RequestEndBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        height_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_RequestEndBlock_descriptor;
      }

      public com.github.jtmsp.types.Types.RequestEndBlock getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.RequestEndBlock.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.RequestEndBlock build() {
        com.github.jtmsp.types.Types.RequestEndBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.RequestEndBlock buildPartial() {
        com.github.jtmsp.types.Types.RequestEndBlock result = new com.github.jtmsp.types.Types.RequestEndBlock(this);
        result.height_ = height_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.RequestEndBlock) {
          return mergeFrom((com.github.jtmsp.types.Types.RequestEndBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.RequestEndBlock other) {
        if (other == com.github.jtmsp.types.Types.RequestEndBlock.getDefaultInstance()) return this;
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.RequestEndBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.RequestEndBlock) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long height_ ;
      /**
       * <code>optional uint64 height = 1;</code>
       */
      public long getHeight() {
        return height_;
      }
      /**
       * <code>optional uint64 height = 1;</code>
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 height = 1;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.RequestEndBlock)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.RequestEndBlock)
    private static final com.github.jtmsp.types.Types.RequestEndBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.RequestEndBlock();
    }

    public static com.github.jtmsp.types.Types.RequestEndBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestEndBlock>
        PARSER = new com.google.protobuf.AbstractParser<RequestEndBlock>() {
      public RequestEndBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestEndBlock(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestEndBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestEndBlock> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.RequestEndBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
     */
    com.github.jtmsp.types.Types.ResponseException getException();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
     */
    com.github.jtmsp.types.Types.ResponseExceptionOrBuilder getExceptionOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
     */
    com.github.jtmsp.types.Types.ResponseEcho getEcho();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
     */
    com.github.jtmsp.types.Types.ResponseEchoOrBuilder getEchoOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
     */
    com.github.jtmsp.types.Types.ResponseFlush getFlush();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
     */
    com.github.jtmsp.types.Types.ResponseFlushOrBuilder getFlushOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
     */
    com.github.jtmsp.types.Types.ResponseInfo getInfo();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
     */
    com.github.jtmsp.types.Types.ResponseInfoOrBuilder getInfoOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
     */
    com.github.jtmsp.types.Types.ResponseSetOption getSetOption();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
     */
    com.github.jtmsp.types.Types.ResponseSetOptionOrBuilder getSetOptionOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
     */
    com.github.jtmsp.types.Types.ResponseAppendTx getAppendTx();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
     */
    com.github.jtmsp.types.Types.ResponseAppendTxOrBuilder getAppendTxOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
     */
    com.github.jtmsp.types.Types.ResponseCheckTx getCheckTx();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
     */
    com.github.jtmsp.types.Types.ResponseCheckTxOrBuilder getCheckTxOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
     */
    com.github.jtmsp.types.Types.ResponseCommit getCommit();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
     */
    com.github.jtmsp.types.Types.ResponseCommitOrBuilder getCommitOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
     */
    com.github.jtmsp.types.Types.ResponseQuery getQuery();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
     */
    com.github.jtmsp.types.Types.ResponseQueryOrBuilder getQueryOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
     */
    com.github.jtmsp.types.Types.ResponseInitChain getInitChain();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
     */
    com.github.jtmsp.types.Types.ResponseInitChainOrBuilder getInitChainOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
     */
    com.github.jtmsp.types.Types.ResponseBeginBlock getBeginBlock();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
     */
    com.github.jtmsp.types.Types.ResponseBeginBlockOrBuilder getBeginBlockOrBuilder();

    /**
     * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
     */
    com.github.jtmsp.types.Types.ResponseEndBlock getEndBlock();
    /**
     * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
     */
    com.github.jtmsp.types.Types.ResponseEndBlockOrBuilder getEndBlockOrBuilder();

    public com.github.jtmsp.types.Types.Response.ValueCase getValueCase();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.github.jtmsp.types.Types.ResponseException.Builder subBuilder = null;
              if (valueCase_ == 1) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseException) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseException.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseException) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 1;
              break;
            }
            case 18: {
              com.github.jtmsp.types.Types.ResponseEcho.Builder subBuilder = null;
              if (valueCase_ == 2) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseEcho) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseEcho.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseEcho) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 2;
              break;
            }
            case 26: {
              com.github.jtmsp.types.Types.ResponseFlush.Builder subBuilder = null;
              if (valueCase_ == 3) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseFlush) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseFlush.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseFlush) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 3;
              break;
            }
            case 34: {
              com.github.jtmsp.types.Types.ResponseInfo.Builder subBuilder = null;
              if (valueCase_ == 4) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseInfo) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseInfo) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 4;
              break;
            }
            case 42: {
              com.github.jtmsp.types.Types.ResponseSetOption.Builder subBuilder = null;
              if (valueCase_ == 5) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseSetOption) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseSetOption.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseSetOption) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 5;
              break;
            }
            case 50: {
              com.github.jtmsp.types.Types.ResponseAppendTx.Builder subBuilder = null;
              if (valueCase_ == 6) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseAppendTx) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseAppendTx.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseAppendTx) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 6;
              break;
            }
            case 58: {
              com.github.jtmsp.types.Types.ResponseCheckTx.Builder subBuilder = null;
              if (valueCase_ == 7) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseCheckTx) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseCheckTx.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseCheckTx) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 7;
              break;
            }
            case 66: {
              com.github.jtmsp.types.Types.ResponseCommit.Builder subBuilder = null;
              if (valueCase_ == 8) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseCommit) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseCommit.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseCommit) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 8;
              break;
            }
            case 74: {
              com.github.jtmsp.types.Types.ResponseQuery.Builder subBuilder = null;
              if (valueCase_ == 9) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseQuery) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseQuery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseQuery) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 9;
              break;
            }
            case 82: {
              com.github.jtmsp.types.Types.ResponseInitChain.Builder subBuilder = null;
              if (valueCase_ == 10) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseInitChain) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseInitChain.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseInitChain) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 10;
              break;
            }
            case 90: {
              com.github.jtmsp.types.Types.ResponseBeginBlock.Builder subBuilder = null;
              if (valueCase_ == 11) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseBeginBlock) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseBeginBlock.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseBeginBlock) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 11;
              break;
            }
            case 98: {
              com.github.jtmsp.types.Types.ResponseEndBlock.Builder subBuilder = null;
              if (valueCase_ == 12) {
                subBuilder = ((com.github.jtmsp.types.Types.ResponseEndBlock) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtmsp.types.Types.ResponseEndBlock.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtmsp.types.Types.ResponseEndBlock) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 12;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.Response.class, com.github.jtmsp.types.Types.Response.Builder.class);
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      EXCEPTION(1),
      ECHO(2),
      FLUSH(3),
      INFO(4),
      SET_OPTION(5),
      APPEND_TX(6),
      CHECK_TX(7),
      COMMIT(8),
      QUERY(9),
      INIT_CHAIN(10),
      BEGIN_BLOCK(11),
      END_BLOCK(12),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 1: return EXCEPTION;
          case 2: return ECHO;
          case 3: return FLUSH;
          case 4: return INFO;
          case 5: return SET_OPTION;
          case 6: return APPEND_TX;
          case 7: return CHECK_TX;
          case 8: return COMMIT;
          case 9: return QUERY;
          case 10: return INIT_CHAIN;
          case 11: return BEGIN_BLOCK;
          case 12: return END_BLOCK;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int EXCEPTION_FIELD_NUMBER = 1;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
     */
    public com.github.jtmsp.types.Types.ResponseException getException() {
      if (valueCase_ == 1) {
         return (com.github.jtmsp.types.Types.ResponseException) value_;
      }
      return com.github.jtmsp.types.Types.ResponseException.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
     */
    public com.github.jtmsp.types.Types.ResponseExceptionOrBuilder getExceptionOrBuilder() {
      if (valueCase_ == 1) {
         return (com.github.jtmsp.types.Types.ResponseException) value_;
      }
      return com.github.jtmsp.types.Types.ResponseException.getDefaultInstance();
    }

    public static final int ECHO_FIELD_NUMBER = 2;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
     */
    public com.github.jtmsp.types.Types.ResponseEcho getEcho() {
      if (valueCase_ == 2) {
         return (com.github.jtmsp.types.Types.ResponseEcho) value_;
      }
      return com.github.jtmsp.types.Types.ResponseEcho.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
     */
    public com.github.jtmsp.types.Types.ResponseEchoOrBuilder getEchoOrBuilder() {
      if (valueCase_ == 2) {
         return (com.github.jtmsp.types.Types.ResponseEcho) value_;
      }
      return com.github.jtmsp.types.Types.ResponseEcho.getDefaultInstance();
    }

    public static final int FLUSH_FIELD_NUMBER = 3;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
     */
    public com.github.jtmsp.types.Types.ResponseFlush getFlush() {
      if (valueCase_ == 3) {
         return (com.github.jtmsp.types.Types.ResponseFlush) value_;
      }
      return com.github.jtmsp.types.Types.ResponseFlush.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
     */
    public com.github.jtmsp.types.Types.ResponseFlushOrBuilder getFlushOrBuilder() {
      if (valueCase_ == 3) {
         return (com.github.jtmsp.types.Types.ResponseFlush) value_;
      }
      return com.github.jtmsp.types.Types.ResponseFlush.getDefaultInstance();
    }

    public static final int INFO_FIELD_NUMBER = 4;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
     */
    public com.github.jtmsp.types.Types.ResponseInfo getInfo() {
      if (valueCase_ == 4) {
         return (com.github.jtmsp.types.Types.ResponseInfo) value_;
      }
      return com.github.jtmsp.types.Types.ResponseInfo.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
     */
    public com.github.jtmsp.types.Types.ResponseInfoOrBuilder getInfoOrBuilder() {
      if (valueCase_ == 4) {
         return (com.github.jtmsp.types.Types.ResponseInfo) value_;
      }
      return com.github.jtmsp.types.Types.ResponseInfo.getDefaultInstance();
    }

    public static final int SET_OPTION_FIELD_NUMBER = 5;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
     */
    public com.github.jtmsp.types.Types.ResponseSetOption getSetOption() {
      if (valueCase_ == 5) {
         return (com.github.jtmsp.types.Types.ResponseSetOption) value_;
      }
      return com.github.jtmsp.types.Types.ResponseSetOption.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
     */
    public com.github.jtmsp.types.Types.ResponseSetOptionOrBuilder getSetOptionOrBuilder() {
      if (valueCase_ == 5) {
         return (com.github.jtmsp.types.Types.ResponseSetOption) value_;
      }
      return com.github.jtmsp.types.Types.ResponseSetOption.getDefaultInstance();
    }

    public static final int APPEND_TX_FIELD_NUMBER = 6;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
     */
    public com.github.jtmsp.types.Types.ResponseAppendTx getAppendTx() {
      if (valueCase_ == 6) {
         return (com.github.jtmsp.types.Types.ResponseAppendTx) value_;
      }
      return com.github.jtmsp.types.Types.ResponseAppendTx.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
     */
    public com.github.jtmsp.types.Types.ResponseAppendTxOrBuilder getAppendTxOrBuilder() {
      if (valueCase_ == 6) {
         return (com.github.jtmsp.types.Types.ResponseAppendTx) value_;
      }
      return com.github.jtmsp.types.Types.ResponseAppendTx.getDefaultInstance();
    }

    public static final int CHECK_TX_FIELD_NUMBER = 7;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
     */
    public com.github.jtmsp.types.Types.ResponseCheckTx getCheckTx() {
      if (valueCase_ == 7) {
         return (com.github.jtmsp.types.Types.ResponseCheckTx) value_;
      }
      return com.github.jtmsp.types.Types.ResponseCheckTx.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
     */
    public com.github.jtmsp.types.Types.ResponseCheckTxOrBuilder getCheckTxOrBuilder() {
      if (valueCase_ == 7) {
         return (com.github.jtmsp.types.Types.ResponseCheckTx) value_;
      }
      return com.github.jtmsp.types.Types.ResponseCheckTx.getDefaultInstance();
    }

    public static final int COMMIT_FIELD_NUMBER = 8;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
     */
    public com.github.jtmsp.types.Types.ResponseCommit getCommit() {
      if (valueCase_ == 8) {
         return (com.github.jtmsp.types.Types.ResponseCommit) value_;
      }
      return com.github.jtmsp.types.Types.ResponseCommit.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
     */
    public com.github.jtmsp.types.Types.ResponseCommitOrBuilder getCommitOrBuilder() {
      if (valueCase_ == 8) {
         return (com.github.jtmsp.types.Types.ResponseCommit) value_;
      }
      return com.github.jtmsp.types.Types.ResponseCommit.getDefaultInstance();
    }

    public static final int QUERY_FIELD_NUMBER = 9;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
     */
    public com.github.jtmsp.types.Types.ResponseQuery getQuery() {
      if (valueCase_ == 9) {
         return (com.github.jtmsp.types.Types.ResponseQuery) value_;
      }
      return com.github.jtmsp.types.Types.ResponseQuery.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
     */
    public com.github.jtmsp.types.Types.ResponseQueryOrBuilder getQueryOrBuilder() {
      if (valueCase_ == 9) {
         return (com.github.jtmsp.types.Types.ResponseQuery) value_;
      }
      return com.github.jtmsp.types.Types.ResponseQuery.getDefaultInstance();
    }

    public static final int INIT_CHAIN_FIELD_NUMBER = 10;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
     */
    public com.github.jtmsp.types.Types.ResponseInitChain getInitChain() {
      if (valueCase_ == 10) {
         return (com.github.jtmsp.types.Types.ResponseInitChain) value_;
      }
      return com.github.jtmsp.types.Types.ResponseInitChain.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
     */
    public com.github.jtmsp.types.Types.ResponseInitChainOrBuilder getInitChainOrBuilder() {
      if (valueCase_ == 10) {
         return (com.github.jtmsp.types.Types.ResponseInitChain) value_;
      }
      return com.github.jtmsp.types.Types.ResponseInitChain.getDefaultInstance();
    }

    public static final int BEGIN_BLOCK_FIELD_NUMBER = 11;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
     */
    public com.github.jtmsp.types.Types.ResponseBeginBlock getBeginBlock() {
      if (valueCase_ == 11) {
         return (com.github.jtmsp.types.Types.ResponseBeginBlock) value_;
      }
      return com.github.jtmsp.types.Types.ResponseBeginBlock.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
     */
    public com.github.jtmsp.types.Types.ResponseBeginBlockOrBuilder getBeginBlockOrBuilder() {
      if (valueCase_ == 11) {
         return (com.github.jtmsp.types.Types.ResponseBeginBlock) value_;
      }
      return com.github.jtmsp.types.Types.ResponseBeginBlock.getDefaultInstance();
    }

    public static final int END_BLOCK_FIELD_NUMBER = 12;
    /**
     * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
     */
    public com.github.jtmsp.types.Types.ResponseEndBlock getEndBlock() {
      if (valueCase_ == 12) {
         return (com.github.jtmsp.types.Types.ResponseEndBlock) value_;
      }
      return com.github.jtmsp.types.Types.ResponseEndBlock.getDefaultInstance();
    }
    /**
     * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
     */
    public com.github.jtmsp.types.Types.ResponseEndBlockOrBuilder getEndBlockOrBuilder() {
      if (valueCase_ == 12) {
         return (com.github.jtmsp.types.Types.ResponseEndBlock) value_;
      }
      return com.github.jtmsp.types.Types.ResponseEndBlock.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (valueCase_ == 1) {
        output.writeMessage(1, (com.github.jtmsp.types.Types.ResponseException) value_);
      }
      if (valueCase_ == 2) {
        output.writeMessage(2, (com.github.jtmsp.types.Types.ResponseEcho) value_);
      }
      if (valueCase_ == 3) {
        output.writeMessage(3, (com.github.jtmsp.types.Types.ResponseFlush) value_);
      }
      if (valueCase_ == 4) {
        output.writeMessage(4, (com.github.jtmsp.types.Types.ResponseInfo) value_);
      }
      if (valueCase_ == 5) {
        output.writeMessage(5, (com.github.jtmsp.types.Types.ResponseSetOption) value_);
      }
      if (valueCase_ == 6) {
        output.writeMessage(6, (com.github.jtmsp.types.Types.ResponseAppendTx) value_);
      }
      if (valueCase_ == 7) {
        output.writeMessage(7, (com.github.jtmsp.types.Types.ResponseCheckTx) value_);
      }
      if (valueCase_ == 8) {
        output.writeMessage(8, (com.github.jtmsp.types.Types.ResponseCommit) value_);
      }
      if (valueCase_ == 9) {
        output.writeMessage(9, (com.github.jtmsp.types.Types.ResponseQuery) value_);
      }
      if (valueCase_ == 10) {
        output.writeMessage(10, (com.github.jtmsp.types.Types.ResponseInitChain) value_);
      }
      if (valueCase_ == 11) {
        output.writeMessage(11, (com.github.jtmsp.types.Types.ResponseBeginBlock) value_);
      }
      if (valueCase_ == 12) {
        output.writeMessage(12, (com.github.jtmsp.types.Types.ResponseEndBlock) value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (valueCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.github.jtmsp.types.Types.ResponseException) value_);
      }
      if (valueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.github.jtmsp.types.Types.ResponseEcho) value_);
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.github.jtmsp.types.Types.ResponseFlush) value_);
      }
      if (valueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.github.jtmsp.types.Types.ResponseInfo) value_);
      }
      if (valueCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.github.jtmsp.types.Types.ResponseSetOption) value_);
      }
      if (valueCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (com.github.jtmsp.types.Types.ResponseAppendTx) value_);
      }
      if (valueCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.github.jtmsp.types.Types.ResponseCheckTx) value_);
      }
      if (valueCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (com.github.jtmsp.types.Types.ResponseCommit) value_);
      }
      if (valueCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.github.jtmsp.types.Types.ResponseQuery) value_);
      }
      if (valueCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (com.github.jtmsp.types.Types.ResponseInitChain) value_);
      }
      if (valueCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (com.github.jtmsp.types.Types.ResponseBeginBlock) value_);
      }
      if (valueCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (com.github.jtmsp.types.Types.ResponseEndBlock) value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.Response)
        com.github.jtmsp.types.Types.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.Response.class, com.github.jtmsp.types.Types.Response.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        valueCase_ = 0;
        value_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Response_descriptor;
      }

      public com.github.jtmsp.types.Types.Response getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.Response.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.Response build() {
        com.github.jtmsp.types.Types.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.Response buildPartial() {
        com.github.jtmsp.types.Types.Response result = new com.github.jtmsp.types.Types.Response(this);
        if (valueCase_ == 1) {
          if (exceptionBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = exceptionBuilder_.build();
          }
        }
        if (valueCase_ == 2) {
          if (echoBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = echoBuilder_.build();
          }
        }
        if (valueCase_ == 3) {
          if (flushBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = flushBuilder_.build();
          }
        }
        if (valueCase_ == 4) {
          if (infoBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = infoBuilder_.build();
          }
        }
        if (valueCase_ == 5) {
          if (setOptionBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = setOptionBuilder_.build();
          }
        }
        if (valueCase_ == 6) {
          if (appendTxBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = appendTxBuilder_.build();
          }
        }
        if (valueCase_ == 7) {
          if (checkTxBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = checkTxBuilder_.build();
          }
        }
        if (valueCase_ == 8) {
          if (commitBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = commitBuilder_.build();
          }
        }
        if (valueCase_ == 9) {
          if (queryBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = queryBuilder_.build();
          }
        }
        if (valueCase_ == 10) {
          if (initChainBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = initChainBuilder_.build();
          }
        }
        if (valueCase_ == 11) {
          if (beginBlockBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = beginBlockBuilder_.build();
          }
        }
        if (valueCase_ == 12) {
          if (endBlockBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = endBlockBuilder_.build();
          }
        }
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.Response) {
          return mergeFrom((com.github.jtmsp.types.Types.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.Response other) {
        if (other == com.github.jtmsp.types.Types.Response.getDefaultInstance()) return this;
        switch (other.getValueCase()) {
          case EXCEPTION: {
            mergeException(other.getException());
            break;
          }
          case ECHO: {
            mergeEcho(other.getEcho());
            break;
          }
          case FLUSH: {
            mergeFlush(other.getFlush());
            break;
          }
          case INFO: {
            mergeInfo(other.getInfo());
            break;
          }
          case SET_OPTION: {
            mergeSetOption(other.getSetOption());
            break;
          }
          case APPEND_TX: {
            mergeAppendTx(other.getAppendTx());
            break;
          }
          case CHECK_TX: {
            mergeCheckTx(other.getCheckTx());
            break;
          }
          case COMMIT: {
            mergeCommit(other.getCommit());
            break;
          }
          case QUERY: {
            mergeQuery(other.getQuery());
            break;
          }
          case INIT_CHAIN: {
            mergeInitChain(other.getInitChain());
            break;
          }
          case BEGIN_BLOCK: {
            mergeBeginBlock(other.getBeginBlock());
            break;
          }
          case END_BLOCK: {
            mergeEndBlock(other.getEndBlock());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseException, com.github.jtmsp.types.Types.ResponseException.Builder, com.github.jtmsp.types.Types.ResponseExceptionOrBuilder> exceptionBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
       */
      public com.github.jtmsp.types.Types.ResponseException getException() {
        if (exceptionBuilder_ == null) {
          if (valueCase_ == 1) {
            return (com.github.jtmsp.types.Types.ResponseException) value_;
          }
          return com.github.jtmsp.types.Types.ResponseException.getDefaultInstance();
        } else {
          if (valueCase_ == 1) {
            return exceptionBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseException.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
       */
      public Builder setException(com.github.jtmsp.types.Types.ResponseException value) {
        if (exceptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          exceptionBuilder_.setMessage(value);
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
       */
      public Builder setException(
          com.github.jtmsp.types.Types.ResponseException.Builder builderForValue) {
        if (exceptionBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          exceptionBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
       */
      public Builder mergeException(com.github.jtmsp.types.Types.ResponseException value) {
        if (exceptionBuilder_ == null) {
          if (valueCase_ == 1 &&
              value_ != com.github.jtmsp.types.Types.ResponseException.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseException.newBuilder((com.github.jtmsp.types.Types.ResponseException) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 1) {
            exceptionBuilder_.mergeFrom(value);
          }
          exceptionBuilder_.setMessage(value);
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
       */
      public Builder clearException() {
        if (exceptionBuilder_ == null) {
          if (valueCase_ == 1) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 1) {
            valueCase_ = 0;
            value_ = null;
          }
          exceptionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
       */
      public com.github.jtmsp.types.Types.ResponseException.Builder getExceptionBuilder() {
        return getExceptionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
       */
      public com.github.jtmsp.types.Types.ResponseExceptionOrBuilder getExceptionOrBuilder() {
        if ((valueCase_ == 1) && (exceptionBuilder_ != null)) {
          return exceptionBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 1) {
            return (com.github.jtmsp.types.Types.ResponseException) value_;
          }
          return com.github.jtmsp.types.Types.ResponseException.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseException exception = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseException, com.github.jtmsp.types.Types.ResponseException.Builder, com.github.jtmsp.types.Types.ResponseExceptionOrBuilder> 
          getExceptionFieldBuilder() {
        if (exceptionBuilder_ == null) {
          if (!(valueCase_ == 1)) {
            value_ = com.github.jtmsp.types.Types.ResponseException.getDefaultInstance();
          }
          exceptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseException, com.github.jtmsp.types.Types.ResponseException.Builder, com.github.jtmsp.types.Types.ResponseExceptionOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseException) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 1;
        onChanged();;
        return exceptionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseEcho, com.github.jtmsp.types.Types.ResponseEcho.Builder, com.github.jtmsp.types.Types.ResponseEchoOrBuilder> echoBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
       */
      public com.github.jtmsp.types.Types.ResponseEcho getEcho() {
        if (echoBuilder_ == null) {
          if (valueCase_ == 2) {
            return (com.github.jtmsp.types.Types.ResponseEcho) value_;
          }
          return com.github.jtmsp.types.Types.ResponseEcho.getDefaultInstance();
        } else {
          if (valueCase_ == 2) {
            return echoBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseEcho.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
       */
      public Builder setEcho(com.github.jtmsp.types.Types.ResponseEcho value) {
        if (echoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          echoBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
       */
      public Builder setEcho(
          com.github.jtmsp.types.Types.ResponseEcho.Builder builderForValue) {
        if (echoBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          echoBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
       */
      public Builder mergeEcho(com.github.jtmsp.types.Types.ResponseEcho value) {
        if (echoBuilder_ == null) {
          if (valueCase_ == 2 &&
              value_ != com.github.jtmsp.types.Types.ResponseEcho.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseEcho.newBuilder((com.github.jtmsp.types.Types.ResponseEcho) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 2) {
            echoBuilder_.mergeFrom(value);
          }
          echoBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
       */
      public Builder clearEcho() {
        if (echoBuilder_ == null) {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
          }
          echoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
       */
      public com.github.jtmsp.types.Types.ResponseEcho.Builder getEchoBuilder() {
        return getEchoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
       */
      public com.github.jtmsp.types.Types.ResponseEchoOrBuilder getEchoOrBuilder() {
        if ((valueCase_ == 2) && (echoBuilder_ != null)) {
          return echoBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 2) {
            return (com.github.jtmsp.types.Types.ResponseEcho) value_;
          }
          return com.github.jtmsp.types.Types.ResponseEcho.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEcho echo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseEcho, com.github.jtmsp.types.Types.ResponseEcho.Builder, com.github.jtmsp.types.Types.ResponseEchoOrBuilder> 
          getEchoFieldBuilder() {
        if (echoBuilder_ == null) {
          if (!(valueCase_ == 2)) {
            value_ = com.github.jtmsp.types.Types.ResponseEcho.getDefaultInstance();
          }
          echoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseEcho, com.github.jtmsp.types.Types.ResponseEcho.Builder, com.github.jtmsp.types.Types.ResponseEchoOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseEcho) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 2;
        onChanged();;
        return echoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseFlush, com.github.jtmsp.types.Types.ResponseFlush.Builder, com.github.jtmsp.types.Types.ResponseFlushOrBuilder> flushBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
       */
      public com.github.jtmsp.types.Types.ResponseFlush getFlush() {
        if (flushBuilder_ == null) {
          if (valueCase_ == 3) {
            return (com.github.jtmsp.types.Types.ResponseFlush) value_;
          }
          return com.github.jtmsp.types.Types.ResponseFlush.getDefaultInstance();
        } else {
          if (valueCase_ == 3) {
            return flushBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseFlush.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
       */
      public Builder setFlush(com.github.jtmsp.types.Types.ResponseFlush value) {
        if (flushBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          flushBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
       */
      public Builder setFlush(
          com.github.jtmsp.types.Types.ResponseFlush.Builder builderForValue) {
        if (flushBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          flushBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
       */
      public Builder mergeFlush(com.github.jtmsp.types.Types.ResponseFlush value) {
        if (flushBuilder_ == null) {
          if (valueCase_ == 3 &&
              value_ != com.github.jtmsp.types.Types.ResponseFlush.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseFlush.newBuilder((com.github.jtmsp.types.Types.ResponseFlush) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 3) {
            flushBuilder_.mergeFrom(value);
          }
          flushBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
       */
      public Builder clearFlush() {
        if (flushBuilder_ == null) {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
          }
          flushBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
       */
      public com.github.jtmsp.types.Types.ResponseFlush.Builder getFlushBuilder() {
        return getFlushFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
       */
      public com.github.jtmsp.types.Types.ResponseFlushOrBuilder getFlushOrBuilder() {
        if ((valueCase_ == 3) && (flushBuilder_ != null)) {
          return flushBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 3) {
            return (com.github.jtmsp.types.Types.ResponseFlush) value_;
          }
          return com.github.jtmsp.types.Types.ResponseFlush.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseFlush flush = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseFlush, com.github.jtmsp.types.Types.ResponseFlush.Builder, com.github.jtmsp.types.Types.ResponseFlushOrBuilder> 
          getFlushFieldBuilder() {
        if (flushBuilder_ == null) {
          if (!(valueCase_ == 3)) {
            value_ = com.github.jtmsp.types.Types.ResponseFlush.getDefaultInstance();
          }
          flushBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseFlush, com.github.jtmsp.types.Types.ResponseFlush.Builder, com.github.jtmsp.types.Types.ResponseFlushOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseFlush) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 3;
        onChanged();;
        return flushBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseInfo, com.github.jtmsp.types.Types.ResponseInfo.Builder, com.github.jtmsp.types.Types.ResponseInfoOrBuilder> infoBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
       */
      public com.github.jtmsp.types.Types.ResponseInfo getInfo() {
        if (infoBuilder_ == null) {
          if (valueCase_ == 4) {
            return (com.github.jtmsp.types.Types.ResponseInfo) value_;
          }
          return com.github.jtmsp.types.Types.ResponseInfo.getDefaultInstance();
        } else {
          if (valueCase_ == 4) {
            return infoBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseInfo.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
       */
      public Builder setInfo(com.github.jtmsp.types.Types.ResponseInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          infoBuilder_.setMessage(value);
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
       */
      public Builder setInfo(
          com.github.jtmsp.types.Types.ResponseInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          infoBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
       */
      public Builder mergeInfo(com.github.jtmsp.types.Types.ResponseInfo value) {
        if (infoBuilder_ == null) {
          if (valueCase_ == 4 &&
              value_ != com.github.jtmsp.types.Types.ResponseInfo.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseInfo.newBuilder((com.github.jtmsp.types.Types.ResponseInfo) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 4) {
            infoBuilder_.mergeFrom(value);
          }
          infoBuilder_.setMessage(value);
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
          }
          infoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
       */
      public com.github.jtmsp.types.Types.ResponseInfo.Builder getInfoBuilder() {
        return getInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
       */
      public com.github.jtmsp.types.Types.ResponseInfoOrBuilder getInfoOrBuilder() {
        if ((valueCase_ == 4) && (infoBuilder_ != null)) {
          return infoBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 4) {
            return (com.github.jtmsp.types.Types.ResponseInfo) value_;
          }
          return com.github.jtmsp.types.Types.ResponseInfo.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInfo info = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseInfo, com.github.jtmsp.types.Types.ResponseInfo.Builder, com.github.jtmsp.types.Types.ResponseInfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          if (!(valueCase_ == 4)) {
            value_ = com.github.jtmsp.types.Types.ResponseInfo.getDefaultInstance();
          }
          infoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseInfo, com.github.jtmsp.types.Types.ResponseInfo.Builder, com.github.jtmsp.types.Types.ResponseInfoOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseInfo) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 4;
        onChanged();;
        return infoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseSetOption, com.github.jtmsp.types.Types.ResponseSetOption.Builder, com.github.jtmsp.types.Types.ResponseSetOptionOrBuilder> setOptionBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
       */
      public com.github.jtmsp.types.Types.ResponseSetOption getSetOption() {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 5) {
            return (com.github.jtmsp.types.Types.ResponseSetOption) value_;
          }
          return com.github.jtmsp.types.Types.ResponseSetOption.getDefaultInstance();
        } else {
          if (valueCase_ == 5) {
            return setOptionBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseSetOption.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
       */
      public Builder setSetOption(com.github.jtmsp.types.Types.ResponseSetOption value) {
        if (setOptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          setOptionBuilder_.setMessage(value);
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
       */
      public Builder setSetOption(
          com.github.jtmsp.types.Types.ResponseSetOption.Builder builderForValue) {
        if (setOptionBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          setOptionBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
       */
      public Builder mergeSetOption(com.github.jtmsp.types.Types.ResponseSetOption value) {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 5 &&
              value_ != com.github.jtmsp.types.Types.ResponseSetOption.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseSetOption.newBuilder((com.github.jtmsp.types.Types.ResponseSetOption) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 5) {
            setOptionBuilder_.mergeFrom(value);
          }
          setOptionBuilder_.setMessage(value);
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
       */
      public Builder clearSetOption() {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
          }
          setOptionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
       */
      public com.github.jtmsp.types.Types.ResponseSetOption.Builder getSetOptionBuilder() {
        return getSetOptionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
       */
      public com.github.jtmsp.types.Types.ResponseSetOptionOrBuilder getSetOptionOrBuilder() {
        if ((valueCase_ == 5) && (setOptionBuilder_ != null)) {
          return setOptionBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 5) {
            return (com.github.jtmsp.types.Types.ResponseSetOption) value_;
          }
          return com.github.jtmsp.types.Types.ResponseSetOption.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseSetOption set_option = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseSetOption, com.github.jtmsp.types.Types.ResponseSetOption.Builder, com.github.jtmsp.types.Types.ResponseSetOptionOrBuilder> 
          getSetOptionFieldBuilder() {
        if (setOptionBuilder_ == null) {
          if (!(valueCase_ == 5)) {
            value_ = com.github.jtmsp.types.Types.ResponseSetOption.getDefaultInstance();
          }
          setOptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseSetOption, com.github.jtmsp.types.Types.ResponseSetOption.Builder, com.github.jtmsp.types.Types.ResponseSetOptionOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseSetOption) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 5;
        onChanged();;
        return setOptionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseAppendTx, com.github.jtmsp.types.Types.ResponseAppendTx.Builder, com.github.jtmsp.types.Types.ResponseAppendTxOrBuilder> appendTxBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
       */
      public com.github.jtmsp.types.Types.ResponseAppendTx getAppendTx() {
        if (appendTxBuilder_ == null) {
          if (valueCase_ == 6) {
            return (com.github.jtmsp.types.Types.ResponseAppendTx) value_;
          }
          return com.github.jtmsp.types.Types.ResponseAppendTx.getDefaultInstance();
        } else {
          if (valueCase_ == 6) {
            return appendTxBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseAppendTx.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
       */
      public Builder setAppendTx(com.github.jtmsp.types.Types.ResponseAppendTx value) {
        if (appendTxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          appendTxBuilder_.setMessage(value);
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
       */
      public Builder setAppendTx(
          com.github.jtmsp.types.Types.ResponseAppendTx.Builder builderForValue) {
        if (appendTxBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          appendTxBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
       */
      public Builder mergeAppendTx(com.github.jtmsp.types.Types.ResponseAppendTx value) {
        if (appendTxBuilder_ == null) {
          if (valueCase_ == 6 &&
              value_ != com.github.jtmsp.types.Types.ResponseAppendTx.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseAppendTx.newBuilder((com.github.jtmsp.types.Types.ResponseAppendTx) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 6) {
            appendTxBuilder_.mergeFrom(value);
          }
          appendTxBuilder_.setMessage(value);
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
       */
      public Builder clearAppendTx() {
        if (appendTxBuilder_ == null) {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
          }
          appendTxBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
       */
      public com.github.jtmsp.types.Types.ResponseAppendTx.Builder getAppendTxBuilder() {
        return getAppendTxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
       */
      public com.github.jtmsp.types.Types.ResponseAppendTxOrBuilder getAppendTxOrBuilder() {
        if ((valueCase_ == 6) && (appendTxBuilder_ != null)) {
          return appendTxBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 6) {
            return (com.github.jtmsp.types.Types.ResponseAppendTx) value_;
          }
          return com.github.jtmsp.types.Types.ResponseAppendTx.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseAppendTx append_tx = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseAppendTx, com.github.jtmsp.types.Types.ResponseAppendTx.Builder, com.github.jtmsp.types.Types.ResponseAppendTxOrBuilder> 
          getAppendTxFieldBuilder() {
        if (appendTxBuilder_ == null) {
          if (!(valueCase_ == 6)) {
            value_ = com.github.jtmsp.types.Types.ResponseAppendTx.getDefaultInstance();
          }
          appendTxBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseAppendTx, com.github.jtmsp.types.Types.ResponseAppendTx.Builder, com.github.jtmsp.types.Types.ResponseAppendTxOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseAppendTx) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 6;
        onChanged();;
        return appendTxBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseCheckTx, com.github.jtmsp.types.Types.ResponseCheckTx.Builder, com.github.jtmsp.types.Types.ResponseCheckTxOrBuilder> checkTxBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
       */
      public com.github.jtmsp.types.Types.ResponseCheckTx getCheckTx() {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 7) {
            return (com.github.jtmsp.types.Types.ResponseCheckTx) value_;
          }
          return com.github.jtmsp.types.Types.ResponseCheckTx.getDefaultInstance();
        } else {
          if (valueCase_ == 7) {
            return checkTxBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseCheckTx.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
       */
      public Builder setCheckTx(com.github.jtmsp.types.Types.ResponseCheckTx value) {
        if (checkTxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          checkTxBuilder_.setMessage(value);
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
       */
      public Builder setCheckTx(
          com.github.jtmsp.types.Types.ResponseCheckTx.Builder builderForValue) {
        if (checkTxBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          checkTxBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
       */
      public Builder mergeCheckTx(com.github.jtmsp.types.Types.ResponseCheckTx value) {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 7 &&
              value_ != com.github.jtmsp.types.Types.ResponseCheckTx.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseCheckTx.newBuilder((com.github.jtmsp.types.Types.ResponseCheckTx) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 7) {
            checkTxBuilder_.mergeFrom(value);
          }
          checkTxBuilder_.setMessage(value);
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
       */
      public Builder clearCheckTx() {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 7) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 7) {
            valueCase_ = 0;
            value_ = null;
          }
          checkTxBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
       */
      public com.github.jtmsp.types.Types.ResponseCheckTx.Builder getCheckTxBuilder() {
        return getCheckTxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
       */
      public com.github.jtmsp.types.Types.ResponseCheckTxOrBuilder getCheckTxOrBuilder() {
        if ((valueCase_ == 7) && (checkTxBuilder_ != null)) {
          return checkTxBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 7) {
            return (com.github.jtmsp.types.Types.ResponseCheckTx) value_;
          }
          return com.github.jtmsp.types.Types.ResponseCheckTx.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCheckTx check_tx = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseCheckTx, com.github.jtmsp.types.Types.ResponseCheckTx.Builder, com.github.jtmsp.types.Types.ResponseCheckTxOrBuilder> 
          getCheckTxFieldBuilder() {
        if (checkTxBuilder_ == null) {
          if (!(valueCase_ == 7)) {
            value_ = com.github.jtmsp.types.Types.ResponseCheckTx.getDefaultInstance();
          }
          checkTxBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseCheckTx, com.github.jtmsp.types.Types.ResponseCheckTx.Builder, com.github.jtmsp.types.Types.ResponseCheckTxOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseCheckTx) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 7;
        onChanged();;
        return checkTxBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseCommit, com.github.jtmsp.types.Types.ResponseCommit.Builder, com.github.jtmsp.types.Types.ResponseCommitOrBuilder> commitBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
       */
      public com.github.jtmsp.types.Types.ResponseCommit getCommit() {
        if (commitBuilder_ == null) {
          if (valueCase_ == 8) {
            return (com.github.jtmsp.types.Types.ResponseCommit) value_;
          }
          return com.github.jtmsp.types.Types.ResponseCommit.getDefaultInstance();
        } else {
          if (valueCase_ == 8) {
            return commitBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseCommit.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
       */
      public Builder setCommit(com.github.jtmsp.types.Types.ResponseCommit value) {
        if (commitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          commitBuilder_.setMessage(value);
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
       */
      public Builder setCommit(
          com.github.jtmsp.types.Types.ResponseCommit.Builder builderForValue) {
        if (commitBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          commitBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
       */
      public Builder mergeCommit(com.github.jtmsp.types.Types.ResponseCommit value) {
        if (commitBuilder_ == null) {
          if (valueCase_ == 8 &&
              value_ != com.github.jtmsp.types.Types.ResponseCommit.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseCommit.newBuilder((com.github.jtmsp.types.Types.ResponseCommit) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 8) {
            commitBuilder_.mergeFrom(value);
          }
          commitBuilder_.setMessage(value);
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
       */
      public Builder clearCommit() {
        if (commitBuilder_ == null) {
          if (valueCase_ == 8) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 8) {
            valueCase_ = 0;
            value_ = null;
          }
          commitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
       */
      public com.github.jtmsp.types.Types.ResponseCommit.Builder getCommitBuilder() {
        return getCommitFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
       */
      public com.github.jtmsp.types.Types.ResponseCommitOrBuilder getCommitOrBuilder() {
        if ((valueCase_ == 8) && (commitBuilder_ != null)) {
          return commitBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 8) {
            return (com.github.jtmsp.types.Types.ResponseCommit) value_;
          }
          return com.github.jtmsp.types.Types.ResponseCommit.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseCommit commit = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseCommit, com.github.jtmsp.types.Types.ResponseCommit.Builder, com.github.jtmsp.types.Types.ResponseCommitOrBuilder> 
          getCommitFieldBuilder() {
        if (commitBuilder_ == null) {
          if (!(valueCase_ == 8)) {
            value_ = com.github.jtmsp.types.Types.ResponseCommit.getDefaultInstance();
          }
          commitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseCommit, com.github.jtmsp.types.Types.ResponseCommit.Builder, com.github.jtmsp.types.Types.ResponseCommitOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseCommit) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 8;
        onChanged();;
        return commitBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseQuery, com.github.jtmsp.types.Types.ResponseQuery.Builder, com.github.jtmsp.types.Types.ResponseQueryOrBuilder> queryBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
       */
      public com.github.jtmsp.types.Types.ResponseQuery getQuery() {
        if (queryBuilder_ == null) {
          if (valueCase_ == 9) {
            return (com.github.jtmsp.types.Types.ResponseQuery) value_;
          }
          return com.github.jtmsp.types.Types.ResponseQuery.getDefaultInstance();
        } else {
          if (valueCase_ == 9) {
            return queryBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseQuery.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
       */
      public Builder setQuery(com.github.jtmsp.types.Types.ResponseQuery value) {
        if (queryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          queryBuilder_.setMessage(value);
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
       */
      public Builder setQuery(
          com.github.jtmsp.types.Types.ResponseQuery.Builder builderForValue) {
        if (queryBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          queryBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
       */
      public Builder mergeQuery(com.github.jtmsp.types.Types.ResponseQuery value) {
        if (queryBuilder_ == null) {
          if (valueCase_ == 9 &&
              value_ != com.github.jtmsp.types.Types.ResponseQuery.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseQuery.newBuilder((com.github.jtmsp.types.Types.ResponseQuery) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 9) {
            queryBuilder_.mergeFrom(value);
          }
          queryBuilder_.setMessage(value);
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
       */
      public Builder clearQuery() {
        if (queryBuilder_ == null) {
          if (valueCase_ == 9) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 9) {
            valueCase_ = 0;
            value_ = null;
          }
          queryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
       */
      public com.github.jtmsp.types.Types.ResponseQuery.Builder getQueryBuilder() {
        return getQueryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
       */
      public com.github.jtmsp.types.Types.ResponseQueryOrBuilder getQueryOrBuilder() {
        if ((valueCase_ == 9) && (queryBuilder_ != null)) {
          return queryBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 9) {
            return (com.github.jtmsp.types.Types.ResponseQuery) value_;
          }
          return com.github.jtmsp.types.Types.ResponseQuery.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseQuery query = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseQuery, com.github.jtmsp.types.Types.ResponseQuery.Builder, com.github.jtmsp.types.Types.ResponseQueryOrBuilder> 
          getQueryFieldBuilder() {
        if (queryBuilder_ == null) {
          if (!(valueCase_ == 9)) {
            value_ = com.github.jtmsp.types.Types.ResponseQuery.getDefaultInstance();
          }
          queryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseQuery, com.github.jtmsp.types.Types.ResponseQuery.Builder, com.github.jtmsp.types.Types.ResponseQueryOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseQuery) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 9;
        onChanged();;
        return queryBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseInitChain, com.github.jtmsp.types.Types.ResponseInitChain.Builder, com.github.jtmsp.types.Types.ResponseInitChainOrBuilder> initChainBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
       */
      public com.github.jtmsp.types.Types.ResponseInitChain getInitChain() {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 10) {
            return (com.github.jtmsp.types.Types.ResponseInitChain) value_;
          }
          return com.github.jtmsp.types.Types.ResponseInitChain.getDefaultInstance();
        } else {
          if (valueCase_ == 10) {
            return initChainBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseInitChain.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
       */
      public Builder setInitChain(com.github.jtmsp.types.Types.ResponseInitChain value) {
        if (initChainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          initChainBuilder_.setMessage(value);
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
       */
      public Builder setInitChain(
          com.github.jtmsp.types.Types.ResponseInitChain.Builder builderForValue) {
        if (initChainBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          initChainBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
       */
      public Builder mergeInitChain(com.github.jtmsp.types.Types.ResponseInitChain value) {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 10 &&
              value_ != com.github.jtmsp.types.Types.ResponseInitChain.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseInitChain.newBuilder((com.github.jtmsp.types.Types.ResponseInitChain) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 10) {
            initChainBuilder_.mergeFrom(value);
          }
          initChainBuilder_.setMessage(value);
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
       */
      public Builder clearInitChain() {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 10) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 10) {
            valueCase_ = 0;
            value_ = null;
          }
          initChainBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
       */
      public com.github.jtmsp.types.Types.ResponseInitChain.Builder getInitChainBuilder() {
        return getInitChainFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
       */
      public com.github.jtmsp.types.Types.ResponseInitChainOrBuilder getInitChainOrBuilder() {
        if ((valueCase_ == 10) && (initChainBuilder_ != null)) {
          return initChainBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 10) {
            return (com.github.jtmsp.types.Types.ResponseInitChain) value_;
          }
          return com.github.jtmsp.types.Types.ResponseInitChain.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseInitChain init_chain = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseInitChain, com.github.jtmsp.types.Types.ResponseInitChain.Builder, com.github.jtmsp.types.Types.ResponseInitChainOrBuilder> 
          getInitChainFieldBuilder() {
        if (initChainBuilder_ == null) {
          if (!(valueCase_ == 10)) {
            value_ = com.github.jtmsp.types.Types.ResponseInitChain.getDefaultInstance();
          }
          initChainBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseInitChain, com.github.jtmsp.types.Types.ResponseInitChain.Builder, com.github.jtmsp.types.Types.ResponseInitChainOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseInitChain) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 10;
        onChanged();;
        return initChainBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseBeginBlock, com.github.jtmsp.types.Types.ResponseBeginBlock.Builder, com.github.jtmsp.types.Types.ResponseBeginBlockOrBuilder> beginBlockBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public com.github.jtmsp.types.Types.ResponseBeginBlock getBeginBlock() {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 11) {
            return (com.github.jtmsp.types.Types.ResponseBeginBlock) value_;
          }
          return com.github.jtmsp.types.Types.ResponseBeginBlock.getDefaultInstance();
        } else {
          if (valueCase_ == 11) {
            return beginBlockBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseBeginBlock.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public Builder setBeginBlock(com.github.jtmsp.types.Types.ResponseBeginBlock value) {
        if (beginBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          beginBlockBuilder_.setMessage(value);
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public Builder setBeginBlock(
          com.github.jtmsp.types.Types.ResponseBeginBlock.Builder builderForValue) {
        if (beginBlockBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          beginBlockBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public Builder mergeBeginBlock(com.github.jtmsp.types.Types.ResponseBeginBlock value) {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 11 &&
              value_ != com.github.jtmsp.types.Types.ResponseBeginBlock.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseBeginBlock.newBuilder((com.github.jtmsp.types.Types.ResponseBeginBlock) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 11) {
            beginBlockBuilder_.mergeFrom(value);
          }
          beginBlockBuilder_.setMessage(value);
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public Builder clearBeginBlock() {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 11) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 11) {
            valueCase_ = 0;
            value_ = null;
          }
          beginBlockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public com.github.jtmsp.types.Types.ResponseBeginBlock.Builder getBeginBlockBuilder() {
        return getBeginBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public com.github.jtmsp.types.Types.ResponseBeginBlockOrBuilder getBeginBlockOrBuilder() {
        if ((valueCase_ == 11) && (beginBlockBuilder_ != null)) {
          return beginBlockBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 11) {
            return (com.github.jtmsp.types.Types.ResponseBeginBlock) value_;
          }
          return com.github.jtmsp.types.Types.ResponseBeginBlock.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseBeginBlock begin_block = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseBeginBlock, com.github.jtmsp.types.Types.ResponseBeginBlock.Builder, com.github.jtmsp.types.Types.ResponseBeginBlockOrBuilder> 
          getBeginBlockFieldBuilder() {
        if (beginBlockBuilder_ == null) {
          if (!(valueCase_ == 11)) {
            value_ = com.github.jtmsp.types.Types.ResponseBeginBlock.getDefaultInstance();
          }
          beginBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseBeginBlock, com.github.jtmsp.types.Types.ResponseBeginBlock.Builder, com.github.jtmsp.types.Types.ResponseBeginBlockOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseBeginBlock) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 11;
        onChanged();;
        return beginBlockBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseEndBlock, com.github.jtmsp.types.Types.ResponseEndBlock.Builder, com.github.jtmsp.types.Types.ResponseEndBlockOrBuilder> endBlockBuilder_;
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
       */
      public com.github.jtmsp.types.Types.ResponseEndBlock getEndBlock() {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 12) {
            return (com.github.jtmsp.types.Types.ResponseEndBlock) value_;
          }
          return com.github.jtmsp.types.Types.ResponseEndBlock.getDefaultInstance();
        } else {
          if (valueCase_ == 12) {
            return endBlockBuilder_.getMessage();
          }
          return com.github.jtmsp.types.Types.ResponseEndBlock.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
       */
      public Builder setEndBlock(com.github.jtmsp.types.Types.ResponseEndBlock value) {
        if (endBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          endBlockBuilder_.setMessage(value);
        }
        valueCase_ = 12;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
       */
      public Builder setEndBlock(
          com.github.jtmsp.types.Types.ResponseEndBlock.Builder builderForValue) {
        if (endBlockBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          endBlockBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 12;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
       */
      public Builder mergeEndBlock(com.github.jtmsp.types.Types.ResponseEndBlock value) {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 12 &&
              value_ != com.github.jtmsp.types.Types.ResponseEndBlock.getDefaultInstance()) {
            value_ = com.github.jtmsp.types.Types.ResponseEndBlock.newBuilder((com.github.jtmsp.types.Types.ResponseEndBlock) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 12) {
            endBlockBuilder_.mergeFrom(value);
          }
          endBlockBuilder_.setMessage(value);
        }
        valueCase_ = 12;
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
       */
      public Builder clearEndBlock() {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 12) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 12) {
            valueCase_ = 0;
            value_ = null;
          }
          endBlockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
       */
      public com.github.jtmsp.types.Types.ResponseEndBlock.Builder getEndBlockBuilder() {
        return getEndBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
       */
      public com.github.jtmsp.types.Types.ResponseEndBlockOrBuilder getEndBlockOrBuilder() {
        if ((valueCase_ == 12) && (endBlockBuilder_ != null)) {
          return endBlockBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 12) {
            return (com.github.jtmsp.types.Types.ResponseEndBlock) value_;
          }
          return com.github.jtmsp.types.Types.ResponseEndBlock.getDefaultInstance();
        }
      }
      /**
       * <code>optional .com.github.jtmsp.types.ResponseEndBlock end_block = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jtmsp.types.Types.ResponseEndBlock, com.github.jtmsp.types.Types.ResponseEndBlock.Builder, com.github.jtmsp.types.Types.ResponseEndBlockOrBuilder> 
          getEndBlockFieldBuilder() {
        if (endBlockBuilder_ == null) {
          if (!(valueCase_ == 12)) {
            value_ = com.github.jtmsp.types.Types.ResponseEndBlock.getDefaultInstance();
          }
          endBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jtmsp.types.Types.ResponseEndBlock, com.github.jtmsp.types.Types.ResponseEndBlock.Builder, com.github.jtmsp.types.Types.ResponseEndBlockOrBuilder>(
                  (com.github.jtmsp.types.Types.ResponseEndBlock) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 12;
        onChanged();;
        return endBlockBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.Response)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.Response)
    private static final com.github.jtmsp.types.Types.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.Response();
    }

    public static com.github.jtmsp.types.Types.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseExceptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseException)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string error = 1;</code>
     */
    java.lang.String getError();
    /**
     * <code>optional string error = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorBytes();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseException}
   */
  public  static final class ResponseException extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseException)
      ResponseExceptionOrBuilder {
    // Use ResponseException.newBuilder() to construct.
    private ResponseException(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseException() {
      error_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseException(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              error_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseException_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseException_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseException.class, com.github.jtmsp.types.Types.ResponseException.Builder.class);
    }

    public static final int ERROR_FIELD_NUMBER = 1;
    private volatile java.lang.Object error_;
    /**
     * <code>optional string error = 1;</code>
     */
    public java.lang.String getError() {
      java.lang.Object ref = error_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        error_ = s;
        return s;
      }
    }
    /**
     * <code>optional string error = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorBytes() {
      java.lang.Object ref = error_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        error_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getErrorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, error_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getErrorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, error_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseException parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseException parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseException parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseException parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseException parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseException parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseException parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseException parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseException parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseException parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseException prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseException}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseException)
        com.github.jtmsp.types.Types.ResponseExceptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseException_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseException_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseException.class, com.github.jtmsp.types.Types.ResponseException.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseException.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        error_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseException_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseException getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseException.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseException build() {
        com.github.jtmsp.types.Types.ResponseException result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseException buildPartial() {
        com.github.jtmsp.types.Types.ResponseException result = new com.github.jtmsp.types.Types.ResponseException(this);
        result.error_ = error_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseException) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseException)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseException other) {
        if (other == com.github.jtmsp.types.Types.ResponseException.getDefaultInstance()) return this;
        if (!other.getError().isEmpty()) {
          error_ = other.error_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseException parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseException) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object error_ = "";
      /**
       * <code>optional string error = 1;</code>
       */
      public java.lang.String getError() {
        java.lang.Object ref = error_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          error_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string error = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorBytes() {
        java.lang.Object ref = error_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          error_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string error = 1;</code>
       */
      public Builder setError(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string error = 1;</code>
       */
      public Builder clearError() {
        
        error_ = getDefaultInstance().getError();
        onChanged();
        return this;
      }
      /**
       * <code>optional string error = 1;</code>
       */
      public Builder setErrorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        error_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseException)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseException)
    private static final com.github.jtmsp.types.Types.ResponseException DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseException();
    }

    public static com.github.jtmsp.types.Types.ResponseException getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseException>
        PARSER = new com.google.protobuf.AbstractParser<ResponseException>() {
      public ResponseException parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseException(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseException> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseException> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseException getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseEchoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseEcho)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseEcho}
   */
  public  static final class ResponseEcho extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseEcho)
      ResponseEchoOrBuilder {
    // Use ResponseEcho.newBuilder() to construct.
    private ResponseEcho(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseEcho() {
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseEcho(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseEcho_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseEcho_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseEcho.class, com.github.jtmsp.types.Types.ResponseEcho.Builder.class);
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object message_;
    /**
     * <code>optional string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, message_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, message_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseEcho parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseEcho parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseEcho parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseEcho parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseEcho parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseEcho parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseEcho parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseEcho parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseEcho parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseEcho parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseEcho prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseEcho}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseEcho)
        com.github.jtmsp.types.Types.ResponseEchoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseEcho_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseEcho_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseEcho.class, com.github.jtmsp.types.Types.ResponseEcho.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseEcho.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseEcho_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseEcho getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseEcho.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseEcho build() {
        com.github.jtmsp.types.Types.ResponseEcho result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseEcho buildPartial() {
        com.github.jtmsp.types.Types.ResponseEcho result = new com.github.jtmsp.types.Types.ResponseEcho(this);
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseEcho) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseEcho)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseEcho other) {
        if (other == com.github.jtmsp.types.Types.ResponseEcho.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseEcho parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseEcho) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseEcho)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseEcho)
    private static final com.github.jtmsp.types.Types.ResponseEcho DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseEcho();
    }

    public static com.github.jtmsp.types.Types.ResponseEcho getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseEcho>
        PARSER = new com.google.protobuf.AbstractParser<ResponseEcho>() {
      public ResponseEcho parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseEcho(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseEcho> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseEcho> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseEcho getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseFlushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseFlush)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseFlush}
   */
  public  static final class ResponseFlush extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseFlush)
      ResponseFlushOrBuilder {
    // Use ResponseFlush.newBuilder() to construct.
    private ResponseFlush(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseFlush() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseFlush(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseFlush_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseFlush_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseFlush.class, com.github.jtmsp.types.Types.ResponseFlush.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseFlush parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseFlush parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseFlush parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseFlush parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseFlush parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseFlush parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseFlush parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseFlush parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseFlush parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseFlush parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseFlush prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseFlush}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseFlush)
        com.github.jtmsp.types.Types.ResponseFlushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseFlush_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseFlush_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseFlush.class, com.github.jtmsp.types.Types.ResponseFlush.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseFlush.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseFlush_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseFlush getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseFlush.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseFlush build() {
        com.github.jtmsp.types.Types.ResponseFlush result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseFlush buildPartial() {
        com.github.jtmsp.types.Types.ResponseFlush result = new com.github.jtmsp.types.Types.ResponseFlush(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseFlush) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseFlush)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseFlush other) {
        if (other == com.github.jtmsp.types.Types.ResponseFlush.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseFlush parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseFlush) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseFlush)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseFlush)
    private static final com.github.jtmsp.types.Types.ResponseFlush DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseFlush();
    }

    public static com.github.jtmsp.types.Types.ResponseFlush getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseFlush>
        PARSER = new com.google.protobuf.AbstractParser<ResponseFlush>() {
      public ResponseFlush parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseFlush(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseFlush> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseFlush> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseFlush getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string info = 1;</code>
     */
    java.lang.String getInfo();
    /**
     * <code>optional string info = 1;</code>
     */
    com.google.protobuf.ByteString
        getInfoBytes();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseInfo}
   */
  public  static final class ResponseInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseInfo)
      ResponseInfoOrBuilder {
    // Use ResponseInfo.newBuilder() to construct.
    private ResponseInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseInfo() {
      info_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              info_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseInfo.class, com.github.jtmsp.types.Types.ResponseInfo.Builder.class);
    }

    public static final int INFO_FIELD_NUMBER = 1;
    private volatile java.lang.Object info_;
    /**
     * <code>optional string info = 1;</code>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        info_ = s;
        return s;
      }
    }
    /**
     * <code>optional string info = 1;</code>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getInfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, info_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getInfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, info_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseInfo)
        com.github.jtmsp.types.Types.ResponseInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseInfo.class, com.github.jtmsp.types.Types.ResponseInfo.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        info_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseInfo_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseInfo getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseInfo.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseInfo build() {
        com.github.jtmsp.types.Types.ResponseInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseInfo buildPartial() {
        com.github.jtmsp.types.Types.ResponseInfo result = new com.github.jtmsp.types.Types.ResponseInfo(this);
        result.info_ = info_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseInfo) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseInfo other) {
        if (other == com.github.jtmsp.types.Types.ResponseInfo.getDefaultInstance()) return this;
        if (!other.getInfo().isEmpty()) {
          info_ = other.info_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object info_ = "";
      /**
       * <code>optional string info = 1;</code>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string info = 1;</code>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string info = 1;</code>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string info = 1;</code>
       */
      public Builder clearInfo() {
        
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }
      /**
       * <code>optional string info = 1;</code>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        info_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseInfo)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseInfo)
    private static final com.github.jtmsp.types.Types.ResponseInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseInfo();
    }

    public static com.github.jtmsp.types.Types.ResponseInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseInfo>
        PARSER = new com.google.protobuf.AbstractParser<ResponseInfo>() {
      public ResponseInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseInfo> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseSetOptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseSetOption)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string log = 1;</code>
     */
    java.lang.String getLog();
    /**
     * <code>optional string log = 1;</code>
     */
    com.google.protobuf.ByteString
        getLogBytes();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseSetOption}
   */
  public  static final class ResponseSetOption extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseSetOption)
      ResponseSetOptionOrBuilder {
    // Use ResponseSetOption.newBuilder() to construct.
    private ResponseSetOption(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseSetOption() {
      log_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseSetOption(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              log_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseSetOption_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseSetOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseSetOption.class, com.github.jtmsp.types.Types.ResponseSetOption.Builder.class);
    }

    public static final int LOG_FIELD_NUMBER = 1;
    private volatile java.lang.Object log_;
    /**
     * <code>optional string log = 1;</code>
     */
    public java.lang.String getLog() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        log_ = s;
        return s;
      }
    }
    /**
     * <code>optional string log = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLogBytes() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        log_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getLogBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, log_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getLogBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, log_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseSetOption parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseSetOption parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseSetOption parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseSetOption parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseSetOption parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseSetOption parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseSetOption parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseSetOption parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseSetOption parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseSetOption parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseSetOption prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseSetOption}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseSetOption)
        com.github.jtmsp.types.Types.ResponseSetOptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseSetOption_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseSetOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseSetOption.class, com.github.jtmsp.types.Types.ResponseSetOption.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseSetOption.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        log_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseSetOption_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseSetOption getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseSetOption.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseSetOption build() {
        com.github.jtmsp.types.Types.ResponseSetOption result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseSetOption buildPartial() {
        com.github.jtmsp.types.Types.ResponseSetOption result = new com.github.jtmsp.types.Types.ResponseSetOption(this);
        result.log_ = log_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseSetOption) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseSetOption)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseSetOption other) {
        if (other == com.github.jtmsp.types.Types.ResponseSetOption.getDefaultInstance()) return this;
        if (!other.getLog().isEmpty()) {
          log_ = other.log_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseSetOption parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseSetOption) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object log_ = "";
      /**
       * <code>optional string log = 1;</code>
       */
      public java.lang.String getLog() {
        java.lang.Object ref = log_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          log_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string log = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLogBytes() {
        java.lang.Object ref = log_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          log_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string log = 1;</code>
       */
      public Builder setLog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        log_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string log = 1;</code>
       */
      public Builder clearLog() {
        
        log_ = getDefaultInstance().getLog();
        onChanged();
        return this;
      }
      /**
       * <code>optional string log = 1;</code>
       */
      public Builder setLogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        log_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseSetOption)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseSetOption)
    private static final com.github.jtmsp.types.Types.ResponseSetOption DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseSetOption();
    }

    public static com.github.jtmsp.types.Types.ResponseSetOption getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseSetOption>
        PARSER = new com.google.protobuf.AbstractParser<ResponseSetOption>() {
      public ResponseSetOption parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseSetOption(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseSetOption> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseSetOption> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseSetOption getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseAppendTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseAppendTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    int getCodeValue();
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    com.github.jtmsp.types.Types.CodeType getCode();

    /**
     * <code>optional bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>optional string log = 3;</code>
     */
    java.lang.String getLog();
    /**
     * <code>optional string log = 3;</code>
     */
    com.google.protobuf.ByteString
        getLogBytes();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseAppendTx}
   */
  public  static final class ResponseAppendTx extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseAppendTx)
      ResponseAppendTxOrBuilder {
    // Use ResponseAppendTx.newBuilder() to construct.
    private ResponseAppendTx(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseAppendTx() {
      code_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
      log_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseAppendTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              code_ = rawValue;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              log_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseAppendTx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseAppendTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseAppendTx.class, com.github.jtmsp.types.Types.ResponseAppendTx.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    public int getCodeValue() {
      return code_;
    }
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    public com.github.jtmsp.types.Types.CodeType getCode() {
      com.github.jtmsp.types.Types.CodeType result = com.github.jtmsp.types.Types.CodeType.forNumber(code_);
      return result == null ? com.github.jtmsp.types.Types.CodeType.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int LOG_FIELD_NUMBER = 3;
    private volatile java.lang.Object log_;
    /**
     * <code>optional string log = 3;</code>
     */
    public java.lang.String getLog() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        log_ = s;
        return s;
      }
    }
    /**
     * <code>optional string log = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLogBytes() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        log_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != com.github.jtmsp.types.Types.CodeType.OK.getNumber()) {
        output.writeEnum(1, code_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, log_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != com.github.jtmsp.types.Types.CodeType.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, log_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseAppendTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseAppendTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseAppendTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseAppendTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseAppendTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseAppendTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseAppendTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseAppendTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseAppendTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseAppendTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseAppendTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseAppendTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseAppendTx)
        com.github.jtmsp.types.Types.ResponseAppendTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseAppendTx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseAppendTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseAppendTx.class, com.github.jtmsp.types.Types.ResponseAppendTx.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseAppendTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        code_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        log_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseAppendTx_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseAppendTx getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseAppendTx.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseAppendTx build() {
        com.github.jtmsp.types.Types.ResponseAppendTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseAppendTx buildPartial() {
        com.github.jtmsp.types.Types.ResponseAppendTx result = new com.github.jtmsp.types.Types.ResponseAppendTx(this);
        result.code_ = code_;
        result.data_ = data_;
        result.log_ = log_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseAppendTx) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseAppendTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseAppendTx other) {
        if (other == com.github.jtmsp.types.Types.ResponseAppendTx.getDefaultInstance()) return this;
        if (other.code_ != 0) {
          setCodeValue(other.getCodeValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getLog().isEmpty()) {
          log_ = other.log_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseAppendTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseAppendTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int code_ = 0;
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public int getCodeValue() {
        return code_;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder setCodeValue(int value) {
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public com.github.jtmsp.types.Types.CodeType getCode() {
        com.github.jtmsp.types.Types.CodeType result = com.github.jtmsp.types.Types.CodeType.forNumber(code_);
        return result == null ? com.github.jtmsp.types.Types.CodeType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder setCode(com.github.jtmsp.types.Types.CodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.lang.Object log_ = "";
      /**
       * <code>optional string log = 3;</code>
       */
      public java.lang.String getLog() {
        java.lang.Object ref = log_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          log_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLogBytes() {
        java.lang.Object ref = log_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          log_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder setLog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        log_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder clearLog() {
        
        log_ = getDefaultInstance().getLog();
        onChanged();
        return this;
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder setLogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        log_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseAppendTx)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseAppendTx)
    private static final com.github.jtmsp.types.Types.ResponseAppendTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseAppendTx();
    }

    public static com.github.jtmsp.types.Types.ResponseAppendTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseAppendTx>
        PARSER = new com.google.protobuf.AbstractParser<ResponseAppendTx>() {
      public ResponseAppendTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseAppendTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseAppendTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseAppendTx> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseAppendTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseCheckTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseCheckTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    int getCodeValue();
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    com.github.jtmsp.types.Types.CodeType getCode();

    /**
     * <code>optional bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>optional string log = 3;</code>
     */
    java.lang.String getLog();
    /**
     * <code>optional string log = 3;</code>
     */
    com.google.protobuf.ByteString
        getLogBytes();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseCheckTx}
   */
  public  static final class ResponseCheckTx extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseCheckTx)
      ResponseCheckTxOrBuilder {
    // Use ResponseCheckTx.newBuilder() to construct.
    private ResponseCheckTx(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseCheckTx() {
      code_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
      log_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseCheckTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              code_ = rawValue;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              log_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseCheckTx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseCheckTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseCheckTx.class, com.github.jtmsp.types.Types.ResponseCheckTx.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    public int getCodeValue() {
      return code_;
    }
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    public com.github.jtmsp.types.Types.CodeType getCode() {
      com.github.jtmsp.types.Types.CodeType result = com.github.jtmsp.types.Types.CodeType.forNumber(code_);
      return result == null ? com.github.jtmsp.types.Types.CodeType.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int LOG_FIELD_NUMBER = 3;
    private volatile java.lang.Object log_;
    /**
     * <code>optional string log = 3;</code>
     */
    public java.lang.String getLog() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        log_ = s;
        return s;
      }
    }
    /**
     * <code>optional string log = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLogBytes() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        log_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != com.github.jtmsp.types.Types.CodeType.OK.getNumber()) {
        output.writeEnum(1, code_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, log_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != com.github.jtmsp.types.Types.CodeType.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, log_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseCheckTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseCheckTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseCheckTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseCheckTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseCheckTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseCheckTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseCheckTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseCheckTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseCheckTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseCheckTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseCheckTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseCheckTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseCheckTx)
        com.github.jtmsp.types.Types.ResponseCheckTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseCheckTx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseCheckTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseCheckTx.class, com.github.jtmsp.types.Types.ResponseCheckTx.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseCheckTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        code_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        log_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseCheckTx_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseCheckTx getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseCheckTx.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseCheckTx build() {
        com.github.jtmsp.types.Types.ResponseCheckTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseCheckTx buildPartial() {
        com.github.jtmsp.types.Types.ResponseCheckTx result = new com.github.jtmsp.types.Types.ResponseCheckTx(this);
        result.code_ = code_;
        result.data_ = data_;
        result.log_ = log_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseCheckTx) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseCheckTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseCheckTx other) {
        if (other == com.github.jtmsp.types.Types.ResponseCheckTx.getDefaultInstance()) return this;
        if (other.code_ != 0) {
          setCodeValue(other.getCodeValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getLog().isEmpty()) {
          log_ = other.log_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseCheckTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseCheckTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int code_ = 0;
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public int getCodeValue() {
        return code_;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder setCodeValue(int value) {
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public com.github.jtmsp.types.Types.CodeType getCode() {
        com.github.jtmsp.types.Types.CodeType result = com.github.jtmsp.types.Types.CodeType.forNumber(code_);
        return result == null ? com.github.jtmsp.types.Types.CodeType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder setCode(com.github.jtmsp.types.Types.CodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.lang.Object log_ = "";
      /**
       * <code>optional string log = 3;</code>
       */
      public java.lang.String getLog() {
        java.lang.Object ref = log_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          log_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLogBytes() {
        java.lang.Object ref = log_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          log_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder setLog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        log_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder clearLog() {
        
        log_ = getDefaultInstance().getLog();
        onChanged();
        return this;
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder setLogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        log_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseCheckTx)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseCheckTx)
    private static final com.github.jtmsp.types.Types.ResponseCheckTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseCheckTx();
    }

    public static com.github.jtmsp.types.Types.ResponseCheckTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseCheckTx>
        PARSER = new com.google.protobuf.AbstractParser<ResponseCheckTx>() {
      public ResponseCheckTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseCheckTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseCheckTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseCheckTx> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseCheckTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseQueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseQuery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    int getCodeValue();
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    com.github.jtmsp.types.Types.CodeType getCode();

    /**
     * <code>optional bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>optional string log = 3;</code>
     */
    java.lang.String getLog();
    /**
     * <code>optional string log = 3;</code>
     */
    com.google.protobuf.ByteString
        getLogBytes();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseQuery}
   */
  public  static final class ResponseQuery extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseQuery)
      ResponseQueryOrBuilder {
    // Use ResponseQuery.newBuilder() to construct.
    private ResponseQuery(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseQuery() {
      code_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
      log_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseQuery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              code_ = rawValue;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              log_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseQuery_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseQuery.class, com.github.jtmsp.types.Types.ResponseQuery.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    public int getCodeValue() {
      return code_;
    }
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    public com.github.jtmsp.types.Types.CodeType getCode() {
      com.github.jtmsp.types.Types.CodeType result = com.github.jtmsp.types.Types.CodeType.forNumber(code_);
      return result == null ? com.github.jtmsp.types.Types.CodeType.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int LOG_FIELD_NUMBER = 3;
    private volatile java.lang.Object log_;
    /**
     * <code>optional string log = 3;</code>
     */
    public java.lang.String getLog() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        log_ = s;
        return s;
      }
    }
    /**
     * <code>optional string log = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLogBytes() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        log_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != com.github.jtmsp.types.Types.CodeType.OK.getNumber()) {
        output.writeEnum(1, code_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, log_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != com.github.jtmsp.types.Types.CodeType.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, log_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseQuery prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseQuery)
        com.github.jtmsp.types.Types.ResponseQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseQuery_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseQuery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseQuery.class, com.github.jtmsp.types.Types.ResponseQuery.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        code_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        log_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseQuery_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseQuery getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseQuery.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseQuery build() {
        com.github.jtmsp.types.Types.ResponseQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseQuery buildPartial() {
        com.github.jtmsp.types.Types.ResponseQuery result = new com.github.jtmsp.types.Types.ResponseQuery(this);
        result.code_ = code_;
        result.data_ = data_;
        result.log_ = log_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseQuery) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseQuery other) {
        if (other == com.github.jtmsp.types.Types.ResponseQuery.getDefaultInstance()) return this;
        if (other.code_ != 0) {
          setCodeValue(other.getCodeValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getLog().isEmpty()) {
          log_ = other.log_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseQuery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseQuery) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int code_ = 0;
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public int getCodeValue() {
        return code_;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder setCodeValue(int value) {
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public com.github.jtmsp.types.Types.CodeType getCode() {
        com.github.jtmsp.types.Types.CodeType result = com.github.jtmsp.types.Types.CodeType.forNumber(code_);
        return result == null ? com.github.jtmsp.types.Types.CodeType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder setCode(com.github.jtmsp.types.Types.CodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.lang.Object log_ = "";
      /**
       * <code>optional string log = 3;</code>
       */
      public java.lang.String getLog() {
        java.lang.Object ref = log_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          log_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLogBytes() {
        java.lang.Object ref = log_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          log_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder setLog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        log_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder clearLog() {
        
        log_ = getDefaultInstance().getLog();
        onChanged();
        return this;
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder setLogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        log_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseQuery)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseQuery)
    private static final com.github.jtmsp.types.Types.ResponseQuery DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseQuery();
    }

    public static com.github.jtmsp.types.Types.ResponseQuery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseQuery>
        PARSER = new com.google.protobuf.AbstractParser<ResponseQuery>() {
      public ResponseQuery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseQuery(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseQuery> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseQuery> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseQuery getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseCommitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseCommit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    int getCodeValue();
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    com.github.jtmsp.types.Types.CodeType getCode();

    /**
     * <code>optional bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>optional string log = 3;</code>
     */
    java.lang.String getLog();
    /**
     * <code>optional string log = 3;</code>
     */
    com.google.protobuf.ByteString
        getLogBytes();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseCommit}
   */
  public  static final class ResponseCommit extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseCommit)
      ResponseCommitOrBuilder {
    // Use ResponseCommit.newBuilder() to construct.
    private ResponseCommit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseCommit() {
      code_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
      log_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseCommit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              code_ = rawValue;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              log_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseCommit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseCommit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseCommit.class, com.github.jtmsp.types.Types.ResponseCommit.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    public int getCodeValue() {
      return code_;
    }
    /**
     * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
     */
    public com.github.jtmsp.types.Types.CodeType getCode() {
      com.github.jtmsp.types.Types.CodeType result = com.github.jtmsp.types.Types.CodeType.forNumber(code_);
      return result == null ? com.github.jtmsp.types.Types.CodeType.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int LOG_FIELD_NUMBER = 3;
    private volatile java.lang.Object log_;
    /**
     * <code>optional string log = 3;</code>
     */
    public java.lang.String getLog() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        log_ = s;
        return s;
      }
    }
    /**
     * <code>optional string log = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLogBytes() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        log_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != com.github.jtmsp.types.Types.CodeType.OK.getNumber()) {
        output.writeEnum(1, code_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, log_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != com.github.jtmsp.types.Types.CodeType.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, log_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseCommit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseCommit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseCommit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseCommit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseCommit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseCommit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseCommit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseCommit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseCommit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseCommit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseCommit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseCommit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseCommit)
        com.github.jtmsp.types.Types.ResponseCommitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseCommit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseCommit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseCommit.class, com.github.jtmsp.types.Types.ResponseCommit.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseCommit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        code_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        log_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseCommit_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseCommit getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseCommit.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseCommit build() {
        com.github.jtmsp.types.Types.ResponseCommit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseCommit buildPartial() {
        com.github.jtmsp.types.Types.ResponseCommit result = new com.github.jtmsp.types.Types.ResponseCommit(this);
        result.code_ = code_;
        result.data_ = data_;
        result.log_ = log_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseCommit) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseCommit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseCommit other) {
        if (other == com.github.jtmsp.types.Types.ResponseCommit.getDefaultInstance()) return this;
        if (other.code_ != 0) {
          setCodeValue(other.getCodeValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getLog().isEmpty()) {
          log_ = other.log_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseCommit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseCommit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int code_ = 0;
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public int getCodeValue() {
        return code_;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder setCodeValue(int value) {
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public com.github.jtmsp.types.Types.CodeType getCode() {
        com.github.jtmsp.types.Types.CodeType result = com.github.jtmsp.types.Types.CodeType.forNumber(code_);
        return result == null ? com.github.jtmsp.types.Types.CodeType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder setCode(com.github.jtmsp.types.Types.CodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.github.jtmsp.types.CodeType code = 1;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.lang.Object log_ = "";
      /**
       * <code>optional string log = 3;</code>
       */
      public java.lang.String getLog() {
        java.lang.Object ref = log_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          log_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLogBytes() {
        java.lang.Object ref = log_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          log_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder setLog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        log_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder clearLog() {
        
        log_ = getDefaultInstance().getLog();
        onChanged();
        return this;
      }
      /**
       * <code>optional string log = 3;</code>
       */
      public Builder setLogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        log_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseCommit)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseCommit)
    private static final com.github.jtmsp.types.Types.ResponseCommit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseCommit();
    }

    public static com.github.jtmsp.types.Types.ResponseCommit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseCommit>
        PARSER = new com.google.protobuf.AbstractParser<ResponseCommit>() {
      public ResponseCommit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseCommit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseCommit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseCommit> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseCommit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseInitChainOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseInitChain)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseInitChain}
   */
  public  static final class ResponseInitChain extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseInitChain)
      ResponseInitChainOrBuilder {
    // Use ResponseInitChain.newBuilder() to construct.
    private ResponseInitChain(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseInitChain() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseInitChain(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseInitChain_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseInitChain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseInitChain.class, com.github.jtmsp.types.Types.ResponseInitChain.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseInitChain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseInitChain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseInitChain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseInitChain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseInitChain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseInitChain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseInitChain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseInitChain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseInitChain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseInitChain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseInitChain prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseInitChain}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseInitChain)
        com.github.jtmsp.types.Types.ResponseInitChainOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseInitChain_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseInitChain_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseInitChain.class, com.github.jtmsp.types.Types.ResponseInitChain.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseInitChain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseInitChain_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseInitChain getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseInitChain.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseInitChain build() {
        com.github.jtmsp.types.Types.ResponseInitChain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseInitChain buildPartial() {
        com.github.jtmsp.types.Types.ResponseInitChain result = new com.github.jtmsp.types.Types.ResponseInitChain(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseInitChain) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseInitChain)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseInitChain other) {
        if (other == com.github.jtmsp.types.Types.ResponseInitChain.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseInitChain parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseInitChain) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseInitChain)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseInitChain)
    private static final com.github.jtmsp.types.Types.ResponseInitChain DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseInitChain();
    }

    public static com.github.jtmsp.types.Types.ResponseInitChain getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseInitChain>
        PARSER = new com.google.protobuf.AbstractParser<ResponseInitChain>() {
      public ResponseInitChain parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseInitChain(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseInitChain> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseInitChain> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseInitChain getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseBeginBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseBeginBlock)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseBeginBlock}
   */
  public  static final class ResponseBeginBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseBeginBlock)
      ResponseBeginBlockOrBuilder {
    // Use ResponseBeginBlock.newBuilder() to construct.
    private ResponseBeginBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseBeginBlock() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseBeginBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseBeginBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseBeginBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseBeginBlock.class, com.github.jtmsp.types.Types.ResponseBeginBlock.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseBeginBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseBeginBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseBeginBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseBeginBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseBeginBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseBeginBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseBeginBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseBeginBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseBeginBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseBeginBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseBeginBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseBeginBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseBeginBlock)
        com.github.jtmsp.types.Types.ResponseBeginBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseBeginBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseBeginBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseBeginBlock.class, com.github.jtmsp.types.Types.ResponseBeginBlock.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseBeginBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseBeginBlock_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseBeginBlock getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseBeginBlock.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseBeginBlock build() {
        com.github.jtmsp.types.Types.ResponseBeginBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseBeginBlock buildPartial() {
        com.github.jtmsp.types.Types.ResponseBeginBlock result = new com.github.jtmsp.types.Types.ResponseBeginBlock(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseBeginBlock) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseBeginBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseBeginBlock other) {
        if (other == com.github.jtmsp.types.Types.ResponseBeginBlock.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseBeginBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseBeginBlock) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseBeginBlock)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseBeginBlock)
    private static final com.github.jtmsp.types.Types.ResponseBeginBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseBeginBlock();
    }

    public static com.github.jtmsp.types.Types.ResponseBeginBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseBeginBlock>
        PARSER = new com.google.protobuf.AbstractParser<ResponseBeginBlock>() {
      public ResponseBeginBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseBeginBlock(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseBeginBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseBeginBlock> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseBeginBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseEndBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.ResponseEndBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
     */
    java.util.List<com.github.jtmsp.types.Types.Validator> 
        getDiffsList();
    /**
     * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
     */
    com.github.jtmsp.types.Types.Validator getDiffs(int index);
    /**
     * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
     */
    int getDiffsCount();
    /**
     * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
     */
    java.util.List<? extends com.github.jtmsp.types.Types.ValidatorOrBuilder> 
        getDiffsOrBuilderList();
    /**
     * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
     */
    com.github.jtmsp.types.Types.ValidatorOrBuilder getDiffsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.ResponseEndBlock}
   */
  public  static final class ResponseEndBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.ResponseEndBlock)
      ResponseEndBlockOrBuilder {
    // Use ResponseEndBlock.newBuilder() to construct.
    private ResponseEndBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponseEndBlock() {
      diffs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseEndBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                diffs_ = new java.util.ArrayList<com.github.jtmsp.types.Types.Validator>();
                mutable_bitField0_ |= 0x00000001;
              }
              diffs_.add(input.readMessage(com.github.jtmsp.types.Types.Validator.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          diffs_ = java.util.Collections.unmodifiableList(diffs_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseEndBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseEndBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.ResponseEndBlock.class, com.github.jtmsp.types.Types.ResponseEndBlock.Builder.class);
    }

    public static final int DIFFS_FIELD_NUMBER = 4;
    private java.util.List<com.github.jtmsp.types.Types.Validator> diffs_;
    /**
     * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
     */
    public java.util.List<com.github.jtmsp.types.Types.Validator> getDiffsList() {
      return diffs_;
    }
    /**
     * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
     */
    public java.util.List<? extends com.github.jtmsp.types.Types.ValidatorOrBuilder> 
        getDiffsOrBuilderList() {
      return diffs_;
    }
    /**
     * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
     */
    public int getDiffsCount() {
      return diffs_.size();
    }
    /**
     * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
     */
    public com.github.jtmsp.types.Types.Validator getDiffs(int index) {
      return diffs_.get(index);
    }
    /**
     * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
     */
    public com.github.jtmsp.types.Types.ValidatorOrBuilder getDiffsOrBuilder(
        int index) {
      return diffs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < diffs_.size(); i++) {
        output.writeMessage(4, diffs_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < diffs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, diffs_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.ResponseEndBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseEndBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseEndBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.ResponseEndBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseEndBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseEndBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseEndBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseEndBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.ResponseEndBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.ResponseEndBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.ResponseEndBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.ResponseEndBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.ResponseEndBlock)
        com.github.jtmsp.types.Types.ResponseEndBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseEndBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseEndBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.ResponseEndBlock.class, com.github.jtmsp.types.Types.ResponseEndBlock.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.ResponseEndBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDiffsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (diffsBuilder_ == null) {
          diffs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          diffsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_ResponseEndBlock_descriptor;
      }

      public com.github.jtmsp.types.Types.ResponseEndBlock getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.ResponseEndBlock.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.ResponseEndBlock build() {
        com.github.jtmsp.types.Types.ResponseEndBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.ResponseEndBlock buildPartial() {
        com.github.jtmsp.types.Types.ResponseEndBlock result = new com.github.jtmsp.types.Types.ResponseEndBlock(this);
        int from_bitField0_ = bitField0_;
        if (diffsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            diffs_ = java.util.Collections.unmodifiableList(diffs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.diffs_ = diffs_;
        } else {
          result.diffs_ = diffsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.ResponseEndBlock) {
          return mergeFrom((com.github.jtmsp.types.Types.ResponseEndBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.ResponseEndBlock other) {
        if (other == com.github.jtmsp.types.Types.ResponseEndBlock.getDefaultInstance()) return this;
        if (diffsBuilder_ == null) {
          if (!other.diffs_.isEmpty()) {
            if (diffs_.isEmpty()) {
              diffs_ = other.diffs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDiffsIsMutable();
              diffs_.addAll(other.diffs_);
            }
            onChanged();
          }
        } else {
          if (!other.diffs_.isEmpty()) {
            if (diffsBuilder_.isEmpty()) {
              diffsBuilder_.dispose();
              diffsBuilder_ = null;
              diffs_ = other.diffs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              diffsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDiffsFieldBuilder() : null;
            } else {
              diffsBuilder_.addAllMessages(other.diffs_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.ResponseEndBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.ResponseEndBlock) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.github.jtmsp.types.Types.Validator> diffs_ =
        java.util.Collections.emptyList();
      private void ensureDiffsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          diffs_ = new java.util.ArrayList<com.github.jtmsp.types.Types.Validator>(diffs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.github.jtmsp.types.Types.Validator, com.github.jtmsp.types.Types.Validator.Builder, com.github.jtmsp.types.Types.ValidatorOrBuilder> diffsBuilder_;

      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public java.util.List<com.github.jtmsp.types.Types.Validator> getDiffsList() {
        if (diffsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(diffs_);
        } else {
          return diffsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public int getDiffsCount() {
        if (diffsBuilder_ == null) {
          return diffs_.size();
        } else {
          return diffsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public com.github.jtmsp.types.Types.Validator getDiffs(int index) {
        if (diffsBuilder_ == null) {
          return diffs_.get(index);
        } else {
          return diffsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public Builder setDiffs(
          int index, com.github.jtmsp.types.Types.Validator value) {
        if (diffsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiffsIsMutable();
          diffs_.set(index, value);
          onChanged();
        } else {
          diffsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public Builder setDiffs(
          int index, com.github.jtmsp.types.Types.Validator.Builder builderForValue) {
        if (diffsBuilder_ == null) {
          ensureDiffsIsMutable();
          diffs_.set(index, builderForValue.build());
          onChanged();
        } else {
          diffsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public Builder addDiffs(com.github.jtmsp.types.Types.Validator value) {
        if (diffsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiffsIsMutable();
          diffs_.add(value);
          onChanged();
        } else {
          diffsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public Builder addDiffs(
          int index, com.github.jtmsp.types.Types.Validator value) {
        if (diffsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiffsIsMutable();
          diffs_.add(index, value);
          onChanged();
        } else {
          diffsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public Builder addDiffs(
          com.github.jtmsp.types.Types.Validator.Builder builderForValue) {
        if (diffsBuilder_ == null) {
          ensureDiffsIsMutable();
          diffs_.add(builderForValue.build());
          onChanged();
        } else {
          diffsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public Builder addDiffs(
          int index, com.github.jtmsp.types.Types.Validator.Builder builderForValue) {
        if (diffsBuilder_ == null) {
          ensureDiffsIsMutable();
          diffs_.add(index, builderForValue.build());
          onChanged();
        } else {
          diffsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public Builder addAllDiffs(
          java.lang.Iterable<? extends com.github.jtmsp.types.Types.Validator> values) {
        if (diffsBuilder_ == null) {
          ensureDiffsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, diffs_);
          onChanged();
        } else {
          diffsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public Builder clearDiffs() {
        if (diffsBuilder_ == null) {
          diffs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          diffsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public Builder removeDiffs(int index) {
        if (diffsBuilder_ == null) {
          ensureDiffsIsMutable();
          diffs_.remove(index);
          onChanged();
        } else {
          diffsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public com.github.jtmsp.types.Types.Validator.Builder getDiffsBuilder(
          int index) {
        return getDiffsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public com.github.jtmsp.types.Types.ValidatorOrBuilder getDiffsOrBuilder(
          int index) {
        if (diffsBuilder_ == null) {
          return diffs_.get(index);  } else {
          return diffsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public java.util.List<? extends com.github.jtmsp.types.Types.ValidatorOrBuilder> 
           getDiffsOrBuilderList() {
        if (diffsBuilder_ != null) {
          return diffsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(diffs_);
        }
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public com.github.jtmsp.types.Types.Validator.Builder addDiffsBuilder() {
        return getDiffsFieldBuilder().addBuilder(
            com.github.jtmsp.types.Types.Validator.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public com.github.jtmsp.types.Types.Validator.Builder addDiffsBuilder(
          int index) {
        return getDiffsFieldBuilder().addBuilder(
            index, com.github.jtmsp.types.Types.Validator.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.jtmsp.types.Validator diffs = 4;</code>
       */
      public java.util.List<com.github.jtmsp.types.Types.Validator.Builder> 
           getDiffsBuilderList() {
        return getDiffsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.github.jtmsp.types.Types.Validator, com.github.jtmsp.types.Types.Validator.Builder, com.github.jtmsp.types.Types.ValidatorOrBuilder> 
          getDiffsFieldBuilder() {
        if (diffsBuilder_ == null) {
          diffsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.github.jtmsp.types.Types.Validator, com.github.jtmsp.types.Types.Validator.Builder, com.github.jtmsp.types.Types.ValidatorOrBuilder>(
                  diffs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          diffs_ = null;
        }
        return diffsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.ResponseEndBlock)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.ResponseEndBlock)
    private static final com.github.jtmsp.types.Types.ResponseEndBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.ResponseEndBlock();
    }

    public static com.github.jtmsp.types.Types.ResponseEndBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseEndBlock>
        PARSER = new com.google.protobuf.AbstractParser<ResponseEndBlock>() {
      public ResponseEndBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseEndBlock(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseEndBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseEndBlock> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.ResponseEndBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ValidatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtmsp.types.Validator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes pubKey = 1;</code>
     */
    com.google.protobuf.ByteString getPubKey();

    /**
     * <code>optional uint64 power = 2;</code>
     */
    long getPower();
  }
  /**
   * Protobuf type {@code com.github.jtmsp.types.Validator}
   */
  public  static final class Validator extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.jtmsp.types.Validator)
      ValidatorOrBuilder {
    // Use Validator.newBuilder() to construct.
    private Validator(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Validator() {
      pubKey_ = com.google.protobuf.ByteString.EMPTY;
      power_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Validator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              pubKey_ = input.readBytes();
              break;
            }
            case 16: {

              power_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Validator_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Validator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtmsp.types.Types.Validator.class, com.github.jtmsp.types.Types.Validator.Builder.class);
    }

    public static final int PUBKEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString pubKey_;
    /**
     * <code>optional bytes pubKey = 1;</code>
     */
    public com.google.protobuf.ByteString getPubKey() {
      return pubKey_;
    }

    public static final int POWER_FIELD_NUMBER = 2;
    private long power_;
    /**
     * <code>optional uint64 power = 2;</code>
     */
    public long getPower() {
      return power_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!pubKey_.isEmpty()) {
        output.writeBytes(1, pubKey_);
      }
      if (power_ != 0L) {
        output.writeUInt64(2, power_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!pubKey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, pubKey_);
      }
      if (power_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, power_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jtmsp.types.Types.Validator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.Validator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Validator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtmsp.types.Types.Validator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Validator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.Validator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Validator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.Validator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtmsp.types.Types.Validator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtmsp.types.Types.Validator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtmsp.types.Types.Validator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtmsp.types.Validator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtmsp.types.Validator)
        com.github.jtmsp.types.Types.ValidatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Validator_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Validator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtmsp.types.Types.Validator.class, com.github.jtmsp.types.Types.Validator.Builder.class);
      }

      // Construct using com.github.jtmsp.types.Types.Validator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        pubKey_ = com.google.protobuf.ByteString.EMPTY;

        power_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtmsp.types.Types.internal_static_com_github_jtmsp_types_Validator_descriptor;
      }

      public com.github.jtmsp.types.Types.Validator getDefaultInstanceForType() {
        return com.github.jtmsp.types.Types.Validator.getDefaultInstance();
      }

      public com.github.jtmsp.types.Types.Validator build() {
        com.github.jtmsp.types.Types.Validator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtmsp.types.Types.Validator buildPartial() {
        com.github.jtmsp.types.Types.Validator result = new com.github.jtmsp.types.Types.Validator(this);
        result.pubKey_ = pubKey_;
        result.power_ = power_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtmsp.types.Types.Validator) {
          return mergeFrom((com.github.jtmsp.types.Types.Validator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtmsp.types.Types.Validator other) {
        if (other == com.github.jtmsp.types.Types.Validator.getDefaultInstance()) return this;
        if (other.getPubKey() != com.google.protobuf.ByteString.EMPTY) {
          setPubKey(other.getPubKey());
        }
        if (other.getPower() != 0L) {
          setPower(other.getPower());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtmsp.types.Types.Validator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtmsp.types.Types.Validator) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString pubKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes pubKey = 1;</code>
       */
      public com.google.protobuf.ByteString getPubKey() {
        return pubKey_;
      }
      /**
       * <code>optional bytes pubKey = 1;</code>
       */
      public Builder setPubKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pubKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes pubKey = 1;</code>
       */
      public Builder clearPubKey() {
        
        pubKey_ = getDefaultInstance().getPubKey();
        onChanged();
        return this;
      }

      private long power_ ;
      /**
       * <code>optional uint64 power = 2;</code>
       */
      public long getPower() {
        return power_;
      }
      /**
       * <code>optional uint64 power = 2;</code>
       */
      public Builder setPower(long value) {
        
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 power = 2;</code>
       */
      public Builder clearPower() {
        
        power_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtmsp.types.Validator)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtmsp.types.Validator)
    private static final com.github.jtmsp.types.Types.Validator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtmsp.types.Types.Validator();
    }

    public static com.github.jtmsp.types.Types.Validator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Validator>
        PARSER = new com.google.protobuf.AbstractParser<Validator>() {
      public Validator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Validator(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Validator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Validator> getParserForType() {
      return PARSER;
    }

    public com.github.jtmsp.types.Types.Validator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_RequestEcho_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_RequestEcho_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_RequestFlush_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_RequestFlush_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_RequestInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_RequestInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_RequestSetOption_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_RequestSetOption_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_RequestAppendTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_RequestAppendTx_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_RequestCheckTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_RequestCheckTx_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_RequestQuery_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_RequestQuery_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_RequestCommit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_RequestCommit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_RequestInitChain_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_RequestInitChain_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_RequestBeginBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_RequestBeginBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_RequestEndBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_RequestEndBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseException_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseException_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseEcho_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseEcho_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseFlush_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseFlush_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseSetOption_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseSetOption_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseAppendTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseAppendTx_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseCheckTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseCheckTx_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseQuery_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseQuery_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseCommit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseCommit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseInitChain_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseInitChain_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseBeginBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseBeginBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_ResponseEndBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_ResponseEndBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtmsp_types_Validator_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_jtmsp_types_Validator_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013types.proto\022\026com.github.jtmsp.types\"\235\005" +
      "\n\007Request\0223\n\004echo\030\001 \001(\0132#.com.github.jtm" +
      "sp.types.RequestEchoH\000\0225\n\005flush\030\002 \001(\0132$." +
      "com.github.jtmsp.types.RequestFlushH\000\0223\n" +
      "\004info\030\003 \001(\0132#.com.github.jtmsp.types.Req" +
      "uestInfoH\000\022>\n\nset_option\030\004 \001(\0132(.com.git" +
      "hub.jtmsp.types.RequestSetOptionH\000\022<\n\tap" +
      "pend_tx\030\005 \001(\0132\'.com.github.jtmsp.types.R" +
      "equestAppendTxH\000\022:\n\010check_tx\030\006 \001(\0132&.com" +
      ".github.jtmsp.types.RequestCheckTxH\000\0227\n\006",
      "commit\030\007 \001(\0132%.com.github.jtmsp.types.Re" +
      "questCommitH\000\0225\n\005query\030\010 \001(\0132$.com.githu" +
      "b.jtmsp.types.RequestQueryH\000\022>\n\ninit_cha" +
      "in\030\t \001(\0132(.com.github.jtmsp.types.Reques" +
      "tInitChainH\000\022@\n\013begin_block\030\n \001(\0132).com." +
      "github.jtmsp.types.RequestBeginBlockH\000\022<" +
      "\n\tend_block\030\013 \001(\0132\'.com.github.jtmsp.typ" +
      "es.RequestEndBlockH\000B\007\n\005value\"\036\n\013Request" +
      "Echo\022\017\n\007message\030\001 \001(\t\"\016\n\014RequestFlush\"\r\n" +
      "\013RequestInfo\".\n\020RequestSetOption\022\013\n\003key\030",
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\035\n\017RequestAppendTx\022" +
      "\n\n\002tx\030\001 \001(\014\"\034\n\016RequestCheckTx\022\n\n\002tx\030\001 \001(" +
      "\014\"\035\n\014RequestQuery\022\r\n\005query\030\001 \001(\014\"\017\n\rRequ" +
      "estCommit\"I\n\020RequestInitChain\0225\n\nvalidat" +
      "ors\030\001 \003(\0132!.com.github.jtmsp.types.Valid" +
      "ator\"#\n\021RequestBeginBlock\022\016\n\006height\030\001 \001(" +
      "\004\"!\n\017RequestEndBlock\022\016\n\006height\030\001 \001(\004\"\351\005\n" +
      "\010Response\022>\n\texception\030\001 \001(\0132).com.githu" +
      "b.jtmsp.types.ResponseExceptionH\000\0224\n\004ech" +
      "o\030\002 \001(\0132$.com.github.jtmsp.types.Respons",
      "eEchoH\000\0226\n\005flush\030\003 \001(\0132%.com.github.jtms" +
      "p.types.ResponseFlushH\000\0224\n\004info\030\004 \001(\0132$." +
      "com.github.jtmsp.types.ResponseInfoH\000\022?\n" +
      "\nset_option\030\005 \001(\0132).com.github.jtmsp.typ" +
      "es.ResponseSetOptionH\000\022=\n\tappend_tx\030\006 \001(" +
      "\0132(.com.github.jtmsp.types.ResponseAppen" +
      "dTxH\000\022;\n\010check_tx\030\007 \001(\0132\'.com.github.jtm" +
      "sp.types.ResponseCheckTxH\000\0228\n\006commit\030\010 \001" +
      "(\0132&.com.github.jtmsp.types.ResponseComm" +
      "itH\000\0226\n\005query\030\t \001(\0132%.com.github.jtmsp.t",
      "ypes.ResponseQueryH\000\022?\n\ninit_chain\030\n \001(\013" +
      "2).com.github.jtmsp.types.ResponseInitCh" +
      "ainH\000\022A\n\013begin_block\030\013 \001(\0132*.com.github." +
      "jtmsp.types.ResponseBeginBlockH\000\022=\n\tend_" +
      "block\030\014 \001(\0132(.com.github.jtmsp.types.Res" +
      "ponseEndBlockH\000B\007\n\005value\"\"\n\021ResponseExce" +
      "ption\022\r\n\005error\030\001 \001(\t\"\037\n\014ResponseEcho\022\017\n\007" +
      "message\030\001 \001(\t\"\017\n\rResponseFlush\"\034\n\014Respon" +
      "seInfo\022\014\n\004info\030\001 \001(\t\" \n\021ResponseSetOptio" +
      "n\022\013\n\003log\030\001 \001(\t\"]\n\020ResponseAppendTx\022.\n\004co",
      "de\030\001 \001(\0162 .com.github.jtmsp.types.CodeTy" +
      "pe\022\014\n\004data\030\002 \001(\014\022\013\n\003log\030\003 \001(\t\"\\\n\017Respons" +
      "eCheckTx\022.\n\004code\030\001 \001(\0162 .com.github.jtms" +
      "p.types.CodeType\022\014\n\004data\030\002 \001(\014\022\013\n\003log\030\003 " +
      "\001(\t\"Z\n\rResponseQuery\022.\n\004code\030\001 \001(\0162 .com" +
      ".github.jtmsp.types.CodeType\022\014\n\004data\030\002 \001" +
      "(\014\022\013\n\003log\030\003 \001(\t\"[\n\016ResponseCommit\022.\n\004cod" +
      "e\030\001 \001(\0162 .com.github.jtmsp.types.CodeTyp" +
      "e\022\014\n\004data\030\002 \001(\014\022\013\n\003log\030\003 \001(\t\"\023\n\021Response" +
      "InitChain\"\024\n\022ResponseBeginBlock\"D\n\020Respo",
      "nseEndBlock\0220\n\005diffs\030\004 \003(\0132!.com.github." +
      "jtmsp.types.Validator\"*\n\tValidator\022\016\n\006pu" +
      "bKey\030\001 \001(\014\022\r\n\005power\030\002 \001(\004*\272\001\n\013MessageTyp" +
      "e\022\017\n\013NullMessage\020\000\022\010\n\004Echo\020\001\022\t\n\005Flush\020\002\022" +
      "\010\n\004Info\020\003\022\r\n\tSetOption\020\004\022\r\n\tException\020\005\022" +
      "\014\n\010AppendTx\020\021\022\013\n\007CheckTx\020\022\022\n\n\006Commit\020\023\022\t" +
      "\n\005Query\020\024\022\r\n\tInitChain\020\025\022\016\n\nBeginBlock\020\026" +
      "\022\014\n\010EndBlock\020\027*\265\005\n\010CodeType\022\006\n\002OK\020\000\022\021\n\rI" +
      "nternalError\020\001\022\021\n\rEncodingError\020\002\022\014\n\010Bad" +
      "Nonce\020\003\022\020\n\014Unauthorized\020\004\022\025\n\021Insufficien",
      "tFunds\020\005\022\022\n\016UnknownRequest\020\006\022\030\n\024BaseDupl" +
      "icateAddress\020e\022\025\n\021BaseEncodingError\020f\022\030\n" +
      "\024BaseInsufficientFees\020g\022\031\n\025BaseInsuffici" +
      "entFunds\020h\022\034\n\030BaseInsufficientGasPrice\020i" +
      "\022\024\n\020BaseInvalidInput\020j\022\025\n\021BaseInvalidOut" +
      "put\020k\022\025\n\021BaseInvalidPubKey\020l\022\027\n\023BaseInva" +
      "lidSequence\020m\022\030\n\024BaseInvalidSignature\020n\022" +
      "\026\n\022BaseUnknownAddress\020o\022\025\n\021BaseUnknownPu" +
      "bKey\020p\022\025\n\021BaseUnknownPlugin\020q\022\025\n\020GovUnkn" +
      "ownEntity\020\311\001\022\024\n\017GovUnknownGroup\020\312\001\022\027\n\022Go",
      "vUnknownProposal\020\313\001\022\026\n\021GovDuplicateGroup" +
      "\020\314\001\022\027\n\022GovDuplicateMember\020\315\001\022\031\n\024GovDupli" +
      "cateProposal\020\316\001\022\025\n\020GovDuplicateVote\020\317\001\022\025" +
      "\n\020GovInvalidMember\020\320\001\022\023\n\016GovInvalidVote\020" +
      "\321\001\022\032\n\025GovInvalidVotingPower\020\322\0012\377\007\n\017TMSPA" +
      "pplication\022Q\n\004Echo\022#.com.github.jtmsp.ty" +
      "pes.RequestEcho\032$.com.github.jtmsp.types" +
      ".ResponseEcho\022T\n\005Flush\022$.com.github.jtms" +
      "p.types.RequestFlush\032%.com.github.jtmsp." +
      "types.ResponseFlush\022Q\n\004Info\022#.com.github",
      ".jtmsp.types.RequestInfo\032$.com.github.jt" +
      "msp.types.ResponseInfo\022`\n\tSetOption\022(.co" +
      "m.github.jtmsp.types.RequestSetOption\032)." +
      "com.github.jtmsp.types.ResponseSetOption" +
      "\022]\n\010AppendTx\022\'.com.github.jtmsp.types.Re" +
      "questAppendTx\032(.com.github.jtmsp.types.R" +
      "esponseAppendTx\022Z\n\007CheckTx\022&.com.github." +
      "jtmsp.types.RequestCheckTx\032\'.com.github." +
      "jtmsp.types.ResponseCheckTx\022T\n\005Query\022$.c" +
      "om.github.jtmsp.types.RequestQuery\032%.com",
      ".github.jtmsp.types.ResponseQuery\022W\n\006Com" +
      "mit\022%.com.github.jtmsp.types.RequestComm" +
      "it\032&.com.github.jtmsp.types.ResponseComm" +
      "it\022`\n\tInitChain\022(.com.github.jtmsp.types" +
      ".RequestInitChain\032).com.github.jtmsp.typ" +
      "es.ResponseInitChain\022c\n\nBeginBlock\022).com" +
      ".github.jtmsp.types.RequestBeginBlock\032*." +
      "com.github.jtmsp.types.ResponseBeginBloc" +
      "k\022]\n\010EndBlock\022\'.com.github.jtmsp.types.R" +
      "equestEndBlock\032(.com.github.jtmsp.types.",
      "ResponseEndBlockb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_github_jtmsp_types_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_github_jtmsp_types_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_Request_descriptor,
        new java.lang.String[] { "Echo", "Flush", "Info", "SetOption", "AppendTx", "CheckTx", "Commit", "Query", "InitChain", "BeginBlock", "EndBlock", "Value", });
    internal_static_com_github_jtmsp_types_RequestEcho_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_github_jtmsp_types_RequestEcho_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_RequestEcho_descriptor,
        new java.lang.String[] { "Message", });
    internal_static_com_github_jtmsp_types_RequestFlush_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_github_jtmsp_types_RequestFlush_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_RequestFlush_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtmsp_types_RequestInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_github_jtmsp_types_RequestInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_RequestInfo_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtmsp_types_RequestSetOption_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_github_jtmsp_types_RequestSetOption_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_RequestSetOption_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_github_jtmsp_types_RequestAppendTx_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_github_jtmsp_types_RequestAppendTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_RequestAppendTx_descriptor,
        new java.lang.String[] { "Tx", });
    internal_static_com_github_jtmsp_types_RequestCheckTx_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_github_jtmsp_types_RequestCheckTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_RequestCheckTx_descriptor,
        new java.lang.String[] { "Tx", });
    internal_static_com_github_jtmsp_types_RequestQuery_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_github_jtmsp_types_RequestQuery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_RequestQuery_descriptor,
        new java.lang.String[] { "Query", });
    internal_static_com_github_jtmsp_types_RequestCommit_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_github_jtmsp_types_RequestCommit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_RequestCommit_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtmsp_types_RequestInitChain_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_com_github_jtmsp_types_RequestInitChain_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_RequestInitChain_descriptor,
        new java.lang.String[] { "Validators", });
    internal_static_com_github_jtmsp_types_RequestBeginBlock_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_com_github_jtmsp_types_RequestBeginBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_RequestBeginBlock_descriptor,
        new java.lang.String[] { "Height", });
    internal_static_com_github_jtmsp_types_RequestEndBlock_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_com_github_jtmsp_types_RequestEndBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_RequestEndBlock_descriptor,
        new java.lang.String[] { "Height", });
    internal_static_com_github_jtmsp_types_Response_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_com_github_jtmsp_types_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_Response_descriptor,
        new java.lang.String[] { "Exception", "Echo", "Flush", "Info", "SetOption", "AppendTx", "CheckTx", "Commit", "Query", "InitChain", "BeginBlock", "EndBlock", "Value", });
    internal_static_com_github_jtmsp_types_ResponseException_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_com_github_jtmsp_types_ResponseException_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseException_descriptor,
        new java.lang.String[] { "Error", });
    internal_static_com_github_jtmsp_types_ResponseEcho_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_com_github_jtmsp_types_ResponseEcho_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseEcho_descriptor,
        new java.lang.String[] { "Message", });
    internal_static_com_github_jtmsp_types_ResponseFlush_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_com_github_jtmsp_types_ResponseFlush_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseFlush_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtmsp_types_ResponseInfo_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_com_github_jtmsp_types_ResponseInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseInfo_descriptor,
        new java.lang.String[] { "Info", });
    internal_static_com_github_jtmsp_types_ResponseSetOption_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_com_github_jtmsp_types_ResponseSetOption_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseSetOption_descriptor,
        new java.lang.String[] { "Log", });
    internal_static_com_github_jtmsp_types_ResponseAppendTx_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_com_github_jtmsp_types_ResponseAppendTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseAppendTx_descriptor,
        new java.lang.String[] { "Code", "Data", "Log", });
    internal_static_com_github_jtmsp_types_ResponseCheckTx_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_com_github_jtmsp_types_ResponseCheckTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseCheckTx_descriptor,
        new java.lang.String[] { "Code", "Data", "Log", });
    internal_static_com_github_jtmsp_types_ResponseQuery_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_com_github_jtmsp_types_ResponseQuery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseQuery_descriptor,
        new java.lang.String[] { "Code", "Data", "Log", });
    internal_static_com_github_jtmsp_types_ResponseCommit_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_com_github_jtmsp_types_ResponseCommit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseCommit_descriptor,
        new java.lang.String[] { "Code", "Data", "Log", });
    internal_static_com_github_jtmsp_types_ResponseInitChain_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_com_github_jtmsp_types_ResponseInitChain_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseInitChain_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtmsp_types_ResponseBeginBlock_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_com_github_jtmsp_types_ResponseBeginBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseBeginBlock_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtmsp_types_ResponseEndBlock_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_com_github_jtmsp_types_ResponseEndBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_ResponseEndBlock_descriptor,
        new java.lang.String[] { "Diffs", });
    internal_static_com_github_jtmsp_types_Validator_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_com_github_jtmsp_types_Validator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_jtmsp_types_Validator_descriptor,
        new java.lang.String[] { "PubKey", "Power", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
