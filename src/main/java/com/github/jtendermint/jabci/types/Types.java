// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/types.proto

package com.github.jtendermint.jabci.types;

public final class Types {
  private Types() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.github.jtendermint.jabci.types.CodeType}
   */
  public enum CodeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OK = 0;</code>
     */
    OK(0),
    /**
     * <pre>
     * General response codes, 0 ~ 99
     * </pre>
     *
     * <code>InternalError = 1;</code>
     */
    InternalError(1),
    /**
     * <code>EncodingError = 2;</code>
     */
    EncodingError(2),
    /**
     * <code>BadNonce = 3;</code>
     */
    BadNonce(3),
    /**
     * <code>Unauthorized = 4;</code>
     */
    Unauthorized(4),
    /**
     * <code>InsufficientFunds = 5;</code>
     */
    InsufficientFunds(5),
    /**
     * <code>UnknownRequest = 6;</code>
     */
    UnknownRequest(6),
    /**
     * <pre>
     * Reserved for basecoin, 100 ~ 199
     * </pre>
     *
     * <code>BaseDuplicateAddress = 101;</code>
     */
    BaseDuplicateAddress(101),
    /**
     * <code>BaseEncodingError = 102;</code>
     */
    BaseEncodingError(102),
    /**
     * <code>BaseInsufficientFees = 103;</code>
     */
    BaseInsufficientFees(103),
    /**
     * <code>BaseInsufficientFunds = 104;</code>
     */
    BaseInsufficientFunds(104),
    /**
     * <code>BaseInsufficientGasPrice = 105;</code>
     */
    BaseInsufficientGasPrice(105),
    /**
     * <code>BaseInvalidInput = 106;</code>
     */
    BaseInvalidInput(106),
    /**
     * <code>BaseInvalidOutput = 107;</code>
     */
    BaseInvalidOutput(107),
    /**
     * <code>BaseInvalidPubKey = 108;</code>
     */
    BaseInvalidPubKey(108),
    /**
     * <code>BaseInvalidSequence = 109;</code>
     */
    BaseInvalidSequence(109),
    /**
     * <code>BaseInvalidSignature = 110;</code>
     */
    BaseInvalidSignature(110),
    /**
     * <code>BaseUnknownAddress = 111;</code>
     */
    BaseUnknownAddress(111),
    /**
     * <code>BaseUnknownPubKey = 112;</code>
     */
    BaseUnknownPubKey(112),
    /**
     * <code>BaseUnknownPlugin = 113;</code>
     */
    BaseUnknownPlugin(113),
    /**
     * <pre>
     * Reserved for governance, 200 ~ 299
     * </pre>
     *
     * <code>GovUnknownEntity = 201;</code>
     */
    GovUnknownEntity(201),
    /**
     * <code>GovUnknownGroup = 202;</code>
     */
    GovUnknownGroup(202),
    /**
     * <code>GovUnknownProposal = 203;</code>
     */
    GovUnknownProposal(203),
    /**
     * <code>GovDuplicateGroup = 204;</code>
     */
    GovDuplicateGroup(204),
    /**
     * <code>GovDuplicateMember = 205;</code>
     */
    GovDuplicateMember(205),
    /**
     * <code>GovDuplicateProposal = 206;</code>
     */
    GovDuplicateProposal(206),
    /**
     * <code>GovDuplicateVote = 207;</code>
     */
    GovDuplicateVote(207),
    /**
     * <code>GovInvalidMember = 208;</code>
     */
    GovInvalidMember(208),
    /**
     * <code>GovInvalidVote = 209;</code>
     */
    GovInvalidVote(209),
    /**
     * <code>GovInvalidVotingPower = 210;</code>
     */
    GovInvalidVotingPower(210),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OK = 0;</code>
     */
    public static final int OK_VALUE = 0;
    /**
     * <pre>
     * General response codes, 0 ~ 99
     * </pre>
     *
     * <code>InternalError = 1;</code>
     */
    public static final int InternalError_VALUE = 1;
    /**
     * <code>EncodingError = 2;</code>
     */
    public static final int EncodingError_VALUE = 2;
    /**
     * <code>BadNonce = 3;</code>
     */
    public static final int BadNonce_VALUE = 3;
    /**
     * <code>Unauthorized = 4;</code>
     */
    public static final int Unauthorized_VALUE = 4;
    /**
     * <code>InsufficientFunds = 5;</code>
     */
    public static final int InsufficientFunds_VALUE = 5;
    /**
     * <code>UnknownRequest = 6;</code>
     */
    public static final int UnknownRequest_VALUE = 6;
    /**
     * <pre>
     * Reserved for basecoin, 100 ~ 199
     * </pre>
     *
     * <code>BaseDuplicateAddress = 101;</code>
     */
    public static final int BaseDuplicateAddress_VALUE = 101;
    /**
     * <code>BaseEncodingError = 102;</code>
     */
    public static final int BaseEncodingError_VALUE = 102;
    /**
     * <code>BaseInsufficientFees = 103;</code>
     */
    public static final int BaseInsufficientFees_VALUE = 103;
    /**
     * <code>BaseInsufficientFunds = 104;</code>
     */
    public static final int BaseInsufficientFunds_VALUE = 104;
    /**
     * <code>BaseInsufficientGasPrice = 105;</code>
     */
    public static final int BaseInsufficientGasPrice_VALUE = 105;
    /**
     * <code>BaseInvalidInput = 106;</code>
     */
    public static final int BaseInvalidInput_VALUE = 106;
    /**
     * <code>BaseInvalidOutput = 107;</code>
     */
    public static final int BaseInvalidOutput_VALUE = 107;
    /**
     * <code>BaseInvalidPubKey = 108;</code>
     */
    public static final int BaseInvalidPubKey_VALUE = 108;
    /**
     * <code>BaseInvalidSequence = 109;</code>
     */
    public static final int BaseInvalidSequence_VALUE = 109;
    /**
     * <code>BaseInvalidSignature = 110;</code>
     */
    public static final int BaseInvalidSignature_VALUE = 110;
    /**
     * <code>BaseUnknownAddress = 111;</code>
     */
    public static final int BaseUnknownAddress_VALUE = 111;
    /**
     * <code>BaseUnknownPubKey = 112;</code>
     */
    public static final int BaseUnknownPubKey_VALUE = 112;
    /**
     * <code>BaseUnknownPlugin = 113;</code>
     */
    public static final int BaseUnknownPlugin_VALUE = 113;
    /**
     * <pre>
     * Reserved for governance, 200 ~ 299
     * </pre>
     *
     * <code>GovUnknownEntity = 201;</code>
     */
    public static final int GovUnknownEntity_VALUE = 201;
    /**
     * <code>GovUnknownGroup = 202;</code>
     */
    public static final int GovUnknownGroup_VALUE = 202;
    /**
     * <code>GovUnknownProposal = 203;</code>
     */
    public static final int GovUnknownProposal_VALUE = 203;
    /**
     * <code>GovDuplicateGroup = 204;</code>
     */
    public static final int GovDuplicateGroup_VALUE = 204;
    /**
     * <code>GovDuplicateMember = 205;</code>
     */
    public static final int GovDuplicateMember_VALUE = 205;
    /**
     * <code>GovDuplicateProposal = 206;</code>
     */
    public static final int GovDuplicateProposal_VALUE = 206;
    /**
     * <code>GovDuplicateVote = 207;</code>
     */
    public static final int GovDuplicateVote_VALUE = 207;
    /**
     * <code>GovInvalidMember = 208;</code>
     */
    public static final int GovInvalidMember_VALUE = 208;
    /**
     * <code>GovInvalidVote = 209;</code>
     */
    public static final int GovInvalidVote_VALUE = 209;
    /**
     * <code>GovInvalidVotingPower = 210;</code>
     */
    public static final int GovInvalidVotingPower_VALUE = 210;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CodeType valueOf(int value) {
      return forNumber(value);
    }

    public static CodeType forNumber(int value) {
      switch (value) {
        case 0: return OK;
        case 1: return InternalError;
        case 2: return EncodingError;
        case 3: return BadNonce;
        case 4: return Unauthorized;
        case 5: return InsufficientFunds;
        case 6: return UnknownRequest;
        case 101: return BaseDuplicateAddress;
        case 102: return BaseEncodingError;
        case 103: return BaseInsufficientFees;
        case 104: return BaseInsufficientFunds;
        case 105: return BaseInsufficientGasPrice;
        case 106: return BaseInvalidInput;
        case 107: return BaseInvalidOutput;
        case 108: return BaseInvalidPubKey;
        case 109: return BaseInvalidSequence;
        case 110: return BaseInvalidSignature;
        case 111: return BaseUnknownAddress;
        case 112: return BaseUnknownPubKey;
        case 113: return BaseUnknownPlugin;
        case 201: return GovUnknownEntity;
        case 202: return GovUnknownGroup;
        case 203: return GovUnknownProposal;
        case 204: return GovDuplicateGroup;
        case 205: return GovDuplicateMember;
        case 206: return GovDuplicateProposal;
        case 207: return GovDuplicateVote;
        case 208: return GovInvalidMember;
        case 209: return GovInvalidVote;
        case 210: return GovInvalidVotingPower;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CodeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CodeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CodeType>() {
            public CodeType findValueByNumber(int number) {
              return CodeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.getDescriptor().getEnumTypes().get(0);
    }

    private static final CodeType[] VALUES = values();

    public static CodeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CodeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.jtendermint.jabci.types.CodeType)
  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestEcho getEcho();
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestEchoOrBuilder getEchoOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestFlush getFlush();
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestFlushOrBuilder getFlushOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestInfo getInfo();
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestInfoOrBuilder getInfoOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestSetOption getSetOption();
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestSetOptionOrBuilder getSetOptionOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestDeliverTx getDeliverTx();
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestDeliverTxOrBuilder getDeliverTxOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestCheckTx getCheckTx();
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestCheckTxOrBuilder getCheckTxOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestCommit getCommit();
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestCommitOrBuilder getCommitOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestQuery getQuery();
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestQueryOrBuilder getQueryOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestInitChain getInitChain();
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestInitChainOrBuilder getInitChainOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestBeginBlock getBeginBlock();
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestBeginBlockOrBuilder getBeginBlockOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestEndBlock getEndBlock();
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
     */
    com.github.jtendermint.jabci.types.Types.RequestEndBlockOrBuilder getEndBlockOrBuilder();

    public com.github.jtendermint.jabci.types.Types.Request.ValueCase getValueCase();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.Request)
      RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Request() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.github.jtendermint.jabci.types.Types.RequestEcho.Builder subBuilder = null;
              if (valueCase_ == 1) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.RequestEcho) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.RequestEcho.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.RequestEcho) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 1;
              break;
            }
            case 18: {
              com.github.jtendermint.jabci.types.Types.RequestFlush.Builder subBuilder = null;
              if (valueCase_ == 2) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.RequestFlush) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.RequestFlush.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.RequestFlush) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 2;
              break;
            }
            case 26: {
              com.github.jtendermint.jabci.types.Types.RequestInfo.Builder subBuilder = null;
              if (valueCase_ == 3) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.RequestInfo) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.RequestInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.RequestInfo) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 3;
              break;
            }
            case 34: {
              com.github.jtendermint.jabci.types.Types.RequestSetOption.Builder subBuilder = null;
              if (valueCase_ == 4) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.RequestSetOption) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.RequestSetOption.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.RequestSetOption) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 4;
              break;
            }
            case 42: {
              com.github.jtendermint.jabci.types.Types.RequestDeliverTx.Builder subBuilder = null;
              if (valueCase_ == 5) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.RequestDeliverTx) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.RequestDeliverTx.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.RequestDeliverTx) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 5;
              break;
            }
            case 50: {
              com.github.jtendermint.jabci.types.Types.RequestCheckTx.Builder subBuilder = null;
              if (valueCase_ == 6) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.RequestCheckTx) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.RequestCheckTx.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.RequestCheckTx) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 6;
              break;
            }
            case 58: {
              com.github.jtendermint.jabci.types.Types.RequestCommit.Builder subBuilder = null;
              if (valueCase_ == 7) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.RequestCommit) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.RequestCommit.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.RequestCommit) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 7;
              break;
            }
            case 66: {
              com.github.jtendermint.jabci.types.Types.RequestQuery.Builder subBuilder = null;
              if (valueCase_ == 8) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.RequestQuery) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.RequestQuery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.RequestQuery) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 8;
              break;
            }
            case 74: {
              com.github.jtendermint.jabci.types.Types.RequestInitChain.Builder subBuilder = null;
              if (valueCase_ == 9) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.RequestInitChain) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.RequestInitChain.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.RequestInitChain) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 9;
              break;
            }
            case 82: {
              com.github.jtendermint.jabci.types.Types.RequestBeginBlock.Builder subBuilder = null;
              if (valueCase_ == 10) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.RequestBeginBlock) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.RequestBeginBlock.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.RequestBeginBlock) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 10;
              break;
            }
            case 90: {
              com.github.jtendermint.jabci.types.Types.RequestEndBlock.Builder subBuilder = null;
              if (valueCase_ == 11) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.RequestEndBlock) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.RequestEndBlock.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.RequestEndBlock) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 11;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.Request.class, com.github.jtendermint.jabci.types.Types.Request.Builder.class);
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      ECHO(1),
      FLUSH(2),
      INFO(3),
      SET_OPTION(4),
      DELIVER_TX(5),
      CHECK_TX(6),
      COMMIT(7),
      QUERY(8),
      INIT_CHAIN(9),
      BEGIN_BLOCK(10),
      END_BLOCK(11),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 1: return ECHO;
          case 2: return FLUSH;
          case 3: return INFO;
          case 4: return SET_OPTION;
          case 5: return DELIVER_TX;
          case 6: return CHECK_TX;
          case 7: return COMMIT;
          case 8: return QUERY;
          case 9: return INIT_CHAIN;
          case 10: return BEGIN_BLOCK;
          case 11: return END_BLOCK;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int ECHO_FIELD_NUMBER = 1;
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestEcho getEcho() {
      if (valueCase_ == 1) {
         return (com.github.jtendermint.jabci.types.Types.RequestEcho) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestEcho.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestEchoOrBuilder getEchoOrBuilder() {
      if (valueCase_ == 1) {
         return (com.github.jtendermint.jabci.types.Types.RequestEcho) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestEcho.getDefaultInstance();
    }

    public static final int FLUSH_FIELD_NUMBER = 2;
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestFlush getFlush() {
      if (valueCase_ == 2) {
         return (com.github.jtendermint.jabci.types.Types.RequestFlush) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestFlush.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestFlushOrBuilder getFlushOrBuilder() {
      if (valueCase_ == 2) {
         return (com.github.jtendermint.jabci.types.Types.RequestFlush) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestFlush.getDefaultInstance();
    }

    public static final int INFO_FIELD_NUMBER = 3;
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestInfo getInfo() {
      if (valueCase_ == 3) {
         return (com.github.jtendermint.jabci.types.Types.RequestInfo) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestInfo.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestInfoOrBuilder getInfoOrBuilder() {
      if (valueCase_ == 3) {
         return (com.github.jtendermint.jabci.types.Types.RequestInfo) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestInfo.getDefaultInstance();
    }

    public static final int SET_OPTION_FIELD_NUMBER = 4;
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestSetOption getSetOption() {
      if (valueCase_ == 4) {
         return (com.github.jtendermint.jabci.types.Types.RequestSetOption) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestSetOption.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestSetOptionOrBuilder getSetOptionOrBuilder() {
      if (valueCase_ == 4) {
         return (com.github.jtendermint.jabci.types.Types.RequestSetOption) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestSetOption.getDefaultInstance();
    }

    public static final int DELIVER_TX_FIELD_NUMBER = 5;
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestDeliverTx getDeliverTx() {
      if (valueCase_ == 5) {
         return (com.github.jtendermint.jabci.types.Types.RequestDeliverTx) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestDeliverTx.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestDeliverTxOrBuilder getDeliverTxOrBuilder() {
      if (valueCase_ == 5) {
         return (com.github.jtendermint.jabci.types.Types.RequestDeliverTx) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestDeliverTx.getDefaultInstance();
    }

    public static final int CHECK_TX_FIELD_NUMBER = 6;
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestCheckTx getCheckTx() {
      if (valueCase_ == 6) {
         return (com.github.jtendermint.jabci.types.Types.RequestCheckTx) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestCheckTx.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestCheckTxOrBuilder getCheckTxOrBuilder() {
      if (valueCase_ == 6) {
         return (com.github.jtendermint.jabci.types.Types.RequestCheckTx) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestCheckTx.getDefaultInstance();
    }

    public static final int COMMIT_FIELD_NUMBER = 7;
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestCommit getCommit() {
      if (valueCase_ == 7) {
         return (com.github.jtendermint.jabci.types.Types.RequestCommit) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestCommit.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestCommitOrBuilder getCommitOrBuilder() {
      if (valueCase_ == 7) {
         return (com.github.jtendermint.jabci.types.Types.RequestCommit) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestCommit.getDefaultInstance();
    }

    public static final int QUERY_FIELD_NUMBER = 8;
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestQuery getQuery() {
      if (valueCase_ == 8) {
         return (com.github.jtendermint.jabci.types.Types.RequestQuery) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestQuery.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestQueryOrBuilder getQueryOrBuilder() {
      if (valueCase_ == 8) {
         return (com.github.jtendermint.jabci.types.Types.RequestQuery) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestQuery.getDefaultInstance();
    }

    public static final int INIT_CHAIN_FIELD_NUMBER = 9;
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestInitChain getInitChain() {
      if (valueCase_ == 9) {
         return (com.github.jtendermint.jabci.types.Types.RequestInitChain) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestInitChain.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestInitChainOrBuilder getInitChainOrBuilder() {
      if (valueCase_ == 9) {
         return (com.github.jtendermint.jabci.types.Types.RequestInitChain) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestInitChain.getDefaultInstance();
    }

    public static final int BEGIN_BLOCK_FIELD_NUMBER = 10;
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestBeginBlock getBeginBlock() {
      if (valueCase_ == 10) {
         return (com.github.jtendermint.jabci.types.Types.RequestBeginBlock) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestBeginBlock.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestBeginBlockOrBuilder getBeginBlockOrBuilder() {
      if (valueCase_ == 10) {
         return (com.github.jtendermint.jabci.types.Types.RequestBeginBlock) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestBeginBlock.getDefaultInstance();
    }

    public static final int END_BLOCK_FIELD_NUMBER = 11;
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestEndBlock getEndBlock() {
      if (valueCase_ == 11) {
         return (com.github.jtendermint.jabci.types.Types.RequestEndBlock) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestEndBlock.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
     */
    public com.github.jtendermint.jabci.types.Types.RequestEndBlockOrBuilder getEndBlockOrBuilder() {
      if (valueCase_ == 11) {
         return (com.github.jtendermint.jabci.types.Types.RequestEndBlock) value_;
      }
      return com.github.jtendermint.jabci.types.Types.RequestEndBlock.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (valueCase_ == 1) {
        output.writeMessage(1, (com.github.jtendermint.jabci.types.Types.RequestEcho) value_);
      }
      if (valueCase_ == 2) {
        output.writeMessage(2, (com.github.jtendermint.jabci.types.Types.RequestFlush) value_);
      }
      if (valueCase_ == 3) {
        output.writeMessage(3, (com.github.jtendermint.jabci.types.Types.RequestInfo) value_);
      }
      if (valueCase_ == 4) {
        output.writeMessage(4, (com.github.jtendermint.jabci.types.Types.RequestSetOption) value_);
      }
      if (valueCase_ == 5) {
        output.writeMessage(5, (com.github.jtendermint.jabci.types.Types.RequestDeliverTx) value_);
      }
      if (valueCase_ == 6) {
        output.writeMessage(6, (com.github.jtendermint.jabci.types.Types.RequestCheckTx) value_);
      }
      if (valueCase_ == 7) {
        output.writeMessage(7, (com.github.jtendermint.jabci.types.Types.RequestCommit) value_);
      }
      if (valueCase_ == 8) {
        output.writeMessage(8, (com.github.jtendermint.jabci.types.Types.RequestQuery) value_);
      }
      if (valueCase_ == 9) {
        output.writeMessage(9, (com.github.jtendermint.jabci.types.Types.RequestInitChain) value_);
      }
      if (valueCase_ == 10) {
        output.writeMessage(10, (com.github.jtendermint.jabci.types.Types.RequestBeginBlock) value_);
      }
      if (valueCase_ == 11) {
        output.writeMessage(11, (com.github.jtendermint.jabci.types.Types.RequestEndBlock) value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (valueCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.github.jtendermint.jabci.types.Types.RequestEcho) value_);
      }
      if (valueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.github.jtendermint.jabci.types.Types.RequestFlush) value_);
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.github.jtendermint.jabci.types.Types.RequestInfo) value_);
      }
      if (valueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.github.jtendermint.jabci.types.Types.RequestSetOption) value_);
      }
      if (valueCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.github.jtendermint.jabci.types.Types.RequestDeliverTx) value_);
      }
      if (valueCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (com.github.jtendermint.jabci.types.Types.RequestCheckTx) value_);
      }
      if (valueCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.github.jtendermint.jabci.types.Types.RequestCommit) value_);
      }
      if (valueCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (com.github.jtendermint.jabci.types.Types.RequestQuery) value_);
      }
      if (valueCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.github.jtendermint.jabci.types.Types.RequestInitChain) value_);
      }
      if (valueCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (com.github.jtendermint.jabci.types.Types.RequestBeginBlock) value_);
      }
      if (valueCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (com.github.jtendermint.jabci.types.Types.RequestEndBlock) value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.Request)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.Request other = (com.github.jtendermint.jabci.types.Types.Request) obj;

      boolean result = true;
      result = result && getValueCase().equals(
          other.getValueCase());
      if (!result) return false;
      switch (valueCase_) {
        case 1:
          result = result && getEcho()
              .equals(other.getEcho());
          break;
        case 2:
          result = result && getFlush()
              .equals(other.getFlush());
          break;
        case 3:
          result = result && getInfo()
              .equals(other.getInfo());
          break;
        case 4:
          result = result && getSetOption()
              .equals(other.getSetOption());
          break;
        case 5:
          result = result && getDeliverTx()
              .equals(other.getDeliverTx());
          break;
        case 6:
          result = result && getCheckTx()
              .equals(other.getCheckTx());
          break;
        case 7:
          result = result && getCommit()
              .equals(other.getCommit());
          break;
        case 8:
          result = result && getQuery()
              .equals(other.getQuery());
          break;
        case 9:
          result = result && getInitChain()
              .equals(other.getInitChain());
          break;
        case 10:
          result = result && getBeginBlock()
              .equals(other.getBeginBlock());
          break;
        case 11:
          result = result && getEndBlock()
              .equals(other.getEndBlock());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (valueCase_) {
        case 1:
          hash = (37 * hash) + ECHO_FIELD_NUMBER;
          hash = (53 * hash) + getEcho().hashCode();
          break;
        case 2:
          hash = (37 * hash) + FLUSH_FIELD_NUMBER;
          hash = (53 * hash) + getFlush().hashCode();
          break;
        case 3:
          hash = (37 * hash) + INFO_FIELD_NUMBER;
          hash = (53 * hash) + getInfo().hashCode();
          break;
        case 4:
          hash = (37 * hash) + SET_OPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSetOption().hashCode();
          break;
        case 5:
          hash = (37 * hash) + DELIVER_TX_FIELD_NUMBER;
          hash = (53 * hash) + getDeliverTx().hashCode();
          break;
        case 6:
          hash = (37 * hash) + CHECK_TX_FIELD_NUMBER;
          hash = (53 * hash) + getCheckTx().hashCode();
          break;
        case 7:
          hash = (37 * hash) + COMMIT_FIELD_NUMBER;
          hash = (53 * hash) + getCommit().hashCode();
          break;
        case 8:
          hash = (37 * hash) + QUERY_FIELD_NUMBER;
          hash = (53 * hash) + getQuery().hashCode();
          break;
        case 9:
          hash = (37 * hash) + INIT_CHAIN_FIELD_NUMBER;
          hash = (53 * hash) + getInitChain().hashCode();
          break;
        case 10:
          hash = (37 * hash) + BEGIN_BLOCK_FIELD_NUMBER;
          hash = (53 * hash) + getBeginBlock().hashCode();
          break;
        case 11:
          hash = (37 * hash) + END_BLOCK_FIELD_NUMBER;
          hash = (53 * hash) + getEndBlock().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.Request)
        com.github.jtendermint.jabci.types.Types.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.Request.class, com.github.jtendermint.jabci.types.Types.Request.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        valueCase_ = 0;
        value_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Request_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.Request getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.Request.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.Request build() {
        com.github.jtendermint.jabci.types.Types.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.Request buildPartial() {
        com.github.jtendermint.jabci.types.Types.Request result = new com.github.jtendermint.jabci.types.Types.Request(this);
        if (valueCase_ == 1) {
          if (echoBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = echoBuilder_.build();
          }
        }
        if (valueCase_ == 2) {
          if (flushBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = flushBuilder_.build();
          }
        }
        if (valueCase_ == 3) {
          if (infoBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = infoBuilder_.build();
          }
        }
        if (valueCase_ == 4) {
          if (setOptionBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = setOptionBuilder_.build();
          }
        }
        if (valueCase_ == 5) {
          if (deliverTxBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = deliverTxBuilder_.build();
          }
        }
        if (valueCase_ == 6) {
          if (checkTxBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = checkTxBuilder_.build();
          }
        }
        if (valueCase_ == 7) {
          if (commitBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = commitBuilder_.build();
          }
        }
        if (valueCase_ == 8) {
          if (queryBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = queryBuilder_.build();
          }
        }
        if (valueCase_ == 9) {
          if (initChainBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = initChainBuilder_.build();
          }
        }
        if (valueCase_ == 10) {
          if (beginBlockBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = beginBlockBuilder_.build();
          }
        }
        if (valueCase_ == 11) {
          if (endBlockBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = endBlockBuilder_.build();
          }
        }
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.Request) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.Request other) {
        if (other == com.github.jtendermint.jabci.types.Types.Request.getDefaultInstance()) return this;
        switch (other.getValueCase()) {
          case ECHO: {
            mergeEcho(other.getEcho());
            break;
          }
          case FLUSH: {
            mergeFlush(other.getFlush());
            break;
          }
          case INFO: {
            mergeInfo(other.getInfo());
            break;
          }
          case SET_OPTION: {
            mergeSetOption(other.getSetOption());
            break;
          }
          case DELIVER_TX: {
            mergeDeliverTx(other.getDeliverTx());
            break;
          }
          case CHECK_TX: {
            mergeCheckTx(other.getCheckTx());
            break;
          }
          case COMMIT: {
            mergeCommit(other.getCommit());
            break;
          }
          case QUERY: {
            mergeQuery(other.getQuery());
            break;
          }
          case INIT_CHAIN: {
            mergeInitChain(other.getInitChain());
            break;
          }
          case BEGIN_BLOCK: {
            mergeBeginBlock(other.getBeginBlock());
            break;
          }
          case END_BLOCK: {
            mergeEndBlock(other.getEndBlock());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestEcho, com.github.jtendermint.jabci.types.Types.RequestEcho.Builder, com.github.jtendermint.jabci.types.Types.RequestEchoOrBuilder> echoBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestEcho getEcho() {
        if (echoBuilder_ == null) {
          if (valueCase_ == 1) {
            return (com.github.jtendermint.jabci.types.Types.RequestEcho) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestEcho.getDefaultInstance();
        } else {
          if (valueCase_ == 1) {
            return echoBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.RequestEcho.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
       */
      public Builder setEcho(com.github.jtendermint.jabci.types.Types.RequestEcho value) {
        if (echoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          echoBuilder_.setMessage(value);
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
       */
      public Builder setEcho(
          com.github.jtendermint.jabci.types.Types.RequestEcho.Builder builderForValue) {
        if (echoBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          echoBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
       */
      public Builder mergeEcho(com.github.jtendermint.jabci.types.Types.RequestEcho value) {
        if (echoBuilder_ == null) {
          if (valueCase_ == 1 &&
              value_ != com.github.jtendermint.jabci.types.Types.RequestEcho.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestEcho.newBuilder((com.github.jtendermint.jabci.types.Types.RequestEcho) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 1) {
            echoBuilder_.mergeFrom(value);
          }
          echoBuilder_.setMessage(value);
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
       */
      public Builder clearEcho() {
        if (echoBuilder_ == null) {
          if (valueCase_ == 1) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 1) {
            valueCase_ = 0;
            value_ = null;
          }
          echoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestEcho.Builder getEchoBuilder() {
        return getEchoFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestEchoOrBuilder getEchoOrBuilder() {
        if ((valueCase_ == 1) && (echoBuilder_ != null)) {
          return echoBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 1) {
            return (com.github.jtendermint.jabci.types.Types.RequestEcho) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestEcho.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEcho echo = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestEcho, com.github.jtendermint.jabci.types.Types.RequestEcho.Builder, com.github.jtendermint.jabci.types.Types.RequestEchoOrBuilder> 
          getEchoFieldBuilder() {
        if (echoBuilder_ == null) {
          if (!(valueCase_ == 1)) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestEcho.getDefaultInstance();
          }
          echoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.RequestEcho, com.github.jtendermint.jabci.types.Types.RequestEcho.Builder, com.github.jtendermint.jabci.types.Types.RequestEchoOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.RequestEcho) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 1;
        onChanged();;
        return echoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestFlush, com.github.jtendermint.jabci.types.Types.RequestFlush.Builder, com.github.jtendermint.jabci.types.Types.RequestFlushOrBuilder> flushBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestFlush getFlush() {
        if (flushBuilder_ == null) {
          if (valueCase_ == 2) {
            return (com.github.jtendermint.jabci.types.Types.RequestFlush) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestFlush.getDefaultInstance();
        } else {
          if (valueCase_ == 2) {
            return flushBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.RequestFlush.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
       */
      public Builder setFlush(com.github.jtendermint.jabci.types.Types.RequestFlush value) {
        if (flushBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          flushBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
       */
      public Builder setFlush(
          com.github.jtendermint.jabci.types.Types.RequestFlush.Builder builderForValue) {
        if (flushBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          flushBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
       */
      public Builder mergeFlush(com.github.jtendermint.jabci.types.Types.RequestFlush value) {
        if (flushBuilder_ == null) {
          if (valueCase_ == 2 &&
              value_ != com.github.jtendermint.jabci.types.Types.RequestFlush.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestFlush.newBuilder((com.github.jtendermint.jabci.types.Types.RequestFlush) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 2) {
            flushBuilder_.mergeFrom(value);
          }
          flushBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
       */
      public Builder clearFlush() {
        if (flushBuilder_ == null) {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
          }
          flushBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestFlush.Builder getFlushBuilder() {
        return getFlushFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestFlushOrBuilder getFlushOrBuilder() {
        if ((valueCase_ == 2) && (flushBuilder_ != null)) {
          return flushBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 2) {
            return (com.github.jtendermint.jabci.types.Types.RequestFlush) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestFlush.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestFlush flush = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestFlush, com.github.jtendermint.jabci.types.Types.RequestFlush.Builder, com.github.jtendermint.jabci.types.Types.RequestFlushOrBuilder> 
          getFlushFieldBuilder() {
        if (flushBuilder_ == null) {
          if (!(valueCase_ == 2)) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestFlush.getDefaultInstance();
          }
          flushBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.RequestFlush, com.github.jtendermint.jabci.types.Types.RequestFlush.Builder, com.github.jtendermint.jabci.types.Types.RequestFlushOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.RequestFlush) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 2;
        onChanged();;
        return flushBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestInfo, com.github.jtendermint.jabci.types.Types.RequestInfo.Builder, com.github.jtendermint.jabci.types.Types.RequestInfoOrBuilder> infoBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestInfo getInfo() {
        if (infoBuilder_ == null) {
          if (valueCase_ == 3) {
            return (com.github.jtendermint.jabci.types.Types.RequestInfo) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestInfo.getDefaultInstance();
        } else {
          if (valueCase_ == 3) {
            return infoBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.RequestInfo.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
       */
      public Builder setInfo(com.github.jtendermint.jabci.types.Types.RequestInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          infoBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
       */
      public Builder setInfo(
          com.github.jtendermint.jabci.types.Types.RequestInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          infoBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
       */
      public Builder mergeInfo(com.github.jtendermint.jabci.types.Types.RequestInfo value) {
        if (infoBuilder_ == null) {
          if (valueCase_ == 3 &&
              value_ != com.github.jtendermint.jabci.types.Types.RequestInfo.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestInfo.newBuilder((com.github.jtendermint.jabci.types.Types.RequestInfo) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 3) {
            infoBuilder_.mergeFrom(value);
          }
          infoBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
          }
          infoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestInfo.Builder getInfoBuilder() {
        return getInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestInfoOrBuilder getInfoOrBuilder() {
        if ((valueCase_ == 3) && (infoBuilder_ != null)) {
          return infoBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 3) {
            return (com.github.jtendermint.jabci.types.Types.RequestInfo) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestInfo.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInfo info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestInfo, com.github.jtendermint.jabci.types.Types.RequestInfo.Builder, com.github.jtendermint.jabci.types.Types.RequestInfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          if (!(valueCase_ == 3)) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestInfo.getDefaultInstance();
          }
          infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.RequestInfo, com.github.jtendermint.jabci.types.Types.RequestInfo.Builder, com.github.jtendermint.jabci.types.Types.RequestInfoOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.RequestInfo) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 3;
        onChanged();;
        return infoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestSetOption, com.github.jtendermint.jabci.types.Types.RequestSetOption.Builder, com.github.jtendermint.jabci.types.Types.RequestSetOptionOrBuilder> setOptionBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestSetOption getSetOption() {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 4) {
            return (com.github.jtendermint.jabci.types.Types.RequestSetOption) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestSetOption.getDefaultInstance();
        } else {
          if (valueCase_ == 4) {
            return setOptionBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.RequestSetOption.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
       */
      public Builder setSetOption(com.github.jtendermint.jabci.types.Types.RequestSetOption value) {
        if (setOptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          setOptionBuilder_.setMessage(value);
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
       */
      public Builder setSetOption(
          com.github.jtendermint.jabci.types.Types.RequestSetOption.Builder builderForValue) {
        if (setOptionBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          setOptionBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
       */
      public Builder mergeSetOption(com.github.jtendermint.jabci.types.Types.RequestSetOption value) {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 4 &&
              value_ != com.github.jtendermint.jabci.types.Types.RequestSetOption.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestSetOption.newBuilder((com.github.jtendermint.jabci.types.Types.RequestSetOption) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 4) {
            setOptionBuilder_.mergeFrom(value);
          }
          setOptionBuilder_.setMessage(value);
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
       */
      public Builder clearSetOption() {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
          }
          setOptionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestSetOption.Builder getSetOptionBuilder() {
        return getSetOptionFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestSetOptionOrBuilder getSetOptionOrBuilder() {
        if ((valueCase_ == 4) && (setOptionBuilder_ != null)) {
          return setOptionBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 4) {
            return (com.github.jtendermint.jabci.types.Types.RequestSetOption) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestSetOption.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestSetOption set_option = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestSetOption, com.github.jtendermint.jabci.types.Types.RequestSetOption.Builder, com.github.jtendermint.jabci.types.Types.RequestSetOptionOrBuilder> 
          getSetOptionFieldBuilder() {
        if (setOptionBuilder_ == null) {
          if (!(valueCase_ == 4)) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestSetOption.getDefaultInstance();
          }
          setOptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.RequestSetOption, com.github.jtendermint.jabci.types.Types.RequestSetOption.Builder, com.github.jtendermint.jabci.types.Types.RequestSetOptionOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.RequestSetOption) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 4;
        onChanged();;
        return setOptionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestDeliverTx, com.github.jtendermint.jabci.types.Types.RequestDeliverTx.Builder, com.github.jtendermint.jabci.types.Types.RequestDeliverTxOrBuilder> deliverTxBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestDeliverTx getDeliverTx() {
        if (deliverTxBuilder_ == null) {
          if (valueCase_ == 5) {
            return (com.github.jtendermint.jabci.types.Types.RequestDeliverTx) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestDeliverTx.getDefaultInstance();
        } else {
          if (valueCase_ == 5) {
            return deliverTxBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.RequestDeliverTx.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
       */
      public Builder setDeliverTx(com.github.jtendermint.jabci.types.Types.RequestDeliverTx value) {
        if (deliverTxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          deliverTxBuilder_.setMessage(value);
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
       */
      public Builder setDeliverTx(
          com.github.jtendermint.jabci.types.Types.RequestDeliverTx.Builder builderForValue) {
        if (deliverTxBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          deliverTxBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
       */
      public Builder mergeDeliverTx(com.github.jtendermint.jabci.types.Types.RequestDeliverTx value) {
        if (deliverTxBuilder_ == null) {
          if (valueCase_ == 5 &&
              value_ != com.github.jtendermint.jabci.types.Types.RequestDeliverTx.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestDeliverTx.newBuilder((com.github.jtendermint.jabci.types.Types.RequestDeliverTx) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 5) {
            deliverTxBuilder_.mergeFrom(value);
          }
          deliverTxBuilder_.setMessage(value);
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
       */
      public Builder clearDeliverTx() {
        if (deliverTxBuilder_ == null) {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
          }
          deliverTxBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestDeliverTx.Builder getDeliverTxBuilder() {
        return getDeliverTxFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestDeliverTxOrBuilder getDeliverTxOrBuilder() {
        if ((valueCase_ == 5) && (deliverTxBuilder_ != null)) {
          return deliverTxBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 5) {
            return (com.github.jtendermint.jabci.types.Types.RequestDeliverTx) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestDeliverTx.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestDeliverTx deliver_tx = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestDeliverTx, com.github.jtendermint.jabci.types.Types.RequestDeliverTx.Builder, com.github.jtendermint.jabci.types.Types.RequestDeliverTxOrBuilder> 
          getDeliverTxFieldBuilder() {
        if (deliverTxBuilder_ == null) {
          if (!(valueCase_ == 5)) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestDeliverTx.getDefaultInstance();
          }
          deliverTxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.RequestDeliverTx, com.github.jtendermint.jabci.types.Types.RequestDeliverTx.Builder, com.github.jtendermint.jabci.types.Types.RequestDeliverTxOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.RequestDeliverTx) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 5;
        onChanged();;
        return deliverTxBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestCheckTx, com.github.jtendermint.jabci.types.Types.RequestCheckTx.Builder, com.github.jtendermint.jabci.types.Types.RequestCheckTxOrBuilder> checkTxBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestCheckTx getCheckTx() {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 6) {
            return (com.github.jtendermint.jabci.types.Types.RequestCheckTx) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestCheckTx.getDefaultInstance();
        } else {
          if (valueCase_ == 6) {
            return checkTxBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.RequestCheckTx.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
       */
      public Builder setCheckTx(com.github.jtendermint.jabci.types.Types.RequestCheckTx value) {
        if (checkTxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          checkTxBuilder_.setMessage(value);
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
       */
      public Builder setCheckTx(
          com.github.jtendermint.jabci.types.Types.RequestCheckTx.Builder builderForValue) {
        if (checkTxBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          checkTxBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
       */
      public Builder mergeCheckTx(com.github.jtendermint.jabci.types.Types.RequestCheckTx value) {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 6 &&
              value_ != com.github.jtendermint.jabci.types.Types.RequestCheckTx.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestCheckTx.newBuilder((com.github.jtendermint.jabci.types.Types.RequestCheckTx) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 6) {
            checkTxBuilder_.mergeFrom(value);
          }
          checkTxBuilder_.setMessage(value);
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
       */
      public Builder clearCheckTx() {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
          }
          checkTxBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestCheckTx.Builder getCheckTxBuilder() {
        return getCheckTxFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestCheckTxOrBuilder getCheckTxOrBuilder() {
        if ((valueCase_ == 6) && (checkTxBuilder_ != null)) {
          return checkTxBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 6) {
            return (com.github.jtendermint.jabci.types.Types.RequestCheckTx) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestCheckTx.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCheckTx check_tx = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestCheckTx, com.github.jtendermint.jabci.types.Types.RequestCheckTx.Builder, com.github.jtendermint.jabci.types.Types.RequestCheckTxOrBuilder> 
          getCheckTxFieldBuilder() {
        if (checkTxBuilder_ == null) {
          if (!(valueCase_ == 6)) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestCheckTx.getDefaultInstance();
          }
          checkTxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.RequestCheckTx, com.github.jtendermint.jabci.types.Types.RequestCheckTx.Builder, com.github.jtendermint.jabci.types.Types.RequestCheckTxOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.RequestCheckTx) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 6;
        onChanged();;
        return checkTxBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestCommit, com.github.jtendermint.jabci.types.Types.RequestCommit.Builder, com.github.jtendermint.jabci.types.Types.RequestCommitOrBuilder> commitBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestCommit getCommit() {
        if (commitBuilder_ == null) {
          if (valueCase_ == 7) {
            return (com.github.jtendermint.jabci.types.Types.RequestCommit) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestCommit.getDefaultInstance();
        } else {
          if (valueCase_ == 7) {
            return commitBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.RequestCommit.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
       */
      public Builder setCommit(com.github.jtendermint.jabci.types.Types.RequestCommit value) {
        if (commitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          commitBuilder_.setMessage(value);
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
       */
      public Builder setCommit(
          com.github.jtendermint.jabci.types.Types.RequestCommit.Builder builderForValue) {
        if (commitBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          commitBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
       */
      public Builder mergeCommit(com.github.jtendermint.jabci.types.Types.RequestCommit value) {
        if (commitBuilder_ == null) {
          if (valueCase_ == 7 &&
              value_ != com.github.jtendermint.jabci.types.Types.RequestCommit.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestCommit.newBuilder((com.github.jtendermint.jabci.types.Types.RequestCommit) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 7) {
            commitBuilder_.mergeFrom(value);
          }
          commitBuilder_.setMessage(value);
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
       */
      public Builder clearCommit() {
        if (commitBuilder_ == null) {
          if (valueCase_ == 7) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 7) {
            valueCase_ = 0;
            value_ = null;
          }
          commitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestCommit.Builder getCommitBuilder() {
        return getCommitFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestCommitOrBuilder getCommitOrBuilder() {
        if ((valueCase_ == 7) && (commitBuilder_ != null)) {
          return commitBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 7) {
            return (com.github.jtendermint.jabci.types.Types.RequestCommit) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestCommit.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestCommit commit = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestCommit, com.github.jtendermint.jabci.types.Types.RequestCommit.Builder, com.github.jtendermint.jabci.types.Types.RequestCommitOrBuilder> 
          getCommitFieldBuilder() {
        if (commitBuilder_ == null) {
          if (!(valueCase_ == 7)) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestCommit.getDefaultInstance();
          }
          commitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.RequestCommit, com.github.jtendermint.jabci.types.Types.RequestCommit.Builder, com.github.jtendermint.jabci.types.Types.RequestCommitOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.RequestCommit) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 7;
        onChanged();;
        return commitBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestQuery, com.github.jtendermint.jabci.types.Types.RequestQuery.Builder, com.github.jtendermint.jabci.types.Types.RequestQueryOrBuilder> queryBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestQuery getQuery() {
        if (queryBuilder_ == null) {
          if (valueCase_ == 8) {
            return (com.github.jtendermint.jabci.types.Types.RequestQuery) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestQuery.getDefaultInstance();
        } else {
          if (valueCase_ == 8) {
            return queryBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.RequestQuery.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
       */
      public Builder setQuery(com.github.jtendermint.jabci.types.Types.RequestQuery value) {
        if (queryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          queryBuilder_.setMessage(value);
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
       */
      public Builder setQuery(
          com.github.jtendermint.jabci.types.Types.RequestQuery.Builder builderForValue) {
        if (queryBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          queryBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
       */
      public Builder mergeQuery(com.github.jtendermint.jabci.types.Types.RequestQuery value) {
        if (queryBuilder_ == null) {
          if (valueCase_ == 8 &&
              value_ != com.github.jtendermint.jabci.types.Types.RequestQuery.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestQuery.newBuilder((com.github.jtendermint.jabci.types.Types.RequestQuery) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 8) {
            queryBuilder_.mergeFrom(value);
          }
          queryBuilder_.setMessage(value);
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
       */
      public Builder clearQuery() {
        if (queryBuilder_ == null) {
          if (valueCase_ == 8) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 8) {
            valueCase_ = 0;
            value_ = null;
          }
          queryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestQuery.Builder getQueryBuilder() {
        return getQueryFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestQueryOrBuilder getQueryOrBuilder() {
        if ((valueCase_ == 8) && (queryBuilder_ != null)) {
          return queryBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 8) {
            return (com.github.jtendermint.jabci.types.Types.RequestQuery) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestQuery.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestQuery query = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestQuery, com.github.jtendermint.jabci.types.Types.RequestQuery.Builder, com.github.jtendermint.jabci.types.Types.RequestQueryOrBuilder> 
          getQueryFieldBuilder() {
        if (queryBuilder_ == null) {
          if (!(valueCase_ == 8)) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestQuery.getDefaultInstance();
          }
          queryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.RequestQuery, com.github.jtendermint.jabci.types.Types.RequestQuery.Builder, com.github.jtendermint.jabci.types.Types.RequestQueryOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.RequestQuery) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 8;
        onChanged();;
        return queryBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestInitChain, com.github.jtendermint.jabci.types.Types.RequestInitChain.Builder, com.github.jtendermint.jabci.types.Types.RequestInitChainOrBuilder> initChainBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestInitChain getInitChain() {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 9) {
            return (com.github.jtendermint.jabci.types.Types.RequestInitChain) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestInitChain.getDefaultInstance();
        } else {
          if (valueCase_ == 9) {
            return initChainBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.RequestInitChain.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
       */
      public Builder setInitChain(com.github.jtendermint.jabci.types.Types.RequestInitChain value) {
        if (initChainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          initChainBuilder_.setMessage(value);
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
       */
      public Builder setInitChain(
          com.github.jtendermint.jabci.types.Types.RequestInitChain.Builder builderForValue) {
        if (initChainBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          initChainBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
       */
      public Builder mergeInitChain(com.github.jtendermint.jabci.types.Types.RequestInitChain value) {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 9 &&
              value_ != com.github.jtendermint.jabci.types.Types.RequestInitChain.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestInitChain.newBuilder((com.github.jtendermint.jabci.types.Types.RequestInitChain) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 9) {
            initChainBuilder_.mergeFrom(value);
          }
          initChainBuilder_.setMessage(value);
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
       */
      public Builder clearInitChain() {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 9) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 9) {
            valueCase_ = 0;
            value_ = null;
          }
          initChainBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestInitChain.Builder getInitChainBuilder() {
        return getInitChainFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestInitChainOrBuilder getInitChainOrBuilder() {
        if ((valueCase_ == 9) && (initChainBuilder_ != null)) {
          return initChainBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 9) {
            return (com.github.jtendermint.jabci.types.Types.RequestInitChain) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestInitChain.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestInitChain init_chain = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestInitChain, com.github.jtendermint.jabci.types.Types.RequestInitChain.Builder, com.github.jtendermint.jabci.types.Types.RequestInitChainOrBuilder> 
          getInitChainFieldBuilder() {
        if (initChainBuilder_ == null) {
          if (!(valueCase_ == 9)) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestInitChain.getDefaultInstance();
          }
          initChainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.RequestInitChain, com.github.jtendermint.jabci.types.Types.RequestInitChain.Builder, com.github.jtendermint.jabci.types.Types.RequestInitChainOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.RequestInitChain) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 9;
        onChanged();;
        return initChainBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestBeginBlock, com.github.jtendermint.jabci.types.Types.RequestBeginBlock.Builder, com.github.jtendermint.jabci.types.Types.RequestBeginBlockOrBuilder> beginBlockBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestBeginBlock getBeginBlock() {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 10) {
            return (com.github.jtendermint.jabci.types.Types.RequestBeginBlock) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestBeginBlock.getDefaultInstance();
        } else {
          if (valueCase_ == 10) {
            return beginBlockBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.RequestBeginBlock.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
       */
      public Builder setBeginBlock(com.github.jtendermint.jabci.types.Types.RequestBeginBlock value) {
        if (beginBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          beginBlockBuilder_.setMessage(value);
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
       */
      public Builder setBeginBlock(
          com.github.jtendermint.jabci.types.Types.RequestBeginBlock.Builder builderForValue) {
        if (beginBlockBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          beginBlockBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
       */
      public Builder mergeBeginBlock(com.github.jtendermint.jabci.types.Types.RequestBeginBlock value) {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 10 &&
              value_ != com.github.jtendermint.jabci.types.Types.RequestBeginBlock.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestBeginBlock.newBuilder((com.github.jtendermint.jabci.types.Types.RequestBeginBlock) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 10) {
            beginBlockBuilder_.mergeFrom(value);
          }
          beginBlockBuilder_.setMessage(value);
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
       */
      public Builder clearBeginBlock() {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 10) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 10) {
            valueCase_ = 0;
            value_ = null;
          }
          beginBlockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestBeginBlock.Builder getBeginBlockBuilder() {
        return getBeginBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestBeginBlockOrBuilder getBeginBlockOrBuilder() {
        if ((valueCase_ == 10) && (beginBlockBuilder_ != null)) {
          return beginBlockBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 10) {
            return (com.github.jtendermint.jabci.types.Types.RequestBeginBlock) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestBeginBlock.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestBeginBlock begin_block = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestBeginBlock, com.github.jtendermint.jabci.types.Types.RequestBeginBlock.Builder, com.github.jtendermint.jabci.types.Types.RequestBeginBlockOrBuilder> 
          getBeginBlockFieldBuilder() {
        if (beginBlockBuilder_ == null) {
          if (!(valueCase_ == 10)) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestBeginBlock.getDefaultInstance();
          }
          beginBlockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.RequestBeginBlock, com.github.jtendermint.jabci.types.Types.RequestBeginBlock.Builder, com.github.jtendermint.jabci.types.Types.RequestBeginBlockOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.RequestBeginBlock) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 10;
        onChanged();;
        return beginBlockBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestEndBlock, com.github.jtendermint.jabci.types.Types.RequestEndBlock.Builder, com.github.jtendermint.jabci.types.Types.RequestEndBlockOrBuilder> endBlockBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestEndBlock getEndBlock() {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 11) {
            return (com.github.jtendermint.jabci.types.Types.RequestEndBlock) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestEndBlock.getDefaultInstance();
        } else {
          if (valueCase_ == 11) {
            return endBlockBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.RequestEndBlock.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
       */
      public Builder setEndBlock(com.github.jtendermint.jabci.types.Types.RequestEndBlock value) {
        if (endBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          endBlockBuilder_.setMessage(value);
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
       */
      public Builder setEndBlock(
          com.github.jtendermint.jabci.types.Types.RequestEndBlock.Builder builderForValue) {
        if (endBlockBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          endBlockBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
       */
      public Builder mergeEndBlock(com.github.jtendermint.jabci.types.Types.RequestEndBlock value) {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 11 &&
              value_ != com.github.jtendermint.jabci.types.Types.RequestEndBlock.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestEndBlock.newBuilder((com.github.jtendermint.jabci.types.Types.RequestEndBlock) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 11) {
            endBlockBuilder_.mergeFrom(value);
          }
          endBlockBuilder_.setMessage(value);
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
       */
      public Builder clearEndBlock() {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 11) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 11) {
            valueCase_ = 0;
            value_ = null;
          }
          endBlockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestEndBlock.Builder getEndBlockBuilder() {
        return getEndBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
       */
      public com.github.jtendermint.jabci.types.Types.RequestEndBlockOrBuilder getEndBlockOrBuilder() {
        if ((valueCase_ == 11) && (endBlockBuilder_ != null)) {
          return endBlockBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 11) {
            return (com.github.jtendermint.jabci.types.Types.RequestEndBlock) value_;
          }
          return com.github.jtendermint.jabci.types.Types.RequestEndBlock.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.RequestEndBlock end_block = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.RequestEndBlock, com.github.jtendermint.jabci.types.Types.RequestEndBlock.Builder, com.github.jtendermint.jabci.types.Types.RequestEndBlockOrBuilder> 
          getEndBlockFieldBuilder() {
        if (endBlockBuilder_ == null) {
          if (!(valueCase_ == 11)) {
            value_ = com.github.jtendermint.jabci.types.Types.RequestEndBlock.getDefaultInstance();
          }
          endBlockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.RequestEndBlock, com.github.jtendermint.jabci.types.Types.RequestEndBlock.Builder, com.github.jtendermint.jabci.types.Types.RequestEndBlockOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.RequestEndBlock) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 11;
        onChanged();;
        return endBlockBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.Request)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.Request)
    private static final com.github.jtendermint.jabci.types.Types.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.Request();
    }

    public static com.github.jtendermint.jabci.types.Types.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestEchoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.RequestEcho)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.RequestEcho}
   */
  public  static final class RequestEcho extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.RequestEcho)
      RequestEchoOrBuilder {
    // Use RequestEcho.newBuilder() to construct.
    private RequestEcho(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestEcho() {
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestEcho(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestEcho_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestEcho_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.RequestEcho.class, com.github.jtendermint.jabci.types.Types.RequestEcho.Builder.class);
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object message_;
    /**
     * <code>string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.RequestEcho)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.RequestEcho other = (com.github.jtendermint.jabci.types.Types.RequestEcho) obj;

      boolean result = true;
      result = result && getMessage()
          .equals(other.getMessage());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.RequestEcho parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEcho parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEcho parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEcho parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEcho parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEcho parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEcho parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEcho parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEcho parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEcho parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.RequestEcho prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.RequestEcho}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.RequestEcho)
        com.github.jtendermint.jabci.types.Types.RequestEchoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestEcho_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestEcho_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.RequestEcho.class, com.github.jtendermint.jabci.types.Types.RequestEcho.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.RequestEcho.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestEcho_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.RequestEcho getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.RequestEcho.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.RequestEcho build() {
        com.github.jtendermint.jabci.types.Types.RequestEcho result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.RequestEcho buildPartial() {
        com.github.jtendermint.jabci.types.Types.RequestEcho result = new com.github.jtendermint.jabci.types.Types.RequestEcho(this);
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.RequestEcho) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.RequestEcho)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.RequestEcho other) {
        if (other == com.github.jtendermint.jabci.types.Types.RequestEcho.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.RequestEcho parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.RequestEcho) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.RequestEcho)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.RequestEcho)
    private static final com.github.jtendermint.jabci.types.Types.RequestEcho DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.RequestEcho();
    }

    public static com.github.jtendermint.jabci.types.Types.RequestEcho getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestEcho>
        PARSER = new com.google.protobuf.AbstractParser<RequestEcho>() {
      public RequestEcho parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestEcho(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestEcho> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestEcho> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.RequestEcho getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestFlushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.RequestFlush)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.RequestFlush}
   */
  public  static final class RequestFlush extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.RequestFlush)
      RequestFlushOrBuilder {
    // Use RequestFlush.newBuilder() to construct.
    private RequestFlush(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestFlush() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestFlush(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestFlush_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestFlush_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.RequestFlush.class, com.github.jtendermint.jabci.types.Types.RequestFlush.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.RequestFlush)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.RequestFlush other = (com.github.jtendermint.jabci.types.Types.RequestFlush) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.RequestFlush parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestFlush parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestFlush parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestFlush parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestFlush parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestFlush parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestFlush parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestFlush parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestFlush parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestFlush parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.RequestFlush prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.RequestFlush}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.RequestFlush)
        com.github.jtendermint.jabci.types.Types.RequestFlushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestFlush_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestFlush_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.RequestFlush.class, com.github.jtendermint.jabci.types.Types.RequestFlush.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.RequestFlush.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestFlush_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.RequestFlush getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.RequestFlush.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.RequestFlush build() {
        com.github.jtendermint.jabci.types.Types.RequestFlush result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.RequestFlush buildPartial() {
        com.github.jtendermint.jabci.types.Types.RequestFlush result = new com.github.jtendermint.jabci.types.Types.RequestFlush(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.RequestFlush) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.RequestFlush)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.RequestFlush other) {
        if (other == com.github.jtendermint.jabci.types.Types.RequestFlush.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.RequestFlush parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.RequestFlush) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.RequestFlush)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.RequestFlush)
    private static final com.github.jtendermint.jabci.types.Types.RequestFlush DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.RequestFlush();
    }

    public static com.github.jtendermint.jabci.types.Types.RequestFlush getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestFlush>
        PARSER = new com.google.protobuf.AbstractParser<RequestFlush>() {
      public RequestFlush parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestFlush(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestFlush> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestFlush> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.RequestFlush getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.RequestInfo)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.RequestInfo}
   */
  public  static final class RequestInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.RequestInfo)
      RequestInfoOrBuilder {
    // Use RequestInfo.newBuilder() to construct.
    private RequestInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestInfo() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.RequestInfo.class, com.github.jtendermint.jabci.types.Types.RequestInfo.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.RequestInfo)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.RequestInfo other = (com.github.jtendermint.jabci.types.Types.RequestInfo) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.RequestInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.RequestInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.RequestInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.RequestInfo)
        com.github.jtendermint.jabci.types.Types.RequestInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.RequestInfo.class, com.github.jtendermint.jabci.types.Types.RequestInfo.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.RequestInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestInfo_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.RequestInfo getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.RequestInfo.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.RequestInfo build() {
        com.github.jtendermint.jabci.types.Types.RequestInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.RequestInfo buildPartial() {
        com.github.jtendermint.jabci.types.Types.RequestInfo result = new com.github.jtendermint.jabci.types.Types.RequestInfo(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.RequestInfo) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.RequestInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.RequestInfo other) {
        if (other == com.github.jtendermint.jabci.types.Types.RequestInfo.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.RequestInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.RequestInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.RequestInfo)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.RequestInfo)
    private static final com.github.jtendermint.jabci.types.Types.RequestInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.RequestInfo();
    }

    public static com.github.jtendermint.jabci.types.Types.RequestInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestInfo>
        PARSER = new com.google.protobuf.AbstractParser<RequestInfo>() {
      public RequestInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestInfo> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.RequestInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestSetOptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.RequestSetOption)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <code>string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.RequestSetOption}
   */
  public  static final class RequestSetOption extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.RequestSetOption)
      RequestSetOptionOrBuilder {
    // Use RequestSetOption.newBuilder() to construct.
    private RequestSetOption(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestSetOption() {
      key_ = "";
      value_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestSetOption(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestSetOption_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestSetOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.RequestSetOption.class, com.github.jtendermint.jabci.types.Types.RequestSetOption.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <code>string key = 1;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile java.lang.Object value_;
    /**
     * <code>string value = 2;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.RequestSetOption)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.RequestSetOption other = (com.github.jtendermint.jabci.types.Types.RequestSetOption) obj;

      boolean result = true;
      result = result && getKey()
          .equals(other.getKey());
      result = result && getValue()
          .equals(other.getValue());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.RequestSetOption parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestSetOption parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestSetOption parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestSetOption parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestSetOption parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestSetOption parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestSetOption parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestSetOption parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestSetOption parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestSetOption parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.RequestSetOption prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.RequestSetOption}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.RequestSetOption)
        com.github.jtendermint.jabci.types.Types.RequestSetOptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestSetOption_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestSetOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.RequestSetOption.class, com.github.jtendermint.jabci.types.Types.RequestSetOption.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.RequestSetOption.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        key_ = "";

        value_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestSetOption_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.RequestSetOption getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.RequestSetOption.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.RequestSetOption build() {
        com.github.jtendermint.jabci.types.Types.RequestSetOption result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.RequestSetOption buildPartial() {
        com.github.jtendermint.jabci.types.Types.RequestSetOption result = new com.github.jtendermint.jabci.types.Types.RequestSetOption(this);
        result.key_ = key_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.RequestSetOption) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.RequestSetOption)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.RequestSetOption other) {
        if (other == com.github.jtendermint.jabci.types.Types.RequestSetOption.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.RequestSetOption parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.RequestSetOption) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.RequestSetOption)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.RequestSetOption)
    private static final com.github.jtendermint.jabci.types.Types.RequestSetOption DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.RequestSetOption();
    }

    public static com.github.jtendermint.jabci.types.Types.RequestSetOption getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestSetOption>
        PARSER = new com.google.protobuf.AbstractParser<RequestSetOption>() {
      public RequestSetOption parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestSetOption(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestSetOption> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestSetOption> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.RequestSetOption getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestDeliverTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.RequestDeliverTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes tx = 1;</code>
     */
    com.google.protobuf.ByteString getTx();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.RequestDeliverTx}
   */
  public  static final class RequestDeliverTx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.RequestDeliverTx)
      RequestDeliverTxOrBuilder {
    // Use RequestDeliverTx.newBuilder() to construct.
    private RequestDeliverTx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestDeliverTx() {
      tx_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestDeliverTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              tx_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestDeliverTx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestDeliverTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.RequestDeliverTx.class, com.github.jtendermint.jabci.types.Types.RequestDeliverTx.Builder.class);
    }

    public static final int TX_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString tx_;
    /**
     * <code>bytes tx = 1;</code>
     */
    public com.google.protobuf.ByteString getTx() {
      return tx_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!tx_.isEmpty()) {
        output.writeBytes(1, tx_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!tx_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, tx_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.RequestDeliverTx)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.RequestDeliverTx other = (com.github.jtendermint.jabci.types.Types.RequestDeliverTx) obj;

      boolean result = true;
      result = result && getTx()
          .equals(other.getTx());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TX_FIELD_NUMBER;
      hash = (53 * hash) + getTx().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.RequestDeliverTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestDeliverTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestDeliverTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestDeliverTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestDeliverTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestDeliverTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestDeliverTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestDeliverTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestDeliverTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestDeliverTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.RequestDeliverTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.RequestDeliverTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.RequestDeliverTx)
        com.github.jtendermint.jabci.types.Types.RequestDeliverTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestDeliverTx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestDeliverTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.RequestDeliverTx.class, com.github.jtendermint.jabci.types.Types.RequestDeliverTx.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.RequestDeliverTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        tx_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestDeliverTx_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.RequestDeliverTx getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.RequestDeliverTx.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.RequestDeliverTx build() {
        com.github.jtendermint.jabci.types.Types.RequestDeliverTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.RequestDeliverTx buildPartial() {
        com.github.jtendermint.jabci.types.Types.RequestDeliverTx result = new com.github.jtendermint.jabci.types.Types.RequestDeliverTx(this);
        result.tx_ = tx_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.RequestDeliverTx) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.RequestDeliverTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.RequestDeliverTx other) {
        if (other == com.github.jtendermint.jabci.types.Types.RequestDeliverTx.getDefaultInstance()) return this;
        if (other.getTx() != com.google.protobuf.ByteString.EMPTY) {
          setTx(other.getTx());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.RequestDeliverTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.RequestDeliverTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString tx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes tx = 1;</code>
       */
      public com.google.protobuf.ByteString getTx() {
        return tx_;
      }
      /**
       * <code>bytes tx = 1;</code>
       */
      public Builder setTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes tx = 1;</code>
       */
      public Builder clearTx() {
        
        tx_ = getDefaultInstance().getTx();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.RequestDeliverTx)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.RequestDeliverTx)
    private static final com.github.jtendermint.jabci.types.Types.RequestDeliverTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.RequestDeliverTx();
    }

    public static com.github.jtendermint.jabci.types.Types.RequestDeliverTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestDeliverTx>
        PARSER = new com.google.protobuf.AbstractParser<RequestDeliverTx>() {
      public RequestDeliverTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestDeliverTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestDeliverTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestDeliverTx> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.RequestDeliverTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestCheckTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.RequestCheckTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes tx = 1;</code>
     */
    com.google.protobuf.ByteString getTx();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.RequestCheckTx}
   */
  public  static final class RequestCheckTx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.RequestCheckTx)
      RequestCheckTxOrBuilder {
    // Use RequestCheckTx.newBuilder() to construct.
    private RequestCheckTx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestCheckTx() {
      tx_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestCheckTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              tx_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestCheckTx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestCheckTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.RequestCheckTx.class, com.github.jtendermint.jabci.types.Types.RequestCheckTx.Builder.class);
    }

    public static final int TX_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString tx_;
    /**
     * <code>bytes tx = 1;</code>
     */
    public com.google.protobuf.ByteString getTx() {
      return tx_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!tx_.isEmpty()) {
        output.writeBytes(1, tx_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!tx_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, tx_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.RequestCheckTx)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.RequestCheckTx other = (com.github.jtendermint.jabci.types.Types.RequestCheckTx) obj;

      boolean result = true;
      result = result && getTx()
          .equals(other.getTx());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TX_FIELD_NUMBER;
      hash = (53 * hash) + getTx().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.RequestCheckTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCheckTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCheckTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCheckTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCheckTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCheckTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCheckTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCheckTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCheckTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCheckTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.RequestCheckTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.RequestCheckTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.RequestCheckTx)
        com.github.jtendermint.jabci.types.Types.RequestCheckTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestCheckTx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestCheckTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.RequestCheckTx.class, com.github.jtendermint.jabci.types.Types.RequestCheckTx.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.RequestCheckTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        tx_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestCheckTx_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.RequestCheckTx getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.RequestCheckTx.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.RequestCheckTx build() {
        com.github.jtendermint.jabci.types.Types.RequestCheckTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.RequestCheckTx buildPartial() {
        com.github.jtendermint.jabci.types.Types.RequestCheckTx result = new com.github.jtendermint.jabci.types.Types.RequestCheckTx(this);
        result.tx_ = tx_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.RequestCheckTx) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.RequestCheckTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.RequestCheckTx other) {
        if (other == com.github.jtendermint.jabci.types.Types.RequestCheckTx.getDefaultInstance()) return this;
        if (other.getTx() != com.google.protobuf.ByteString.EMPTY) {
          setTx(other.getTx());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.RequestCheckTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.RequestCheckTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString tx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes tx = 1;</code>
       */
      public com.google.protobuf.ByteString getTx() {
        return tx_;
      }
      /**
       * <code>bytes tx = 1;</code>
       */
      public Builder setTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes tx = 1;</code>
       */
      public Builder clearTx() {
        
        tx_ = getDefaultInstance().getTx();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.RequestCheckTx)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.RequestCheckTx)
    private static final com.github.jtendermint.jabci.types.Types.RequestCheckTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.RequestCheckTx();
    }

    public static com.github.jtendermint.jabci.types.Types.RequestCheckTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestCheckTx>
        PARSER = new com.google.protobuf.AbstractParser<RequestCheckTx>() {
      public RequestCheckTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestCheckTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestCheckTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestCheckTx> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.RequestCheckTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestQueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.RequestQuery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes data = 1;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>string path = 2;</code>
     */
    java.lang.String getPath();
    /**
     * <code>string path = 2;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <code>uint64 height = 3;</code>
     */
    long getHeight();

    /**
     * <code>bool prove = 4;</code>
     */
    boolean getProve();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.RequestQuery}
   */
  public  static final class RequestQuery extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.RequestQuery)
      RequestQueryOrBuilder {
    // Use RequestQuery.newBuilder() to construct.
    private RequestQuery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestQuery() {
      data_ = com.google.protobuf.ByteString.EMPTY;
      path_ = "";
      height_ = 0L;
      prove_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestQuery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              data_ = input.readBytes();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              path_ = s;
              break;
            }
            case 24: {

              height_ = input.readUInt64();
              break;
            }
            case 32: {

              prove_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestQuery_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.RequestQuery.class, com.github.jtendermint.jabci.types.Types.RequestQuery.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 1;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int PATH_FIELD_NUMBER = 2;
    private volatile java.lang.Object path_;
    /**
     * <code>string path = 2;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      }
    }
    /**
     * <code>string path = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HEIGHT_FIELD_NUMBER = 3;
    private long height_;
    /**
     * <code>uint64 height = 3;</code>
     */
    public long getHeight() {
      return height_;
    }

    public static final int PROVE_FIELD_NUMBER = 4;
    private boolean prove_;
    /**
     * <code>bool prove = 4;</code>
     */
    public boolean getProve() {
      return prove_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      if (!getPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, path_);
      }
      if (height_ != 0L) {
        output.writeUInt64(3, height_);
      }
      if (prove_ != false) {
        output.writeBool(4, prove_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      if (!getPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, path_);
      }
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, height_);
      }
      if (prove_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, prove_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.RequestQuery)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.RequestQuery other = (com.github.jtendermint.jabci.types.Types.RequestQuery) obj;

      boolean result = true;
      result = result && getData()
          .equals(other.getData());
      result = result && getPath()
          .equals(other.getPath());
      result = result && (getHeight()
          == other.getHeight());
      result = result && (getProve()
          == other.getProve());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      hash = (37 * hash) + PROVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProve());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.RequestQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.RequestQuery prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.RequestQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.RequestQuery)
        com.github.jtendermint.jabci.types.Types.RequestQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestQuery_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestQuery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.RequestQuery.class, com.github.jtendermint.jabci.types.Types.RequestQuery.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.RequestQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        path_ = "";

        height_ = 0L;

        prove_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestQuery_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.RequestQuery getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.RequestQuery.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.RequestQuery build() {
        com.github.jtendermint.jabci.types.Types.RequestQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.RequestQuery buildPartial() {
        com.github.jtendermint.jabci.types.Types.RequestQuery result = new com.github.jtendermint.jabci.types.Types.RequestQuery(this);
        result.data_ = data_;
        result.path_ = path_;
        result.height_ = height_;
        result.prove_ = prove_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.RequestQuery) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.RequestQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.RequestQuery other) {
        if (other == com.github.jtendermint.jabci.types.Types.RequestQuery.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getPath().isEmpty()) {
          path_ = other.path_;
          onChanged();
        }
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        if (other.getProve() != false) {
          setProve(other.getProve());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.RequestQuery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.RequestQuery) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 1;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 1;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 1;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <code>string path = 2;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string path = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string path = 2;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string path = 2;</code>
       */
      public Builder clearPath() {
        
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <code>string path = 2;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        path_ = value;
        onChanged();
        return this;
      }

      private long height_ ;
      /**
       * <code>uint64 height = 3;</code>
       */
      public long getHeight() {
        return height_;
      }
      /**
       * <code>uint64 height = 3;</code>
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 height = 3;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }

      private boolean prove_ ;
      /**
       * <code>bool prove = 4;</code>
       */
      public boolean getProve() {
        return prove_;
      }
      /**
       * <code>bool prove = 4;</code>
       */
      public Builder setProve(boolean value) {
        
        prove_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool prove = 4;</code>
       */
      public Builder clearProve() {
        
        prove_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.RequestQuery)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.RequestQuery)
    private static final com.github.jtendermint.jabci.types.Types.RequestQuery DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.RequestQuery();
    }

    public static com.github.jtendermint.jabci.types.Types.RequestQuery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestQuery>
        PARSER = new com.google.protobuf.AbstractParser<RequestQuery>() {
      public RequestQuery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestQuery(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestQuery> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestQuery> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.RequestQuery getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestCommitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.RequestCommit)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.RequestCommit}
   */
  public  static final class RequestCommit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.RequestCommit)
      RequestCommitOrBuilder {
    // Use RequestCommit.newBuilder() to construct.
    private RequestCommit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestCommit() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestCommit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestCommit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestCommit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.RequestCommit.class, com.github.jtendermint.jabci.types.Types.RequestCommit.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.RequestCommit)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.RequestCommit other = (com.github.jtendermint.jabci.types.Types.RequestCommit) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.RequestCommit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCommit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCommit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCommit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCommit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCommit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCommit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCommit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCommit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestCommit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.RequestCommit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.RequestCommit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.RequestCommit)
        com.github.jtendermint.jabci.types.Types.RequestCommitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestCommit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestCommit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.RequestCommit.class, com.github.jtendermint.jabci.types.Types.RequestCommit.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.RequestCommit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestCommit_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.RequestCommit getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.RequestCommit.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.RequestCommit build() {
        com.github.jtendermint.jabci.types.Types.RequestCommit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.RequestCommit buildPartial() {
        com.github.jtendermint.jabci.types.Types.RequestCommit result = new com.github.jtendermint.jabci.types.Types.RequestCommit(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.RequestCommit) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.RequestCommit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.RequestCommit other) {
        if (other == com.github.jtendermint.jabci.types.Types.RequestCommit.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.RequestCommit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.RequestCommit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.RequestCommit)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.RequestCommit)
    private static final com.github.jtendermint.jabci.types.Types.RequestCommit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.RequestCommit();
    }

    public static com.github.jtendermint.jabci.types.Types.RequestCommit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestCommit>
        PARSER = new com.google.protobuf.AbstractParser<RequestCommit>() {
      public RequestCommit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestCommit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestCommit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestCommit> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.RequestCommit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestInitChainOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.RequestInitChain)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
     */
    java.util.List<com.github.jtendermint.jabci.types.Types.Validator> 
        getValidatorsList();
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.Validator getValidators(int index);
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
     */
    int getValidatorsCount();
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
     */
    java.util.List<? extends com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder> 
        getValidatorsOrBuilderList();
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder getValidatorsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.RequestInitChain}
   */
  public  static final class RequestInitChain extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.RequestInitChain)
      RequestInitChainOrBuilder {
    // Use RequestInitChain.newBuilder() to construct.
    private RequestInitChain(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestInitChain() {
      validators_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestInitChain(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                validators_ = new java.util.ArrayList<com.github.jtendermint.jabci.types.Types.Validator>();
                mutable_bitField0_ |= 0x00000001;
              }
              validators_.add(
                  input.readMessage(com.github.jtendermint.jabci.types.Types.Validator.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          validators_ = java.util.Collections.unmodifiableList(validators_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestInitChain_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestInitChain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.RequestInitChain.class, com.github.jtendermint.jabci.types.Types.RequestInitChain.Builder.class);
    }

    public static final int VALIDATORS_FIELD_NUMBER = 1;
    private java.util.List<com.github.jtendermint.jabci.types.Types.Validator> validators_;
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
     */
    public java.util.List<com.github.jtendermint.jabci.types.Types.Validator> getValidatorsList() {
      return validators_;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
     */
    public java.util.List<? extends com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder> 
        getValidatorsOrBuilderList() {
      return validators_;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
     */
    public int getValidatorsCount() {
      return validators_.size();
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.Validator getValidators(int index) {
      return validators_.get(index);
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder getValidatorsOrBuilder(
        int index) {
      return validators_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < validators_.size(); i++) {
        output.writeMessage(1, validators_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < validators_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, validators_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.RequestInitChain)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.RequestInitChain other = (com.github.jtendermint.jabci.types.Types.RequestInitChain) obj;

      boolean result = true;
      result = result && getValidatorsList()
          .equals(other.getValidatorsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getValidatorsCount() > 0) {
        hash = (37 * hash) + VALIDATORS_FIELD_NUMBER;
        hash = (53 * hash) + getValidatorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.RequestInitChain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInitChain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInitChain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInitChain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInitChain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInitChain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInitChain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInitChain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInitChain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestInitChain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.RequestInitChain prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.RequestInitChain}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.RequestInitChain)
        com.github.jtendermint.jabci.types.Types.RequestInitChainOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestInitChain_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestInitChain_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.RequestInitChain.class, com.github.jtendermint.jabci.types.Types.RequestInitChain.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.RequestInitChain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getValidatorsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (validatorsBuilder_ == null) {
          validators_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          validatorsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestInitChain_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.RequestInitChain getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.RequestInitChain.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.RequestInitChain build() {
        com.github.jtendermint.jabci.types.Types.RequestInitChain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.RequestInitChain buildPartial() {
        com.github.jtendermint.jabci.types.Types.RequestInitChain result = new com.github.jtendermint.jabci.types.Types.RequestInitChain(this);
        int from_bitField0_ = bitField0_;
        if (validatorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            validators_ = java.util.Collections.unmodifiableList(validators_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.validators_ = validators_;
        } else {
          result.validators_ = validatorsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.RequestInitChain) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.RequestInitChain)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.RequestInitChain other) {
        if (other == com.github.jtendermint.jabci.types.Types.RequestInitChain.getDefaultInstance()) return this;
        if (validatorsBuilder_ == null) {
          if (!other.validators_.isEmpty()) {
            if (validators_.isEmpty()) {
              validators_ = other.validators_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValidatorsIsMutable();
              validators_.addAll(other.validators_);
            }
            onChanged();
          }
        } else {
          if (!other.validators_.isEmpty()) {
            if (validatorsBuilder_.isEmpty()) {
              validatorsBuilder_.dispose();
              validatorsBuilder_ = null;
              validators_ = other.validators_;
              bitField0_ = (bitField0_ & ~0x00000001);
              validatorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValidatorsFieldBuilder() : null;
            } else {
              validatorsBuilder_.addAllMessages(other.validators_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.RequestInitChain parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.RequestInitChain) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.github.jtendermint.jabci.types.Types.Validator> validators_ =
        java.util.Collections.emptyList();
      private void ensureValidatorsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          validators_ = new java.util.ArrayList<com.github.jtendermint.jabci.types.Types.Validator>(validators_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.Validator, com.github.jtendermint.jabci.types.Types.Validator.Builder, com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder> validatorsBuilder_;

      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public java.util.List<com.github.jtendermint.jabci.types.Types.Validator> getValidatorsList() {
        if (validatorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(validators_);
        } else {
          return validatorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public int getValidatorsCount() {
        if (validatorsBuilder_ == null) {
          return validators_.size();
        } else {
          return validatorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.Validator getValidators(int index) {
        if (validatorsBuilder_ == null) {
          return validators_.get(index);
        } else {
          return validatorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public Builder setValidators(
          int index, com.github.jtendermint.jabci.types.Types.Validator value) {
        if (validatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValidatorsIsMutable();
          validators_.set(index, value);
          onChanged();
        } else {
          validatorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public Builder setValidators(
          int index, com.github.jtendermint.jabci.types.Types.Validator.Builder builderForValue) {
        if (validatorsBuilder_ == null) {
          ensureValidatorsIsMutable();
          validators_.set(index, builderForValue.build());
          onChanged();
        } else {
          validatorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public Builder addValidators(com.github.jtendermint.jabci.types.Types.Validator value) {
        if (validatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValidatorsIsMutable();
          validators_.add(value);
          onChanged();
        } else {
          validatorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public Builder addValidators(
          int index, com.github.jtendermint.jabci.types.Types.Validator value) {
        if (validatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValidatorsIsMutable();
          validators_.add(index, value);
          onChanged();
        } else {
          validatorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public Builder addValidators(
          com.github.jtendermint.jabci.types.Types.Validator.Builder builderForValue) {
        if (validatorsBuilder_ == null) {
          ensureValidatorsIsMutable();
          validators_.add(builderForValue.build());
          onChanged();
        } else {
          validatorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public Builder addValidators(
          int index, com.github.jtendermint.jabci.types.Types.Validator.Builder builderForValue) {
        if (validatorsBuilder_ == null) {
          ensureValidatorsIsMutable();
          validators_.add(index, builderForValue.build());
          onChanged();
        } else {
          validatorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public Builder addAllValidators(
          java.lang.Iterable<? extends com.github.jtendermint.jabci.types.Types.Validator> values) {
        if (validatorsBuilder_ == null) {
          ensureValidatorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, validators_);
          onChanged();
        } else {
          validatorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public Builder clearValidators() {
        if (validatorsBuilder_ == null) {
          validators_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          validatorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public Builder removeValidators(int index) {
        if (validatorsBuilder_ == null) {
          ensureValidatorsIsMutable();
          validators_.remove(index);
          onChanged();
        } else {
          validatorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.Validator.Builder getValidatorsBuilder(
          int index) {
        return getValidatorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder getValidatorsOrBuilder(
          int index) {
        if (validatorsBuilder_ == null) {
          return validators_.get(index);  } else {
          return validatorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public java.util.List<? extends com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder> 
           getValidatorsOrBuilderList() {
        if (validatorsBuilder_ != null) {
          return validatorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(validators_);
        }
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.Validator.Builder addValidatorsBuilder() {
        return getValidatorsFieldBuilder().addBuilder(
            com.github.jtendermint.jabci.types.Types.Validator.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.Validator.Builder addValidatorsBuilder(
          int index) {
        return getValidatorsFieldBuilder().addBuilder(
            index, com.github.jtendermint.jabci.types.Types.Validator.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator validators = 1;</code>
       */
      public java.util.List<com.github.jtendermint.jabci.types.Types.Validator.Builder> 
           getValidatorsBuilderList() {
        return getValidatorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.Validator, com.github.jtendermint.jabci.types.Types.Validator.Builder, com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder> 
          getValidatorsFieldBuilder() {
        if (validatorsBuilder_ == null) {
          validatorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.Validator, com.github.jtendermint.jabci.types.Types.Validator.Builder, com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder>(
                  validators_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          validators_ = null;
        }
        return validatorsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.RequestInitChain)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.RequestInitChain)
    private static final com.github.jtendermint.jabci.types.Types.RequestInitChain DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.RequestInitChain();
    }

    public static com.github.jtendermint.jabci.types.Types.RequestInitChain getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestInitChain>
        PARSER = new com.google.protobuf.AbstractParser<RequestInitChain>() {
      public RequestInitChain parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestInitChain(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestInitChain> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestInitChain> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.RequestInitChain getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestBeginBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.RequestBeginBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes hash = 1;</code>
     */
    com.google.protobuf.ByteString getHash();

    /**
     * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
     */
    boolean hasHeader();
    /**
     * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
     */
    com.github.jtendermint.jabci.types.Types.Header getHeader();
    /**
     * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
     */
    com.github.jtendermint.jabci.types.Types.HeaderOrBuilder getHeaderOrBuilder();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.RequestBeginBlock}
   */
  public  static final class RequestBeginBlock extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.RequestBeginBlock)
      RequestBeginBlockOrBuilder {
    // Use RequestBeginBlock.newBuilder() to construct.
    private RequestBeginBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestBeginBlock() {
      hash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestBeginBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              hash_ = input.readBytes();
              break;
            }
            case 18: {
              com.github.jtendermint.jabci.types.Types.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(com.github.jtendermint.jabci.types.Types.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestBeginBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestBeginBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.RequestBeginBlock.class, com.github.jtendermint.jabci.types.Types.RequestBeginBlock.Builder.class);
    }

    public static final int HASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString hash_;
    /**
     * <code>bytes hash = 1;</code>
     */
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }

    public static final int HEADER_FIELD_NUMBER = 2;
    private com.github.jtendermint.jabci.types.Types.Header header_;
    /**
     * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
     */
    public com.github.jtendermint.jabci.types.Types.Header getHeader() {
      return header_ == null ? com.github.jtendermint.jabci.types.Types.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
     */
    public com.github.jtendermint.jabci.types.Types.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!hash_.isEmpty()) {
        output.writeBytes(1, hash_);
      }
      if (header_ != null) {
        output.writeMessage(2, getHeader());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, hash_);
      }
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getHeader());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.RequestBeginBlock)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.RequestBeginBlock other = (com.github.jtendermint.jabci.types.Types.RequestBeginBlock) obj;

      boolean result = true;
      result = result && getHash()
          .equals(other.getHash());
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HASH_FIELD_NUMBER;
      hash = (53 * hash) + getHash().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.RequestBeginBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestBeginBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestBeginBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestBeginBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestBeginBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestBeginBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestBeginBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestBeginBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestBeginBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestBeginBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.RequestBeginBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.RequestBeginBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.RequestBeginBlock)
        com.github.jtendermint.jabci.types.Types.RequestBeginBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestBeginBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestBeginBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.RequestBeginBlock.class, com.github.jtendermint.jabci.types.Types.RequestBeginBlock.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.RequestBeginBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        hash_ = com.google.protobuf.ByteString.EMPTY;

        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestBeginBlock_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.RequestBeginBlock getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.RequestBeginBlock.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.RequestBeginBlock build() {
        com.github.jtendermint.jabci.types.Types.RequestBeginBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.RequestBeginBlock buildPartial() {
        com.github.jtendermint.jabci.types.Types.RequestBeginBlock result = new com.github.jtendermint.jabci.types.Types.RequestBeginBlock(this);
        result.hash_ = hash_;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.RequestBeginBlock) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.RequestBeginBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.RequestBeginBlock other) {
        if (other == com.github.jtendermint.jabci.types.Types.RequestBeginBlock.getDefaultInstance()) return this;
        if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
          setHash(other.getHash());
        }
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.RequestBeginBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.RequestBeginBlock) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes hash = 1;</code>
       */
      public com.google.protobuf.ByteString getHash() {
        return hash_;
      }
      /**
       * <code>bytes hash = 1;</code>
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes hash = 1;</code>
       */
      public Builder clearHash() {
        
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }

      private com.github.jtendermint.jabci.types.Types.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.Header, com.github.jtendermint.jabci.types.Types.Header.Builder, com.github.jtendermint.jabci.types.Types.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? com.github.jtendermint.jabci.types.Types.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
       */
      public Builder setHeader(com.github.jtendermint.jabci.types.Types.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
       */
      public Builder setHeader(
          com.github.jtendermint.jabci.types.Types.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
       */
      public Builder mergeHeader(com.github.jtendermint.jabci.types.Types.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              com.github.jtendermint.jabci.types.Types.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              com.github.jtendermint.jabci.types.Types.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.Header header = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.Header, com.github.jtendermint.jabci.types.Types.Header.Builder, com.github.jtendermint.jabci.types.Types.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.Header, com.github.jtendermint.jabci.types.Types.Header.Builder, com.github.jtendermint.jabci.types.Types.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.RequestBeginBlock)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.RequestBeginBlock)
    private static final com.github.jtendermint.jabci.types.Types.RequestBeginBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.RequestBeginBlock();
    }

    public static com.github.jtendermint.jabci.types.Types.RequestBeginBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestBeginBlock>
        PARSER = new com.google.protobuf.AbstractParser<RequestBeginBlock>() {
      public RequestBeginBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestBeginBlock(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestBeginBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestBeginBlock> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.RequestBeginBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestEndBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.RequestEndBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 height = 1;</code>
     */
    long getHeight();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.RequestEndBlock}
   */
  public  static final class RequestEndBlock extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.RequestEndBlock)
      RequestEndBlockOrBuilder {
    // Use RequestEndBlock.newBuilder() to construct.
    private RequestEndBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestEndBlock() {
      height_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RequestEndBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              height_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestEndBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestEndBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.RequestEndBlock.class, com.github.jtendermint.jabci.types.Types.RequestEndBlock.Builder.class);
    }

    public static final int HEIGHT_FIELD_NUMBER = 1;
    private long height_;
    /**
     * <code>uint64 height = 1;</code>
     */
    public long getHeight() {
      return height_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (height_ != 0L) {
        output.writeUInt64(1, height_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, height_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.RequestEndBlock)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.RequestEndBlock other = (com.github.jtendermint.jabci.types.Types.RequestEndBlock) obj;

      boolean result = true;
      result = result && (getHeight()
          == other.getHeight());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.RequestEndBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEndBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEndBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEndBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEndBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEndBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEndBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEndBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEndBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.RequestEndBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.RequestEndBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.RequestEndBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.RequestEndBlock)
        com.github.jtendermint.jabci.types.Types.RequestEndBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestEndBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestEndBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.RequestEndBlock.class, com.github.jtendermint.jabci.types.Types.RequestEndBlock.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.RequestEndBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        height_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_RequestEndBlock_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.RequestEndBlock getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.RequestEndBlock.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.RequestEndBlock build() {
        com.github.jtendermint.jabci.types.Types.RequestEndBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.RequestEndBlock buildPartial() {
        com.github.jtendermint.jabci.types.Types.RequestEndBlock result = new com.github.jtendermint.jabci.types.Types.RequestEndBlock(this);
        result.height_ = height_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.RequestEndBlock) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.RequestEndBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.RequestEndBlock other) {
        if (other == com.github.jtendermint.jabci.types.Types.RequestEndBlock.getDefaultInstance()) return this;
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.RequestEndBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.RequestEndBlock) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long height_ ;
      /**
       * <code>uint64 height = 1;</code>
       */
      public long getHeight() {
        return height_;
      }
      /**
       * <code>uint64 height = 1;</code>
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 height = 1;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.RequestEndBlock)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.RequestEndBlock)
    private static final com.github.jtendermint.jabci.types.Types.RequestEndBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.RequestEndBlock();
    }

    public static com.github.jtendermint.jabci.types.Types.RequestEndBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestEndBlock>
        PARSER = new com.google.protobuf.AbstractParser<RequestEndBlock>() {
      public RequestEndBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestEndBlock(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestEndBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestEndBlock> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.RequestEndBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseException getException();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseExceptionOrBuilder getExceptionOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseEcho getEcho();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseEchoOrBuilder getEchoOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseFlush getFlush();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseFlushOrBuilder getFlushOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseInfo getInfo();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseInfoOrBuilder getInfoOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseSetOption getSetOption();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseSetOptionOrBuilder getSetOptionOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseDeliverTx getDeliverTx();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseDeliverTxOrBuilder getDeliverTxOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseCheckTx getCheckTx();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseCheckTxOrBuilder getCheckTxOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseCommit getCommit();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseCommitOrBuilder getCommitOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseQuery getQuery();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseQueryOrBuilder getQueryOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseInitChain getInitChain();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseInitChainOrBuilder getInitChainOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseBeginBlock getBeginBlock();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseBeginBlockOrBuilder getBeginBlockOrBuilder();

    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseEndBlock getEndBlock();
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
     */
    com.github.jtendermint.jabci.types.Types.ResponseEndBlockOrBuilder getEndBlockOrBuilder();

    public com.github.jtendermint.jabci.types.Types.Response.ValueCase getValueCase();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.github.jtendermint.jabci.types.Types.ResponseException.Builder subBuilder = null;
              if (valueCase_ == 1) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseException) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseException.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseException) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 1;
              break;
            }
            case 18: {
              com.github.jtendermint.jabci.types.Types.ResponseEcho.Builder subBuilder = null;
              if (valueCase_ == 2) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseEcho) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseEcho.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseEcho) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 2;
              break;
            }
            case 26: {
              com.github.jtendermint.jabci.types.Types.ResponseFlush.Builder subBuilder = null;
              if (valueCase_ == 3) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseFlush) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseFlush.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseFlush) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 3;
              break;
            }
            case 34: {
              com.github.jtendermint.jabci.types.Types.ResponseInfo.Builder subBuilder = null;
              if (valueCase_ == 4) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseInfo) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseInfo) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 4;
              break;
            }
            case 42: {
              com.github.jtendermint.jabci.types.Types.ResponseSetOption.Builder subBuilder = null;
              if (valueCase_ == 5) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseSetOption) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseSetOption.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseSetOption) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 5;
              break;
            }
            case 50: {
              com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.Builder subBuilder = null;
              if (valueCase_ == 6) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 6;
              break;
            }
            case 58: {
              com.github.jtendermint.jabci.types.Types.ResponseCheckTx.Builder subBuilder = null;
              if (valueCase_ == 7) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseCheckTx) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseCheckTx.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseCheckTx) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 7;
              break;
            }
            case 66: {
              com.github.jtendermint.jabci.types.Types.ResponseCommit.Builder subBuilder = null;
              if (valueCase_ == 8) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseCommit) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseCommit.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseCommit) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 8;
              break;
            }
            case 74: {
              com.github.jtendermint.jabci.types.Types.ResponseQuery.Builder subBuilder = null;
              if (valueCase_ == 9) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseQuery) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseQuery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseQuery) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 9;
              break;
            }
            case 82: {
              com.github.jtendermint.jabci.types.Types.ResponseInitChain.Builder subBuilder = null;
              if (valueCase_ == 10) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseInitChain) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseInitChain.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseInitChain) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 10;
              break;
            }
            case 90: {
              com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.Builder subBuilder = null;
              if (valueCase_ == 11) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 11;
              break;
            }
            case 98: {
              com.github.jtendermint.jabci.types.Types.ResponseEndBlock.Builder subBuilder = null;
              if (valueCase_ == 12) {
                subBuilder = ((com.github.jtendermint.jabci.types.Types.ResponseEndBlock) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.github.jtendermint.jabci.types.Types.ResponseEndBlock.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseEndBlock) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 12;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.Response.class, com.github.jtendermint.jabci.types.Types.Response.Builder.class);
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      EXCEPTION(1),
      ECHO(2),
      FLUSH(3),
      INFO(4),
      SET_OPTION(5),
      DELIVER_TX(6),
      CHECK_TX(7),
      COMMIT(8),
      QUERY(9),
      INIT_CHAIN(10),
      BEGIN_BLOCK(11),
      END_BLOCK(12),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 1: return EXCEPTION;
          case 2: return ECHO;
          case 3: return FLUSH;
          case 4: return INFO;
          case 5: return SET_OPTION;
          case 6: return DELIVER_TX;
          case 7: return CHECK_TX;
          case 8: return COMMIT;
          case 9: return QUERY;
          case 10: return INIT_CHAIN;
          case 11: return BEGIN_BLOCK;
          case 12: return END_BLOCK;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int EXCEPTION_FIELD_NUMBER = 1;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseException getException() {
      if (valueCase_ == 1) {
         return (com.github.jtendermint.jabci.types.Types.ResponseException) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseException.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseExceptionOrBuilder getExceptionOrBuilder() {
      if (valueCase_ == 1) {
         return (com.github.jtendermint.jabci.types.Types.ResponseException) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseException.getDefaultInstance();
    }

    public static final int ECHO_FIELD_NUMBER = 2;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseEcho getEcho() {
      if (valueCase_ == 2) {
         return (com.github.jtendermint.jabci.types.Types.ResponseEcho) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseEcho.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseEchoOrBuilder getEchoOrBuilder() {
      if (valueCase_ == 2) {
         return (com.github.jtendermint.jabci.types.Types.ResponseEcho) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseEcho.getDefaultInstance();
    }

    public static final int FLUSH_FIELD_NUMBER = 3;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseFlush getFlush() {
      if (valueCase_ == 3) {
         return (com.github.jtendermint.jabci.types.Types.ResponseFlush) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseFlush.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseFlushOrBuilder getFlushOrBuilder() {
      if (valueCase_ == 3) {
         return (com.github.jtendermint.jabci.types.Types.ResponseFlush) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseFlush.getDefaultInstance();
    }

    public static final int INFO_FIELD_NUMBER = 4;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseInfo getInfo() {
      if (valueCase_ == 4) {
         return (com.github.jtendermint.jabci.types.Types.ResponseInfo) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseInfo.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseInfoOrBuilder getInfoOrBuilder() {
      if (valueCase_ == 4) {
         return (com.github.jtendermint.jabci.types.Types.ResponseInfo) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseInfo.getDefaultInstance();
    }

    public static final int SET_OPTION_FIELD_NUMBER = 5;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseSetOption getSetOption() {
      if (valueCase_ == 5) {
         return (com.github.jtendermint.jabci.types.Types.ResponseSetOption) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseSetOption.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseSetOptionOrBuilder getSetOptionOrBuilder() {
      if (valueCase_ == 5) {
         return (com.github.jtendermint.jabci.types.Types.ResponseSetOption) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseSetOption.getDefaultInstance();
    }

    public static final int DELIVER_TX_FIELD_NUMBER = 6;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseDeliverTx getDeliverTx() {
      if (valueCase_ == 6) {
         return (com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseDeliverTxOrBuilder getDeliverTxOrBuilder() {
      if (valueCase_ == 6) {
         return (com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.getDefaultInstance();
    }

    public static final int CHECK_TX_FIELD_NUMBER = 7;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseCheckTx getCheckTx() {
      if (valueCase_ == 7) {
         return (com.github.jtendermint.jabci.types.Types.ResponseCheckTx) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseCheckTx.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseCheckTxOrBuilder getCheckTxOrBuilder() {
      if (valueCase_ == 7) {
         return (com.github.jtendermint.jabci.types.Types.ResponseCheckTx) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseCheckTx.getDefaultInstance();
    }

    public static final int COMMIT_FIELD_NUMBER = 8;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseCommit getCommit() {
      if (valueCase_ == 8) {
         return (com.github.jtendermint.jabci.types.Types.ResponseCommit) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseCommit.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseCommitOrBuilder getCommitOrBuilder() {
      if (valueCase_ == 8) {
         return (com.github.jtendermint.jabci.types.Types.ResponseCommit) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseCommit.getDefaultInstance();
    }

    public static final int QUERY_FIELD_NUMBER = 9;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseQuery getQuery() {
      if (valueCase_ == 9) {
         return (com.github.jtendermint.jabci.types.Types.ResponseQuery) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseQuery.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseQueryOrBuilder getQueryOrBuilder() {
      if (valueCase_ == 9) {
         return (com.github.jtendermint.jabci.types.Types.ResponseQuery) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseQuery.getDefaultInstance();
    }

    public static final int INIT_CHAIN_FIELD_NUMBER = 10;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseInitChain getInitChain() {
      if (valueCase_ == 10) {
         return (com.github.jtendermint.jabci.types.Types.ResponseInitChain) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseInitChain.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseInitChainOrBuilder getInitChainOrBuilder() {
      if (valueCase_ == 10) {
         return (com.github.jtendermint.jabci.types.Types.ResponseInitChain) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseInitChain.getDefaultInstance();
    }

    public static final int BEGIN_BLOCK_FIELD_NUMBER = 11;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseBeginBlock getBeginBlock() {
      if (valueCase_ == 11) {
         return (com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseBeginBlockOrBuilder getBeginBlockOrBuilder() {
      if (valueCase_ == 11) {
         return (com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.getDefaultInstance();
    }

    public static final int END_BLOCK_FIELD_NUMBER = 12;
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseEndBlock getEndBlock() {
      if (valueCase_ == 12) {
         return (com.github.jtendermint.jabci.types.Types.ResponseEndBlock) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseEndBlock.getDefaultInstance();
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ResponseEndBlockOrBuilder getEndBlockOrBuilder() {
      if (valueCase_ == 12) {
         return (com.github.jtendermint.jabci.types.Types.ResponseEndBlock) value_;
      }
      return com.github.jtendermint.jabci.types.Types.ResponseEndBlock.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (valueCase_ == 1) {
        output.writeMessage(1, (com.github.jtendermint.jabci.types.Types.ResponseException) value_);
      }
      if (valueCase_ == 2) {
        output.writeMessage(2, (com.github.jtendermint.jabci.types.Types.ResponseEcho) value_);
      }
      if (valueCase_ == 3) {
        output.writeMessage(3, (com.github.jtendermint.jabci.types.Types.ResponseFlush) value_);
      }
      if (valueCase_ == 4) {
        output.writeMessage(4, (com.github.jtendermint.jabci.types.Types.ResponseInfo) value_);
      }
      if (valueCase_ == 5) {
        output.writeMessage(5, (com.github.jtendermint.jabci.types.Types.ResponseSetOption) value_);
      }
      if (valueCase_ == 6) {
        output.writeMessage(6, (com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) value_);
      }
      if (valueCase_ == 7) {
        output.writeMessage(7, (com.github.jtendermint.jabci.types.Types.ResponseCheckTx) value_);
      }
      if (valueCase_ == 8) {
        output.writeMessage(8, (com.github.jtendermint.jabci.types.Types.ResponseCommit) value_);
      }
      if (valueCase_ == 9) {
        output.writeMessage(9, (com.github.jtendermint.jabci.types.Types.ResponseQuery) value_);
      }
      if (valueCase_ == 10) {
        output.writeMessage(10, (com.github.jtendermint.jabci.types.Types.ResponseInitChain) value_);
      }
      if (valueCase_ == 11) {
        output.writeMessage(11, (com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) value_);
      }
      if (valueCase_ == 12) {
        output.writeMessage(12, (com.github.jtendermint.jabci.types.Types.ResponseEndBlock) value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (valueCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.github.jtendermint.jabci.types.Types.ResponseException) value_);
      }
      if (valueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.github.jtendermint.jabci.types.Types.ResponseEcho) value_);
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.github.jtendermint.jabci.types.Types.ResponseFlush) value_);
      }
      if (valueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.github.jtendermint.jabci.types.Types.ResponseInfo) value_);
      }
      if (valueCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.github.jtendermint.jabci.types.Types.ResponseSetOption) value_);
      }
      if (valueCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) value_);
      }
      if (valueCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.github.jtendermint.jabci.types.Types.ResponseCheckTx) value_);
      }
      if (valueCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (com.github.jtendermint.jabci.types.Types.ResponseCommit) value_);
      }
      if (valueCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.github.jtendermint.jabci.types.Types.ResponseQuery) value_);
      }
      if (valueCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (com.github.jtendermint.jabci.types.Types.ResponseInitChain) value_);
      }
      if (valueCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) value_);
      }
      if (valueCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (com.github.jtendermint.jabci.types.Types.ResponseEndBlock) value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.Response)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.Response other = (com.github.jtendermint.jabci.types.Types.Response) obj;

      boolean result = true;
      result = result && getValueCase().equals(
          other.getValueCase());
      if (!result) return false;
      switch (valueCase_) {
        case 1:
          result = result && getException()
              .equals(other.getException());
          break;
        case 2:
          result = result && getEcho()
              .equals(other.getEcho());
          break;
        case 3:
          result = result && getFlush()
              .equals(other.getFlush());
          break;
        case 4:
          result = result && getInfo()
              .equals(other.getInfo());
          break;
        case 5:
          result = result && getSetOption()
              .equals(other.getSetOption());
          break;
        case 6:
          result = result && getDeliverTx()
              .equals(other.getDeliverTx());
          break;
        case 7:
          result = result && getCheckTx()
              .equals(other.getCheckTx());
          break;
        case 8:
          result = result && getCommit()
              .equals(other.getCommit());
          break;
        case 9:
          result = result && getQuery()
              .equals(other.getQuery());
          break;
        case 10:
          result = result && getInitChain()
              .equals(other.getInitChain());
          break;
        case 11:
          result = result && getBeginBlock()
              .equals(other.getBeginBlock());
          break;
        case 12:
          result = result && getEndBlock()
              .equals(other.getEndBlock());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (valueCase_) {
        case 1:
          hash = (37 * hash) + EXCEPTION_FIELD_NUMBER;
          hash = (53 * hash) + getException().hashCode();
          break;
        case 2:
          hash = (37 * hash) + ECHO_FIELD_NUMBER;
          hash = (53 * hash) + getEcho().hashCode();
          break;
        case 3:
          hash = (37 * hash) + FLUSH_FIELD_NUMBER;
          hash = (53 * hash) + getFlush().hashCode();
          break;
        case 4:
          hash = (37 * hash) + INFO_FIELD_NUMBER;
          hash = (53 * hash) + getInfo().hashCode();
          break;
        case 5:
          hash = (37 * hash) + SET_OPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSetOption().hashCode();
          break;
        case 6:
          hash = (37 * hash) + DELIVER_TX_FIELD_NUMBER;
          hash = (53 * hash) + getDeliverTx().hashCode();
          break;
        case 7:
          hash = (37 * hash) + CHECK_TX_FIELD_NUMBER;
          hash = (53 * hash) + getCheckTx().hashCode();
          break;
        case 8:
          hash = (37 * hash) + COMMIT_FIELD_NUMBER;
          hash = (53 * hash) + getCommit().hashCode();
          break;
        case 9:
          hash = (37 * hash) + QUERY_FIELD_NUMBER;
          hash = (53 * hash) + getQuery().hashCode();
          break;
        case 10:
          hash = (37 * hash) + INIT_CHAIN_FIELD_NUMBER;
          hash = (53 * hash) + getInitChain().hashCode();
          break;
        case 11:
          hash = (37 * hash) + BEGIN_BLOCK_FIELD_NUMBER;
          hash = (53 * hash) + getBeginBlock().hashCode();
          break;
        case 12:
          hash = (37 * hash) + END_BLOCK_FIELD_NUMBER;
          hash = (53 * hash) + getEndBlock().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.Response)
        com.github.jtendermint.jabci.types.Types.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.Response.class, com.github.jtendermint.jabci.types.Types.Response.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        valueCase_ = 0;
        value_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Response_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.Response getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.Response.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.Response build() {
        com.github.jtendermint.jabci.types.Types.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.Response buildPartial() {
        com.github.jtendermint.jabci.types.Types.Response result = new com.github.jtendermint.jabci.types.Types.Response(this);
        if (valueCase_ == 1) {
          if (exceptionBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = exceptionBuilder_.build();
          }
        }
        if (valueCase_ == 2) {
          if (echoBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = echoBuilder_.build();
          }
        }
        if (valueCase_ == 3) {
          if (flushBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = flushBuilder_.build();
          }
        }
        if (valueCase_ == 4) {
          if (infoBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = infoBuilder_.build();
          }
        }
        if (valueCase_ == 5) {
          if (setOptionBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = setOptionBuilder_.build();
          }
        }
        if (valueCase_ == 6) {
          if (deliverTxBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = deliverTxBuilder_.build();
          }
        }
        if (valueCase_ == 7) {
          if (checkTxBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = checkTxBuilder_.build();
          }
        }
        if (valueCase_ == 8) {
          if (commitBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = commitBuilder_.build();
          }
        }
        if (valueCase_ == 9) {
          if (queryBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = queryBuilder_.build();
          }
        }
        if (valueCase_ == 10) {
          if (initChainBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = initChainBuilder_.build();
          }
        }
        if (valueCase_ == 11) {
          if (beginBlockBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = beginBlockBuilder_.build();
          }
        }
        if (valueCase_ == 12) {
          if (endBlockBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = endBlockBuilder_.build();
          }
        }
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.Response) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.Response other) {
        if (other == com.github.jtendermint.jabci.types.Types.Response.getDefaultInstance()) return this;
        switch (other.getValueCase()) {
          case EXCEPTION: {
            mergeException(other.getException());
            break;
          }
          case ECHO: {
            mergeEcho(other.getEcho());
            break;
          }
          case FLUSH: {
            mergeFlush(other.getFlush());
            break;
          }
          case INFO: {
            mergeInfo(other.getInfo());
            break;
          }
          case SET_OPTION: {
            mergeSetOption(other.getSetOption());
            break;
          }
          case DELIVER_TX: {
            mergeDeliverTx(other.getDeliverTx());
            break;
          }
          case CHECK_TX: {
            mergeCheckTx(other.getCheckTx());
            break;
          }
          case COMMIT: {
            mergeCommit(other.getCommit());
            break;
          }
          case QUERY: {
            mergeQuery(other.getQuery());
            break;
          }
          case INIT_CHAIN: {
            mergeInitChain(other.getInitChain());
            break;
          }
          case BEGIN_BLOCK: {
            mergeBeginBlock(other.getBeginBlock());
            break;
          }
          case END_BLOCK: {
            mergeEndBlock(other.getEndBlock());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseException, com.github.jtendermint.jabci.types.Types.ResponseException.Builder, com.github.jtendermint.jabci.types.Types.ResponseExceptionOrBuilder> exceptionBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseException getException() {
        if (exceptionBuilder_ == null) {
          if (valueCase_ == 1) {
            return (com.github.jtendermint.jabci.types.Types.ResponseException) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseException.getDefaultInstance();
        } else {
          if (valueCase_ == 1) {
            return exceptionBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseException.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
       */
      public Builder setException(com.github.jtendermint.jabci.types.Types.ResponseException value) {
        if (exceptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          exceptionBuilder_.setMessage(value);
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
       */
      public Builder setException(
          com.github.jtendermint.jabci.types.Types.ResponseException.Builder builderForValue) {
        if (exceptionBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          exceptionBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
       */
      public Builder mergeException(com.github.jtendermint.jabci.types.Types.ResponseException value) {
        if (exceptionBuilder_ == null) {
          if (valueCase_ == 1 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseException.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseException.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseException) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 1) {
            exceptionBuilder_.mergeFrom(value);
          }
          exceptionBuilder_.setMessage(value);
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
       */
      public Builder clearException() {
        if (exceptionBuilder_ == null) {
          if (valueCase_ == 1) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 1) {
            valueCase_ = 0;
            value_ = null;
          }
          exceptionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseException.Builder getExceptionBuilder() {
        return getExceptionFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseExceptionOrBuilder getExceptionOrBuilder() {
        if ((valueCase_ == 1) && (exceptionBuilder_ != null)) {
          return exceptionBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 1) {
            return (com.github.jtendermint.jabci.types.Types.ResponseException) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseException.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseException exception = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseException, com.github.jtendermint.jabci.types.Types.ResponseException.Builder, com.github.jtendermint.jabci.types.Types.ResponseExceptionOrBuilder> 
          getExceptionFieldBuilder() {
        if (exceptionBuilder_ == null) {
          if (!(valueCase_ == 1)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseException.getDefaultInstance();
          }
          exceptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseException, com.github.jtendermint.jabci.types.Types.ResponseException.Builder, com.github.jtendermint.jabci.types.Types.ResponseExceptionOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseException) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 1;
        onChanged();;
        return exceptionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseEcho, com.github.jtendermint.jabci.types.Types.ResponseEcho.Builder, com.github.jtendermint.jabci.types.Types.ResponseEchoOrBuilder> echoBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseEcho getEcho() {
        if (echoBuilder_ == null) {
          if (valueCase_ == 2) {
            return (com.github.jtendermint.jabci.types.Types.ResponseEcho) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseEcho.getDefaultInstance();
        } else {
          if (valueCase_ == 2) {
            return echoBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseEcho.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
       */
      public Builder setEcho(com.github.jtendermint.jabci.types.Types.ResponseEcho value) {
        if (echoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          echoBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
       */
      public Builder setEcho(
          com.github.jtendermint.jabci.types.Types.ResponseEcho.Builder builderForValue) {
        if (echoBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          echoBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
       */
      public Builder mergeEcho(com.github.jtendermint.jabci.types.Types.ResponseEcho value) {
        if (echoBuilder_ == null) {
          if (valueCase_ == 2 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseEcho.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseEcho.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseEcho) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 2) {
            echoBuilder_.mergeFrom(value);
          }
          echoBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
       */
      public Builder clearEcho() {
        if (echoBuilder_ == null) {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
          }
          echoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseEcho.Builder getEchoBuilder() {
        return getEchoFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseEchoOrBuilder getEchoOrBuilder() {
        if ((valueCase_ == 2) && (echoBuilder_ != null)) {
          return echoBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 2) {
            return (com.github.jtendermint.jabci.types.Types.ResponseEcho) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseEcho.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEcho echo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseEcho, com.github.jtendermint.jabci.types.Types.ResponseEcho.Builder, com.github.jtendermint.jabci.types.Types.ResponseEchoOrBuilder> 
          getEchoFieldBuilder() {
        if (echoBuilder_ == null) {
          if (!(valueCase_ == 2)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseEcho.getDefaultInstance();
          }
          echoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseEcho, com.github.jtendermint.jabci.types.Types.ResponseEcho.Builder, com.github.jtendermint.jabci.types.Types.ResponseEchoOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseEcho) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 2;
        onChanged();;
        return echoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseFlush, com.github.jtendermint.jabci.types.Types.ResponseFlush.Builder, com.github.jtendermint.jabci.types.Types.ResponseFlushOrBuilder> flushBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseFlush getFlush() {
        if (flushBuilder_ == null) {
          if (valueCase_ == 3) {
            return (com.github.jtendermint.jabci.types.Types.ResponseFlush) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseFlush.getDefaultInstance();
        } else {
          if (valueCase_ == 3) {
            return flushBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseFlush.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
       */
      public Builder setFlush(com.github.jtendermint.jabci.types.Types.ResponseFlush value) {
        if (flushBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          flushBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
       */
      public Builder setFlush(
          com.github.jtendermint.jabci.types.Types.ResponseFlush.Builder builderForValue) {
        if (flushBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          flushBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
       */
      public Builder mergeFlush(com.github.jtendermint.jabci.types.Types.ResponseFlush value) {
        if (flushBuilder_ == null) {
          if (valueCase_ == 3 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseFlush.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseFlush.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseFlush) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 3) {
            flushBuilder_.mergeFrom(value);
          }
          flushBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
       */
      public Builder clearFlush() {
        if (flushBuilder_ == null) {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
          }
          flushBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseFlush.Builder getFlushBuilder() {
        return getFlushFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseFlushOrBuilder getFlushOrBuilder() {
        if ((valueCase_ == 3) && (flushBuilder_ != null)) {
          return flushBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 3) {
            return (com.github.jtendermint.jabci.types.Types.ResponseFlush) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseFlush.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseFlush flush = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseFlush, com.github.jtendermint.jabci.types.Types.ResponseFlush.Builder, com.github.jtendermint.jabci.types.Types.ResponseFlushOrBuilder> 
          getFlushFieldBuilder() {
        if (flushBuilder_ == null) {
          if (!(valueCase_ == 3)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseFlush.getDefaultInstance();
          }
          flushBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseFlush, com.github.jtendermint.jabci.types.Types.ResponseFlush.Builder, com.github.jtendermint.jabci.types.Types.ResponseFlushOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseFlush) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 3;
        onChanged();;
        return flushBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseInfo, com.github.jtendermint.jabci.types.Types.ResponseInfo.Builder, com.github.jtendermint.jabci.types.Types.ResponseInfoOrBuilder> infoBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseInfo getInfo() {
        if (infoBuilder_ == null) {
          if (valueCase_ == 4) {
            return (com.github.jtendermint.jabci.types.Types.ResponseInfo) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseInfo.getDefaultInstance();
        } else {
          if (valueCase_ == 4) {
            return infoBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseInfo.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
       */
      public Builder setInfo(com.github.jtendermint.jabci.types.Types.ResponseInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          infoBuilder_.setMessage(value);
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
       */
      public Builder setInfo(
          com.github.jtendermint.jabci.types.Types.ResponseInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          infoBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
       */
      public Builder mergeInfo(com.github.jtendermint.jabci.types.Types.ResponseInfo value) {
        if (infoBuilder_ == null) {
          if (valueCase_ == 4 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseInfo.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseInfo.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseInfo) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 4) {
            infoBuilder_.mergeFrom(value);
          }
          infoBuilder_.setMessage(value);
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
          }
          infoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseInfo.Builder getInfoBuilder() {
        return getInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseInfoOrBuilder getInfoOrBuilder() {
        if ((valueCase_ == 4) && (infoBuilder_ != null)) {
          return infoBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 4) {
            return (com.github.jtendermint.jabci.types.Types.ResponseInfo) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseInfo.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInfo info = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseInfo, com.github.jtendermint.jabci.types.Types.ResponseInfo.Builder, com.github.jtendermint.jabci.types.Types.ResponseInfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          if (!(valueCase_ == 4)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseInfo.getDefaultInstance();
          }
          infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseInfo, com.github.jtendermint.jabci.types.Types.ResponseInfo.Builder, com.github.jtendermint.jabci.types.Types.ResponseInfoOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseInfo) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 4;
        onChanged();;
        return infoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseSetOption, com.github.jtendermint.jabci.types.Types.ResponseSetOption.Builder, com.github.jtendermint.jabci.types.Types.ResponseSetOptionOrBuilder> setOptionBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseSetOption getSetOption() {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 5) {
            return (com.github.jtendermint.jabci.types.Types.ResponseSetOption) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseSetOption.getDefaultInstance();
        } else {
          if (valueCase_ == 5) {
            return setOptionBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseSetOption.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
       */
      public Builder setSetOption(com.github.jtendermint.jabci.types.Types.ResponseSetOption value) {
        if (setOptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          setOptionBuilder_.setMessage(value);
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
       */
      public Builder setSetOption(
          com.github.jtendermint.jabci.types.Types.ResponseSetOption.Builder builderForValue) {
        if (setOptionBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          setOptionBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
       */
      public Builder mergeSetOption(com.github.jtendermint.jabci.types.Types.ResponseSetOption value) {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 5 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseSetOption.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseSetOption.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseSetOption) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 5) {
            setOptionBuilder_.mergeFrom(value);
          }
          setOptionBuilder_.setMessage(value);
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
       */
      public Builder clearSetOption() {
        if (setOptionBuilder_ == null) {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
          }
          setOptionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseSetOption.Builder getSetOptionBuilder() {
        return getSetOptionFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseSetOptionOrBuilder getSetOptionOrBuilder() {
        if ((valueCase_ == 5) && (setOptionBuilder_ != null)) {
          return setOptionBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 5) {
            return (com.github.jtendermint.jabci.types.Types.ResponseSetOption) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseSetOption.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseSetOption set_option = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseSetOption, com.github.jtendermint.jabci.types.Types.ResponseSetOption.Builder, com.github.jtendermint.jabci.types.Types.ResponseSetOptionOrBuilder> 
          getSetOptionFieldBuilder() {
        if (setOptionBuilder_ == null) {
          if (!(valueCase_ == 5)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseSetOption.getDefaultInstance();
          }
          setOptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseSetOption, com.github.jtendermint.jabci.types.Types.ResponseSetOption.Builder, com.github.jtendermint.jabci.types.Types.ResponseSetOptionOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseSetOption) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 5;
        onChanged();;
        return setOptionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseDeliverTx, com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.Builder, com.github.jtendermint.jabci.types.Types.ResponseDeliverTxOrBuilder> deliverTxBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseDeliverTx getDeliverTx() {
        if (deliverTxBuilder_ == null) {
          if (valueCase_ == 6) {
            return (com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.getDefaultInstance();
        } else {
          if (valueCase_ == 6) {
            return deliverTxBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
       */
      public Builder setDeliverTx(com.github.jtendermint.jabci.types.Types.ResponseDeliverTx value) {
        if (deliverTxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          deliverTxBuilder_.setMessage(value);
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
       */
      public Builder setDeliverTx(
          com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.Builder builderForValue) {
        if (deliverTxBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          deliverTxBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
       */
      public Builder mergeDeliverTx(com.github.jtendermint.jabci.types.Types.ResponseDeliverTx value) {
        if (deliverTxBuilder_ == null) {
          if (valueCase_ == 6 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 6) {
            deliverTxBuilder_.mergeFrom(value);
          }
          deliverTxBuilder_.setMessage(value);
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
       */
      public Builder clearDeliverTx() {
        if (deliverTxBuilder_ == null) {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
          }
          deliverTxBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.Builder getDeliverTxBuilder() {
        return getDeliverTxFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseDeliverTxOrBuilder getDeliverTxOrBuilder() {
        if ((valueCase_ == 6) && (deliverTxBuilder_ != null)) {
          return deliverTxBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 6) {
            return (com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseDeliverTx deliver_tx = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseDeliverTx, com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.Builder, com.github.jtendermint.jabci.types.Types.ResponseDeliverTxOrBuilder> 
          getDeliverTxFieldBuilder() {
        if (deliverTxBuilder_ == null) {
          if (!(valueCase_ == 6)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.getDefaultInstance();
          }
          deliverTxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseDeliverTx, com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.Builder, com.github.jtendermint.jabci.types.Types.ResponseDeliverTxOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 6;
        onChanged();;
        return deliverTxBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseCheckTx, com.github.jtendermint.jabci.types.Types.ResponseCheckTx.Builder, com.github.jtendermint.jabci.types.Types.ResponseCheckTxOrBuilder> checkTxBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseCheckTx getCheckTx() {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 7) {
            return (com.github.jtendermint.jabci.types.Types.ResponseCheckTx) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseCheckTx.getDefaultInstance();
        } else {
          if (valueCase_ == 7) {
            return checkTxBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseCheckTx.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
       */
      public Builder setCheckTx(com.github.jtendermint.jabci.types.Types.ResponseCheckTx value) {
        if (checkTxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          checkTxBuilder_.setMessage(value);
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
       */
      public Builder setCheckTx(
          com.github.jtendermint.jabci.types.Types.ResponseCheckTx.Builder builderForValue) {
        if (checkTxBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          checkTxBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
       */
      public Builder mergeCheckTx(com.github.jtendermint.jabci.types.Types.ResponseCheckTx value) {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 7 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseCheckTx.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseCheckTx.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseCheckTx) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 7) {
            checkTxBuilder_.mergeFrom(value);
          }
          checkTxBuilder_.setMessage(value);
        }
        valueCase_ = 7;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
       */
      public Builder clearCheckTx() {
        if (checkTxBuilder_ == null) {
          if (valueCase_ == 7) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 7) {
            valueCase_ = 0;
            value_ = null;
          }
          checkTxBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseCheckTx.Builder getCheckTxBuilder() {
        return getCheckTxFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseCheckTxOrBuilder getCheckTxOrBuilder() {
        if ((valueCase_ == 7) && (checkTxBuilder_ != null)) {
          return checkTxBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 7) {
            return (com.github.jtendermint.jabci.types.Types.ResponseCheckTx) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseCheckTx.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCheckTx check_tx = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseCheckTx, com.github.jtendermint.jabci.types.Types.ResponseCheckTx.Builder, com.github.jtendermint.jabci.types.Types.ResponseCheckTxOrBuilder> 
          getCheckTxFieldBuilder() {
        if (checkTxBuilder_ == null) {
          if (!(valueCase_ == 7)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseCheckTx.getDefaultInstance();
          }
          checkTxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseCheckTx, com.github.jtendermint.jabci.types.Types.ResponseCheckTx.Builder, com.github.jtendermint.jabci.types.Types.ResponseCheckTxOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseCheckTx) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 7;
        onChanged();;
        return checkTxBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseCommit, com.github.jtendermint.jabci.types.Types.ResponseCommit.Builder, com.github.jtendermint.jabci.types.Types.ResponseCommitOrBuilder> commitBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseCommit getCommit() {
        if (commitBuilder_ == null) {
          if (valueCase_ == 8) {
            return (com.github.jtendermint.jabci.types.Types.ResponseCommit) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseCommit.getDefaultInstance();
        } else {
          if (valueCase_ == 8) {
            return commitBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseCommit.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
       */
      public Builder setCommit(com.github.jtendermint.jabci.types.Types.ResponseCommit value) {
        if (commitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          commitBuilder_.setMessage(value);
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
       */
      public Builder setCommit(
          com.github.jtendermint.jabci.types.Types.ResponseCommit.Builder builderForValue) {
        if (commitBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          commitBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
       */
      public Builder mergeCommit(com.github.jtendermint.jabci.types.Types.ResponseCommit value) {
        if (commitBuilder_ == null) {
          if (valueCase_ == 8 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseCommit.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseCommit.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseCommit) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 8) {
            commitBuilder_.mergeFrom(value);
          }
          commitBuilder_.setMessage(value);
        }
        valueCase_ = 8;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
       */
      public Builder clearCommit() {
        if (commitBuilder_ == null) {
          if (valueCase_ == 8) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 8) {
            valueCase_ = 0;
            value_ = null;
          }
          commitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseCommit.Builder getCommitBuilder() {
        return getCommitFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseCommitOrBuilder getCommitOrBuilder() {
        if ((valueCase_ == 8) && (commitBuilder_ != null)) {
          return commitBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 8) {
            return (com.github.jtendermint.jabci.types.Types.ResponseCommit) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseCommit.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseCommit commit = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseCommit, com.github.jtendermint.jabci.types.Types.ResponseCommit.Builder, com.github.jtendermint.jabci.types.Types.ResponseCommitOrBuilder> 
          getCommitFieldBuilder() {
        if (commitBuilder_ == null) {
          if (!(valueCase_ == 8)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseCommit.getDefaultInstance();
          }
          commitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseCommit, com.github.jtendermint.jabci.types.Types.ResponseCommit.Builder, com.github.jtendermint.jabci.types.Types.ResponseCommitOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseCommit) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 8;
        onChanged();;
        return commitBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseQuery, com.github.jtendermint.jabci.types.Types.ResponseQuery.Builder, com.github.jtendermint.jabci.types.Types.ResponseQueryOrBuilder> queryBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseQuery getQuery() {
        if (queryBuilder_ == null) {
          if (valueCase_ == 9) {
            return (com.github.jtendermint.jabci.types.Types.ResponseQuery) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseQuery.getDefaultInstance();
        } else {
          if (valueCase_ == 9) {
            return queryBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseQuery.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
       */
      public Builder setQuery(com.github.jtendermint.jabci.types.Types.ResponseQuery value) {
        if (queryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          queryBuilder_.setMessage(value);
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
       */
      public Builder setQuery(
          com.github.jtendermint.jabci.types.Types.ResponseQuery.Builder builderForValue) {
        if (queryBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          queryBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
       */
      public Builder mergeQuery(com.github.jtendermint.jabci.types.Types.ResponseQuery value) {
        if (queryBuilder_ == null) {
          if (valueCase_ == 9 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseQuery.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseQuery.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseQuery) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 9) {
            queryBuilder_.mergeFrom(value);
          }
          queryBuilder_.setMessage(value);
        }
        valueCase_ = 9;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
       */
      public Builder clearQuery() {
        if (queryBuilder_ == null) {
          if (valueCase_ == 9) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 9) {
            valueCase_ = 0;
            value_ = null;
          }
          queryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseQuery.Builder getQueryBuilder() {
        return getQueryFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseQueryOrBuilder getQueryOrBuilder() {
        if ((valueCase_ == 9) && (queryBuilder_ != null)) {
          return queryBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 9) {
            return (com.github.jtendermint.jabci.types.Types.ResponseQuery) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseQuery.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseQuery query = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseQuery, com.github.jtendermint.jabci.types.Types.ResponseQuery.Builder, com.github.jtendermint.jabci.types.Types.ResponseQueryOrBuilder> 
          getQueryFieldBuilder() {
        if (queryBuilder_ == null) {
          if (!(valueCase_ == 9)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseQuery.getDefaultInstance();
          }
          queryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseQuery, com.github.jtendermint.jabci.types.Types.ResponseQuery.Builder, com.github.jtendermint.jabci.types.Types.ResponseQueryOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseQuery) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 9;
        onChanged();;
        return queryBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseInitChain, com.github.jtendermint.jabci.types.Types.ResponseInitChain.Builder, com.github.jtendermint.jabci.types.Types.ResponseInitChainOrBuilder> initChainBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseInitChain getInitChain() {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 10) {
            return (com.github.jtendermint.jabci.types.Types.ResponseInitChain) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseInitChain.getDefaultInstance();
        } else {
          if (valueCase_ == 10) {
            return initChainBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseInitChain.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
       */
      public Builder setInitChain(com.github.jtendermint.jabci.types.Types.ResponseInitChain value) {
        if (initChainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          initChainBuilder_.setMessage(value);
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
       */
      public Builder setInitChain(
          com.github.jtendermint.jabci.types.Types.ResponseInitChain.Builder builderForValue) {
        if (initChainBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          initChainBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
       */
      public Builder mergeInitChain(com.github.jtendermint.jabci.types.Types.ResponseInitChain value) {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 10 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseInitChain.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseInitChain.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseInitChain) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 10) {
            initChainBuilder_.mergeFrom(value);
          }
          initChainBuilder_.setMessage(value);
        }
        valueCase_ = 10;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
       */
      public Builder clearInitChain() {
        if (initChainBuilder_ == null) {
          if (valueCase_ == 10) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 10) {
            valueCase_ = 0;
            value_ = null;
          }
          initChainBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseInitChain.Builder getInitChainBuilder() {
        return getInitChainFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseInitChainOrBuilder getInitChainOrBuilder() {
        if ((valueCase_ == 10) && (initChainBuilder_ != null)) {
          return initChainBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 10) {
            return (com.github.jtendermint.jabci.types.Types.ResponseInitChain) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseInitChain.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseInitChain init_chain = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseInitChain, com.github.jtendermint.jabci.types.Types.ResponseInitChain.Builder, com.github.jtendermint.jabci.types.Types.ResponseInitChainOrBuilder> 
          getInitChainFieldBuilder() {
        if (initChainBuilder_ == null) {
          if (!(valueCase_ == 10)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseInitChain.getDefaultInstance();
          }
          initChainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseInitChain, com.github.jtendermint.jabci.types.Types.ResponseInitChain.Builder, com.github.jtendermint.jabci.types.Types.ResponseInitChainOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseInitChain) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 10;
        onChanged();;
        return initChainBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseBeginBlock, com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.Builder, com.github.jtendermint.jabci.types.Types.ResponseBeginBlockOrBuilder> beginBlockBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseBeginBlock getBeginBlock() {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 11) {
            return (com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.getDefaultInstance();
        } else {
          if (valueCase_ == 11) {
            return beginBlockBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public Builder setBeginBlock(com.github.jtendermint.jabci.types.Types.ResponseBeginBlock value) {
        if (beginBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          beginBlockBuilder_.setMessage(value);
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public Builder setBeginBlock(
          com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.Builder builderForValue) {
        if (beginBlockBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          beginBlockBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public Builder mergeBeginBlock(com.github.jtendermint.jabci.types.Types.ResponseBeginBlock value) {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 11 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 11) {
            beginBlockBuilder_.mergeFrom(value);
          }
          beginBlockBuilder_.setMessage(value);
        }
        valueCase_ = 11;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public Builder clearBeginBlock() {
        if (beginBlockBuilder_ == null) {
          if (valueCase_ == 11) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 11) {
            valueCase_ = 0;
            value_ = null;
          }
          beginBlockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.Builder getBeginBlockBuilder() {
        return getBeginBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseBeginBlockOrBuilder getBeginBlockOrBuilder() {
        if ((valueCase_ == 11) && (beginBlockBuilder_ != null)) {
          return beginBlockBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 11) {
            return (com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseBeginBlock begin_block = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseBeginBlock, com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.Builder, com.github.jtendermint.jabci.types.Types.ResponseBeginBlockOrBuilder> 
          getBeginBlockFieldBuilder() {
        if (beginBlockBuilder_ == null) {
          if (!(valueCase_ == 11)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.getDefaultInstance();
          }
          beginBlockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseBeginBlock, com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.Builder, com.github.jtendermint.jabci.types.Types.ResponseBeginBlockOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 11;
        onChanged();;
        return beginBlockBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseEndBlock, com.github.jtendermint.jabci.types.Types.ResponseEndBlock.Builder, com.github.jtendermint.jabci.types.Types.ResponseEndBlockOrBuilder> endBlockBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseEndBlock getEndBlock() {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 12) {
            return (com.github.jtendermint.jabci.types.Types.ResponseEndBlock) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseEndBlock.getDefaultInstance();
        } else {
          if (valueCase_ == 12) {
            return endBlockBuilder_.getMessage();
          }
          return com.github.jtendermint.jabci.types.Types.ResponseEndBlock.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
       */
      public Builder setEndBlock(com.github.jtendermint.jabci.types.Types.ResponseEndBlock value) {
        if (endBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          endBlockBuilder_.setMessage(value);
        }
        valueCase_ = 12;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
       */
      public Builder setEndBlock(
          com.github.jtendermint.jabci.types.Types.ResponseEndBlock.Builder builderForValue) {
        if (endBlockBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          endBlockBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 12;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
       */
      public Builder mergeEndBlock(com.github.jtendermint.jabci.types.Types.ResponseEndBlock value) {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 12 &&
              value_ != com.github.jtendermint.jabci.types.Types.ResponseEndBlock.getDefaultInstance()) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseEndBlock.newBuilder((com.github.jtendermint.jabci.types.Types.ResponseEndBlock) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 12) {
            endBlockBuilder_.mergeFrom(value);
          }
          endBlockBuilder_.setMessage(value);
        }
        valueCase_ = 12;
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
       */
      public Builder clearEndBlock() {
        if (endBlockBuilder_ == null) {
          if (valueCase_ == 12) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 12) {
            valueCase_ = 0;
            value_ = null;
          }
          endBlockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseEndBlock.Builder getEndBlockBuilder() {
        return getEndBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ResponseEndBlockOrBuilder getEndBlockOrBuilder() {
        if ((valueCase_ == 12) && (endBlockBuilder_ != null)) {
          return endBlockBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 12) {
            return (com.github.jtendermint.jabci.types.Types.ResponseEndBlock) value_;
          }
          return com.github.jtendermint.jabci.types.Types.ResponseEndBlock.getDefaultInstance();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.ResponseEndBlock end_block = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.ResponseEndBlock, com.github.jtendermint.jabci.types.Types.ResponseEndBlock.Builder, com.github.jtendermint.jabci.types.Types.ResponseEndBlockOrBuilder> 
          getEndBlockFieldBuilder() {
        if (endBlockBuilder_ == null) {
          if (!(valueCase_ == 12)) {
            value_ = com.github.jtendermint.jabci.types.Types.ResponseEndBlock.getDefaultInstance();
          }
          endBlockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.ResponseEndBlock, com.github.jtendermint.jabci.types.Types.ResponseEndBlock.Builder, com.github.jtendermint.jabci.types.Types.ResponseEndBlockOrBuilder>(
                  (com.github.jtendermint.jabci.types.Types.ResponseEndBlock) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 12;
        onChanged();;
        return endBlockBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.Response)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.Response)
    private static final com.github.jtendermint.jabci.types.Types.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.Response();
    }

    public static com.github.jtendermint.jabci.types.Types.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseExceptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseException)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string error = 1;</code>
     */
    java.lang.String getError();
    /**
     * <code>string error = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorBytes();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseException}
   */
  public  static final class ResponseException extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseException)
      ResponseExceptionOrBuilder {
    // Use ResponseException.newBuilder() to construct.
    private ResponseException(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseException() {
      error_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseException(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              error_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseException_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseException_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseException.class, com.github.jtendermint.jabci.types.Types.ResponseException.Builder.class);
    }

    public static final int ERROR_FIELD_NUMBER = 1;
    private volatile java.lang.Object error_;
    /**
     * <code>string error = 1;</code>
     */
    public java.lang.String getError() {
      java.lang.Object ref = error_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        error_ = s;
        return s;
      }
    }
    /**
     * <code>string error = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorBytes() {
      java.lang.Object ref = error_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        error_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getErrorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, error_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getErrorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, error_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseException)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseException other = (com.github.jtendermint.jabci.types.Types.ResponseException) obj;

      boolean result = true;
      result = result && getError()
          .equals(other.getError());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ERROR_FIELD_NUMBER;
      hash = (53 * hash) + getError().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseException parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseException parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseException parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseException parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseException parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseException parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseException parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseException parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseException parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseException parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseException prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseException}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseException)
        com.github.jtendermint.jabci.types.Types.ResponseExceptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseException_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseException_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseException.class, com.github.jtendermint.jabci.types.Types.ResponseException.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseException.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        error_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseException_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseException getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseException.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseException build() {
        com.github.jtendermint.jabci.types.Types.ResponseException result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseException buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseException result = new com.github.jtendermint.jabci.types.Types.ResponseException(this);
        result.error_ = error_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseException) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseException)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseException other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseException.getDefaultInstance()) return this;
        if (!other.getError().isEmpty()) {
          error_ = other.error_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseException parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseException) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object error_ = "";
      /**
       * <code>string error = 1;</code>
       */
      public java.lang.String getError() {
        java.lang.Object ref = error_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          error_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string error = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorBytes() {
        java.lang.Object ref = error_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          error_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string error = 1;</code>
       */
      public Builder setError(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string error = 1;</code>
       */
      public Builder clearError() {
        
        error_ = getDefaultInstance().getError();
        onChanged();
        return this;
      }
      /**
       * <code>string error = 1;</code>
       */
      public Builder setErrorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        error_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseException)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseException)
    private static final com.github.jtendermint.jabci.types.Types.ResponseException DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseException();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseException getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseException>
        PARSER = new com.google.protobuf.AbstractParser<ResponseException>() {
      public ResponseException parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseException(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseException> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseException> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseException getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseEchoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseEcho)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseEcho}
   */
  public  static final class ResponseEcho extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseEcho)
      ResponseEchoOrBuilder {
    // Use ResponseEcho.newBuilder() to construct.
    private ResponseEcho(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseEcho() {
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseEcho(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEcho_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEcho_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseEcho.class, com.github.jtendermint.jabci.types.Types.ResponseEcho.Builder.class);
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object message_;
    /**
     * <code>string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseEcho)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseEcho other = (com.github.jtendermint.jabci.types.Types.ResponseEcho) obj;

      boolean result = true;
      result = result && getMessage()
          .equals(other.getMessage());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseEcho parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEcho parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEcho parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEcho parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEcho parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEcho parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEcho parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEcho parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEcho parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEcho parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseEcho prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseEcho}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseEcho)
        com.github.jtendermint.jabci.types.Types.ResponseEchoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEcho_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEcho_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseEcho.class, com.github.jtendermint.jabci.types.Types.ResponseEcho.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseEcho.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEcho_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseEcho getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseEcho.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseEcho build() {
        com.github.jtendermint.jabci.types.Types.ResponseEcho result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseEcho buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseEcho result = new com.github.jtendermint.jabci.types.Types.ResponseEcho(this);
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseEcho) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseEcho)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseEcho other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseEcho.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseEcho parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseEcho) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseEcho)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseEcho)
    private static final com.github.jtendermint.jabci.types.Types.ResponseEcho DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseEcho();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseEcho getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseEcho>
        PARSER = new com.google.protobuf.AbstractParser<ResponseEcho>() {
      public ResponseEcho parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseEcho(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseEcho> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseEcho> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseEcho getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseFlushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseFlush)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseFlush}
   */
  public  static final class ResponseFlush extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseFlush)
      ResponseFlushOrBuilder {
    // Use ResponseFlush.newBuilder() to construct.
    private ResponseFlush(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseFlush() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseFlush(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseFlush_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseFlush_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseFlush.class, com.github.jtendermint.jabci.types.Types.ResponseFlush.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseFlush)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseFlush other = (com.github.jtendermint.jabci.types.Types.ResponseFlush) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseFlush parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseFlush parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseFlush parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseFlush parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseFlush parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseFlush parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseFlush parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseFlush parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseFlush parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseFlush parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseFlush prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseFlush}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseFlush)
        com.github.jtendermint.jabci.types.Types.ResponseFlushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseFlush_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseFlush_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseFlush.class, com.github.jtendermint.jabci.types.Types.ResponseFlush.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseFlush.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseFlush_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseFlush getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseFlush.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseFlush build() {
        com.github.jtendermint.jabci.types.Types.ResponseFlush result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseFlush buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseFlush result = new com.github.jtendermint.jabci.types.Types.ResponseFlush(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseFlush) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseFlush)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseFlush other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseFlush.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseFlush parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseFlush) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseFlush)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseFlush)
    private static final com.github.jtendermint.jabci.types.Types.ResponseFlush DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseFlush();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseFlush getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseFlush>
        PARSER = new com.google.protobuf.AbstractParser<ResponseFlush>() {
      public ResponseFlush parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseFlush(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseFlush> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseFlush> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseFlush getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string data = 1;</code>
     */
    java.lang.String getData();
    /**
     * <code>string data = 1;</code>
     */
    com.google.protobuf.ByteString
        getDataBytes();

    /**
     * <code>string version = 2;</code>
     */
    java.lang.String getVersion();
    /**
     * <code>string version = 2;</code>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <code>uint64 last_block_height = 3;</code>
     */
    long getLastBlockHeight();

    /**
     * <code>bytes last_block_app_hash = 4;</code>
     */
    com.google.protobuf.ByteString getLastBlockAppHash();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseInfo}
   */
  public  static final class ResponseInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseInfo)
      ResponseInfoOrBuilder {
    // Use ResponseInfo.newBuilder() to construct.
    private ResponseInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseInfo() {
      data_ = "";
      version_ = "";
      lastBlockHeight_ = 0L;
      lastBlockAppHash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              data_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 24: {

              lastBlockHeight_ = input.readUInt64();
              break;
            }
            case 34: {

              lastBlockAppHash_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseInfo.class, com.github.jtendermint.jabci.types.Types.ResponseInfo.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private volatile java.lang.Object data_;
    /**
     * <code>string data = 1;</code>
     */
    public java.lang.String getData() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        data_ = s;
        return s;
      }
    }
    /**
     * <code>string data = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDataBytes() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        data_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private volatile java.lang.Object version_;
    /**
     * <code>string version = 2;</code>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <code>string version = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_BLOCK_HEIGHT_FIELD_NUMBER = 3;
    private long lastBlockHeight_;
    /**
     * <code>uint64 last_block_height = 3;</code>
     */
    public long getLastBlockHeight() {
      return lastBlockHeight_;
    }

    public static final int LAST_BLOCK_APP_HASH_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString lastBlockAppHash_;
    /**
     * <code>bytes last_block_app_hash = 4;</code>
     */
    public com.google.protobuf.ByteString getLastBlockAppHash() {
      return lastBlockAppHash_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDataBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, data_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, version_);
      }
      if (lastBlockHeight_ != 0L) {
        output.writeUInt64(3, lastBlockHeight_);
      }
      if (!lastBlockAppHash_.isEmpty()) {
        output.writeBytes(4, lastBlockAppHash_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDataBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, data_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, version_);
      }
      if (lastBlockHeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, lastBlockHeight_);
      }
      if (!lastBlockAppHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, lastBlockAppHash_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseInfo)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseInfo other = (com.github.jtendermint.jabci.types.Types.ResponseInfo) obj;

      boolean result = true;
      result = result && getData()
          .equals(other.getData());
      result = result && getVersion()
          .equals(other.getVersion());
      result = result && (getLastBlockHeight()
          == other.getLastBlockHeight());
      result = result && getLastBlockAppHash()
          .equals(other.getLastBlockAppHash());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_BLOCK_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastBlockHeight());
      hash = (37 * hash) + LAST_BLOCK_APP_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getLastBlockAppHash().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseInfo)
        com.github.jtendermint.jabci.types.Types.ResponseInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseInfo.class, com.github.jtendermint.jabci.types.Types.ResponseInfo.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        data_ = "";

        version_ = "";

        lastBlockHeight_ = 0L;

        lastBlockAppHash_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseInfo_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseInfo getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseInfo.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseInfo build() {
        com.github.jtendermint.jabci.types.Types.ResponseInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseInfo buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseInfo result = new com.github.jtendermint.jabci.types.Types.ResponseInfo(this);
        result.data_ = data_;
        result.version_ = version_;
        result.lastBlockHeight_ = lastBlockHeight_;
        result.lastBlockAppHash_ = lastBlockAppHash_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseInfo) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseInfo other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseInfo.getDefaultInstance()) return this;
        if (!other.getData().isEmpty()) {
          data_ = other.data_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (other.getLastBlockHeight() != 0L) {
          setLastBlockHeight(other.getLastBlockHeight());
        }
        if (other.getLastBlockAppHash() != com.google.protobuf.ByteString.EMPTY) {
          setLastBlockAppHash(other.getLastBlockAppHash());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object data_ = "";
      /**
       * <code>string data = 1;</code>
       */
      public java.lang.String getData() {
        java.lang.Object ref = data_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          data_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string data = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDataBytes() {
        java.lang.Object ref = data_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          data_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string data = 1;</code>
       */
      public Builder setData(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string data = 1;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      /**
       * <code>string data = 1;</code>
       */
      public Builder setDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        data_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <code>string version = 2;</code>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string version = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string version = 2;</code>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string version = 2;</code>
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>string version = 2;</code>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private long lastBlockHeight_ ;
      /**
       * <code>uint64 last_block_height = 3;</code>
       */
      public long getLastBlockHeight() {
        return lastBlockHeight_;
      }
      /**
       * <code>uint64 last_block_height = 3;</code>
       */
      public Builder setLastBlockHeight(long value) {
        
        lastBlockHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 last_block_height = 3;</code>
       */
      public Builder clearLastBlockHeight() {
        
        lastBlockHeight_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString lastBlockAppHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes last_block_app_hash = 4;</code>
       */
      public com.google.protobuf.ByteString getLastBlockAppHash() {
        return lastBlockAppHash_;
      }
      /**
       * <code>bytes last_block_app_hash = 4;</code>
       */
      public Builder setLastBlockAppHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastBlockAppHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes last_block_app_hash = 4;</code>
       */
      public Builder clearLastBlockAppHash() {
        
        lastBlockAppHash_ = getDefaultInstance().getLastBlockAppHash();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseInfo)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseInfo)
    private static final com.github.jtendermint.jabci.types.Types.ResponseInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseInfo();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseInfo>
        PARSER = new com.google.protobuf.AbstractParser<ResponseInfo>() {
      public ResponseInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseInfo> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseSetOptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseSetOption)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string log = 1;</code>
     */
    java.lang.String getLog();
    /**
     * <code>string log = 1;</code>
     */
    com.google.protobuf.ByteString
        getLogBytes();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseSetOption}
   */
  public  static final class ResponseSetOption extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseSetOption)
      ResponseSetOptionOrBuilder {
    // Use ResponseSetOption.newBuilder() to construct.
    private ResponseSetOption(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseSetOption() {
      log_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseSetOption(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              log_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseSetOption_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseSetOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseSetOption.class, com.github.jtendermint.jabci.types.Types.ResponseSetOption.Builder.class);
    }

    public static final int LOG_FIELD_NUMBER = 1;
    private volatile java.lang.Object log_;
    /**
     * <code>string log = 1;</code>
     */
    public java.lang.String getLog() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        log_ = s;
        return s;
      }
    }
    /**
     * <code>string log = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLogBytes() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        log_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getLogBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, log_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getLogBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, log_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseSetOption)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseSetOption other = (com.github.jtendermint.jabci.types.Types.ResponseSetOption) obj;

      boolean result = true;
      result = result && getLog()
          .equals(other.getLog());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOG_FIELD_NUMBER;
      hash = (53 * hash) + getLog().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseSetOption parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseSetOption parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseSetOption parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseSetOption parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseSetOption parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseSetOption parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseSetOption parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseSetOption parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseSetOption parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseSetOption parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseSetOption prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseSetOption}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseSetOption)
        com.github.jtendermint.jabci.types.Types.ResponseSetOptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseSetOption_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseSetOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseSetOption.class, com.github.jtendermint.jabci.types.Types.ResponseSetOption.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseSetOption.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        log_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseSetOption_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseSetOption getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseSetOption.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseSetOption build() {
        com.github.jtendermint.jabci.types.Types.ResponseSetOption result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseSetOption buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseSetOption result = new com.github.jtendermint.jabci.types.Types.ResponseSetOption(this);
        result.log_ = log_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseSetOption) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseSetOption)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseSetOption other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseSetOption.getDefaultInstance()) return this;
        if (!other.getLog().isEmpty()) {
          log_ = other.log_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseSetOption parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseSetOption) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object log_ = "";
      /**
       * <code>string log = 1;</code>
       */
      public java.lang.String getLog() {
        java.lang.Object ref = log_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          log_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string log = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLogBytes() {
        java.lang.Object ref = log_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          log_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string log = 1;</code>
       */
      public Builder setLog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        log_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string log = 1;</code>
       */
      public Builder clearLog() {
        
        log_ = getDefaultInstance().getLog();
        onChanged();
        return this;
      }
      /**
       * <code>string log = 1;</code>
       */
      public Builder setLogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        log_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseSetOption)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseSetOption)
    private static final com.github.jtendermint.jabci.types.Types.ResponseSetOption DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseSetOption();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseSetOption getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseSetOption>
        PARSER = new com.google.protobuf.AbstractParser<ResponseSetOption>() {
      public ResponseSetOption parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseSetOption(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseSetOption> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseSetOption> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseSetOption getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseDeliverTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseDeliverTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    int getCodeValue();
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.CodeType getCode();

    /**
     * <code>bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>string log = 3;</code>
     */
    java.lang.String getLog();
    /**
     * <code>string log = 3;</code>
     */
    com.google.protobuf.ByteString
        getLogBytes();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseDeliverTx}
   */
  public  static final class ResponseDeliverTx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseDeliverTx)
      ResponseDeliverTxOrBuilder {
    // Use ResponseDeliverTx.newBuilder() to construct.
    private ResponseDeliverTx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseDeliverTx() {
      code_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
      log_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseDeliverTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              code_ = rawValue;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              log_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseDeliverTx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseDeliverTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.class, com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    public int getCodeValue() {
      return code_;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.CodeType getCode() {
      com.github.jtendermint.jabci.types.Types.CodeType result = com.github.jtendermint.jabci.types.Types.CodeType.valueOf(code_);
      return result == null ? com.github.jtendermint.jabci.types.Types.CodeType.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int LOG_FIELD_NUMBER = 3;
    private volatile java.lang.Object log_;
    /**
     * <code>string log = 3;</code>
     */
    public java.lang.String getLog() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        log_ = s;
        return s;
      }
    }
    /**
     * <code>string log = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLogBytes() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        log_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != com.github.jtendermint.jabci.types.Types.CodeType.OK.getNumber()) {
        output.writeEnum(1, code_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, log_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != com.github.jtendermint.jabci.types.Types.CodeType.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, log_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseDeliverTx)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseDeliverTx other = (com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) obj;

      boolean result = true;
      result = result && code_ == other.code_;
      result = result && getData()
          .equals(other.getData());
      result = result && getLog()
          .equals(other.getLog());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + code_;
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + LOG_FIELD_NUMBER;
      hash = (53 * hash) + getLog().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseDeliverTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseDeliverTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseDeliverTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseDeliverTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseDeliverTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseDeliverTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseDeliverTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseDeliverTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseDeliverTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseDeliverTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseDeliverTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseDeliverTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseDeliverTx)
        com.github.jtendermint.jabci.types.Types.ResponseDeliverTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseDeliverTx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseDeliverTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.class, com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        code_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        log_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseDeliverTx_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseDeliverTx getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseDeliverTx build() {
        com.github.jtendermint.jabci.types.Types.ResponseDeliverTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseDeliverTx buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseDeliverTx result = new com.github.jtendermint.jabci.types.Types.ResponseDeliverTx(this);
        result.code_ = code_;
        result.data_ = data_;
        result.log_ = log_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseDeliverTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseDeliverTx other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseDeliverTx.getDefaultInstance()) return this;
        if (other.code_ != 0) {
          setCodeValue(other.getCodeValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getLog().isEmpty()) {
          log_ = other.log_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseDeliverTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseDeliverTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int code_ = 0;
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public int getCodeValue() {
        return code_;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder setCodeValue(int value) {
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.CodeType getCode() {
        com.github.jtendermint.jabci.types.Types.CodeType result = com.github.jtendermint.jabci.types.Types.CodeType.valueOf(code_);
        return result == null ? com.github.jtendermint.jabci.types.Types.CodeType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder setCode(com.github.jtendermint.jabci.types.Types.CodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.lang.Object log_ = "";
      /**
       * <code>string log = 3;</code>
       */
      public java.lang.String getLog() {
        java.lang.Object ref = log_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          log_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string log = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLogBytes() {
        java.lang.Object ref = log_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          log_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string log = 3;</code>
       */
      public Builder setLog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        log_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string log = 3;</code>
       */
      public Builder clearLog() {
        
        log_ = getDefaultInstance().getLog();
        onChanged();
        return this;
      }
      /**
       * <code>string log = 3;</code>
       */
      public Builder setLogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        log_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseDeliverTx)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseDeliverTx)
    private static final com.github.jtendermint.jabci.types.Types.ResponseDeliverTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseDeliverTx();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseDeliverTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseDeliverTx>
        PARSER = new com.google.protobuf.AbstractParser<ResponseDeliverTx>() {
      public ResponseDeliverTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseDeliverTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseDeliverTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseDeliverTx> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseDeliverTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseCheckTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseCheckTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    int getCodeValue();
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.CodeType getCode();

    /**
     * <code>bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>string log = 3;</code>
     */
    java.lang.String getLog();
    /**
     * <code>string log = 3;</code>
     */
    com.google.protobuf.ByteString
        getLogBytes();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseCheckTx}
   */
  public  static final class ResponseCheckTx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseCheckTx)
      ResponseCheckTxOrBuilder {
    // Use ResponseCheckTx.newBuilder() to construct.
    private ResponseCheckTx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseCheckTx() {
      code_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
      log_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseCheckTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              code_ = rawValue;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              log_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseCheckTx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseCheckTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseCheckTx.class, com.github.jtendermint.jabci.types.Types.ResponseCheckTx.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    public int getCodeValue() {
      return code_;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.CodeType getCode() {
      com.github.jtendermint.jabci.types.Types.CodeType result = com.github.jtendermint.jabci.types.Types.CodeType.valueOf(code_);
      return result == null ? com.github.jtendermint.jabci.types.Types.CodeType.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int LOG_FIELD_NUMBER = 3;
    private volatile java.lang.Object log_;
    /**
     * <code>string log = 3;</code>
     */
    public java.lang.String getLog() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        log_ = s;
        return s;
      }
    }
    /**
     * <code>string log = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLogBytes() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        log_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != com.github.jtendermint.jabci.types.Types.CodeType.OK.getNumber()) {
        output.writeEnum(1, code_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, log_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != com.github.jtendermint.jabci.types.Types.CodeType.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, log_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseCheckTx)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseCheckTx other = (com.github.jtendermint.jabci.types.Types.ResponseCheckTx) obj;

      boolean result = true;
      result = result && code_ == other.code_;
      result = result && getData()
          .equals(other.getData());
      result = result && getLog()
          .equals(other.getLog());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + code_;
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + LOG_FIELD_NUMBER;
      hash = (53 * hash) + getLog().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseCheckTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCheckTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCheckTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCheckTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCheckTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCheckTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCheckTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCheckTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCheckTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCheckTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseCheckTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseCheckTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseCheckTx)
        com.github.jtendermint.jabci.types.Types.ResponseCheckTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseCheckTx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseCheckTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseCheckTx.class, com.github.jtendermint.jabci.types.Types.ResponseCheckTx.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseCheckTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        code_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        log_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseCheckTx_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseCheckTx getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseCheckTx.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseCheckTx build() {
        com.github.jtendermint.jabci.types.Types.ResponseCheckTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseCheckTx buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseCheckTx result = new com.github.jtendermint.jabci.types.Types.ResponseCheckTx(this);
        result.code_ = code_;
        result.data_ = data_;
        result.log_ = log_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseCheckTx) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseCheckTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseCheckTx other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseCheckTx.getDefaultInstance()) return this;
        if (other.code_ != 0) {
          setCodeValue(other.getCodeValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getLog().isEmpty()) {
          log_ = other.log_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseCheckTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseCheckTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int code_ = 0;
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public int getCodeValue() {
        return code_;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder setCodeValue(int value) {
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.CodeType getCode() {
        com.github.jtendermint.jabci.types.Types.CodeType result = com.github.jtendermint.jabci.types.Types.CodeType.valueOf(code_);
        return result == null ? com.github.jtendermint.jabci.types.Types.CodeType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder setCode(com.github.jtendermint.jabci.types.Types.CodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.lang.Object log_ = "";
      /**
       * <code>string log = 3;</code>
       */
      public java.lang.String getLog() {
        java.lang.Object ref = log_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          log_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string log = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLogBytes() {
        java.lang.Object ref = log_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          log_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string log = 3;</code>
       */
      public Builder setLog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        log_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string log = 3;</code>
       */
      public Builder clearLog() {
        
        log_ = getDefaultInstance().getLog();
        onChanged();
        return this;
      }
      /**
       * <code>string log = 3;</code>
       */
      public Builder setLogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        log_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseCheckTx)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseCheckTx)
    private static final com.github.jtendermint.jabci.types.Types.ResponseCheckTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseCheckTx();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseCheckTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseCheckTx>
        PARSER = new com.google.protobuf.AbstractParser<ResponseCheckTx>() {
      public ResponseCheckTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseCheckTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseCheckTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseCheckTx> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseCheckTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseQueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseQuery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    int getCodeValue();
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.CodeType getCode();

    /**
     * <code>int64 index = 2;</code>
     */
    long getIndex();

    /**
     * <code>bytes key = 3;</code>
     */
    com.google.protobuf.ByteString getKey();

    /**
     * <code>bytes value = 4;</code>
     */
    com.google.protobuf.ByteString getValue();

    /**
     * <code>bytes proof = 5;</code>
     */
    com.google.protobuf.ByteString getProof();

    /**
     * <code>uint64 height = 6;</code>
     */
    long getHeight();

    /**
     * <code>string log = 7;</code>
     */
    java.lang.String getLog();
    /**
     * <code>string log = 7;</code>
     */
    com.google.protobuf.ByteString
        getLogBytes();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseQuery}
   */
  public  static final class ResponseQuery extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseQuery)
      ResponseQueryOrBuilder {
    // Use ResponseQuery.newBuilder() to construct.
    private ResponseQuery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseQuery() {
      code_ = 0;
      index_ = 0L;
      key_ = com.google.protobuf.ByteString.EMPTY;
      value_ = com.google.protobuf.ByteString.EMPTY;
      proof_ = com.google.protobuf.ByteString.EMPTY;
      height_ = 0L;
      log_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseQuery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              code_ = rawValue;
              break;
            }
            case 16: {

              index_ = input.readInt64();
              break;
            }
            case 26: {

              key_ = input.readBytes();
              break;
            }
            case 34: {

              value_ = input.readBytes();
              break;
            }
            case 42: {

              proof_ = input.readBytes();
              break;
            }
            case 48: {

              height_ = input.readUInt64();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              log_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseQuery_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseQuery.class, com.github.jtendermint.jabci.types.Types.ResponseQuery.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    public int getCodeValue() {
      return code_;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.CodeType getCode() {
      com.github.jtendermint.jabci.types.Types.CodeType result = com.github.jtendermint.jabci.types.Types.CodeType.valueOf(code_);
      return result == null ? com.github.jtendermint.jabci.types.Types.CodeType.UNRECOGNIZED : result;
    }

    public static final int INDEX_FIELD_NUMBER = 2;
    private long index_;
    /**
     * <code>int64 index = 2;</code>
     */
    public long getIndex() {
      return index_;
    }

    public static final int KEY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString key_;
    /**
     * <code>bytes key = 3;</code>
     */
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }

    public static final int VALUE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString value_;
    /**
     * <code>bytes value = 4;</code>
     */
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    public static final int PROOF_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString proof_;
    /**
     * <code>bytes proof = 5;</code>
     */
    public com.google.protobuf.ByteString getProof() {
      return proof_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 6;
    private long height_;
    /**
     * <code>uint64 height = 6;</code>
     */
    public long getHeight() {
      return height_;
    }

    public static final int LOG_FIELD_NUMBER = 7;
    private volatile java.lang.Object log_;
    /**
     * <code>string log = 7;</code>
     */
    public java.lang.String getLog() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        log_ = s;
        return s;
      }
    }
    /**
     * <code>string log = 7;</code>
     */
    public com.google.protobuf.ByteString
        getLogBytes() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        log_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != com.github.jtendermint.jabci.types.Types.CodeType.OK.getNumber()) {
        output.writeEnum(1, code_);
      }
      if (index_ != 0L) {
        output.writeInt64(2, index_);
      }
      if (!key_.isEmpty()) {
        output.writeBytes(3, key_);
      }
      if (!value_.isEmpty()) {
        output.writeBytes(4, value_);
      }
      if (!proof_.isEmpty()) {
        output.writeBytes(5, proof_);
      }
      if (height_ != 0L) {
        output.writeUInt64(6, height_);
      }
      if (!getLogBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, log_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != com.github.jtendermint.jabci.types.Types.CodeType.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_);
      }
      if (index_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, index_);
      }
      if (!key_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, key_);
      }
      if (!value_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, value_);
      }
      if (!proof_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, proof_);
      }
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, height_);
      }
      if (!getLogBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, log_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseQuery)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseQuery other = (com.github.jtendermint.jabci.types.Types.ResponseQuery) obj;

      boolean result = true;
      result = result && code_ == other.code_;
      result = result && (getIndex()
          == other.getIndex());
      result = result && getKey()
          .equals(other.getKey());
      result = result && getValue()
          .equals(other.getValue());
      result = result && getProof()
          .equals(other.getProof());
      result = result && (getHeight()
          == other.getHeight());
      result = result && getLog()
          .equals(other.getLog());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + code_;
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIndex());
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (37 * hash) + PROOF_FIELD_NUMBER;
      hash = (53 * hash) + getProof().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      hash = (37 * hash) + LOG_FIELD_NUMBER;
      hash = (53 * hash) + getLog().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseQuery prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseQuery)
        com.github.jtendermint.jabci.types.Types.ResponseQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseQuery_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseQuery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseQuery.class, com.github.jtendermint.jabci.types.Types.ResponseQuery.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        code_ = 0;

        index_ = 0L;

        key_ = com.google.protobuf.ByteString.EMPTY;

        value_ = com.google.protobuf.ByteString.EMPTY;

        proof_ = com.google.protobuf.ByteString.EMPTY;

        height_ = 0L;

        log_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseQuery_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseQuery getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseQuery.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseQuery build() {
        com.github.jtendermint.jabci.types.Types.ResponseQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseQuery buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseQuery result = new com.github.jtendermint.jabci.types.Types.ResponseQuery(this);
        result.code_ = code_;
        result.index_ = index_;
        result.key_ = key_;
        result.value_ = value_;
        result.proof_ = proof_;
        result.height_ = height_;
        result.log_ = log_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseQuery) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseQuery other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseQuery.getDefaultInstance()) return this;
        if (other.code_ != 0) {
          setCodeValue(other.getCodeValue());
        }
        if (other.getIndex() != 0L) {
          setIndex(other.getIndex());
        }
        if (other.getKey() != com.google.protobuf.ByteString.EMPTY) {
          setKey(other.getKey());
        }
        if (other.getValue() != com.google.protobuf.ByteString.EMPTY) {
          setValue(other.getValue());
        }
        if (other.getProof() != com.google.protobuf.ByteString.EMPTY) {
          setProof(other.getProof());
        }
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        if (!other.getLog().isEmpty()) {
          log_ = other.log_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseQuery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseQuery) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int code_ = 0;
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public int getCodeValue() {
        return code_;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder setCodeValue(int value) {
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.CodeType getCode() {
        com.github.jtendermint.jabci.types.Types.CodeType result = com.github.jtendermint.jabci.types.Types.CodeType.valueOf(code_);
        return result == null ? com.github.jtendermint.jabci.types.Types.CodeType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder setCode(com.github.jtendermint.jabci.types.Types.CodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private long index_ ;
      /**
       * <code>int64 index = 2;</code>
       */
      public long getIndex() {
        return index_;
      }
      /**
       * <code>int64 index = 2;</code>
       */
      public Builder setIndex(long value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 index = 2;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes key = 3;</code>
       */
      public com.google.protobuf.ByteString getKey() {
        return key_;
      }
      /**
       * <code>bytes key = 3;</code>
       */
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes key = 3;</code>
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes value = 4;</code>
       */
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <code>bytes value = 4;</code>
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes value = 4;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString proof_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes proof = 5;</code>
       */
      public com.google.protobuf.ByteString getProof() {
        return proof_;
      }
      /**
       * <code>bytes proof = 5;</code>
       */
      public Builder setProof(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        proof_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes proof = 5;</code>
       */
      public Builder clearProof() {
        
        proof_ = getDefaultInstance().getProof();
        onChanged();
        return this;
      }

      private long height_ ;
      /**
       * <code>uint64 height = 6;</code>
       */
      public long getHeight() {
        return height_;
      }
      /**
       * <code>uint64 height = 6;</code>
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 height = 6;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object log_ = "";
      /**
       * <code>string log = 7;</code>
       */
      public java.lang.String getLog() {
        java.lang.Object ref = log_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          log_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string log = 7;</code>
       */
      public com.google.protobuf.ByteString
          getLogBytes() {
        java.lang.Object ref = log_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          log_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string log = 7;</code>
       */
      public Builder setLog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        log_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string log = 7;</code>
       */
      public Builder clearLog() {
        
        log_ = getDefaultInstance().getLog();
        onChanged();
        return this;
      }
      /**
       * <code>string log = 7;</code>
       */
      public Builder setLogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        log_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseQuery)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseQuery)
    private static final com.github.jtendermint.jabci.types.Types.ResponseQuery DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseQuery();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseQuery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseQuery>
        PARSER = new com.google.protobuf.AbstractParser<ResponseQuery>() {
      public ResponseQuery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseQuery(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseQuery> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseQuery> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseQuery getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseCommitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseCommit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    int getCodeValue();
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.CodeType getCode();

    /**
     * <code>bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>string log = 3;</code>
     */
    java.lang.String getLog();
    /**
     * <code>string log = 3;</code>
     */
    com.google.protobuf.ByteString
        getLogBytes();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseCommit}
   */
  public  static final class ResponseCommit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseCommit)
      ResponseCommitOrBuilder {
    // Use ResponseCommit.newBuilder() to construct.
    private ResponseCommit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseCommit() {
      code_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
      log_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseCommit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              code_ = rawValue;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              log_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseCommit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseCommit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseCommit.class, com.github.jtendermint.jabci.types.Types.ResponseCommit.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    public int getCodeValue() {
      return code_;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.CodeType getCode() {
      com.github.jtendermint.jabci.types.Types.CodeType result = com.github.jtendermint.jabci.types.Types.CodeType.valueOf(code_);
      return result == null ? com.github.jtendermint.jabci.types.Types.CodeType.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int LOG_FIELD_NUMBER = 3;
    private volatile java.lang.Object log_;
    /**
     * <code>string log = 3;</code>
     */
    public java.lang.String getLog() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        log_ = s;
        return s;
      }
    }
    /**
     * <code>string log = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLogBytes() {
      java.lang.Object ref = log_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        log_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != com.github.jtendermint.jabci.types.Types.CodeType.OK.getNumber()) {
        output.writeEnum(1, code_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, log_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != com.github.jtendermint.jabci.types.Types.CodeType.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (!getLogBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, log_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseCommit)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseCommit other = (com.github.jtendermint.jabci.types.Types.ResponseCommit) obj;

      boolean result = true;
      result = result && code_ == other.code_;
      result = result && getData()
          .equals(other.getData());
      result = result && getLog()
          .equals(other.getLog());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + code_;
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + LOG_FIELD_NUMBER;
      hash = (53 * hash) + getLog().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseCommit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCommit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCommit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCommit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCommit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCommit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCommit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCommit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCommit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseCommit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseCommit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseCommit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseCommit)
        com.github.jtendermint.jabci.types.Types.ResponseCommitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseCommit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseCommit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseCommit.class, com.github.jtendermint.jabci.types.Types.ResponseCommit.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseCommit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        code_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        log_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseCommit_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseCommit getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseCommit.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseCommit build() {
        com.github.jtendermint.jabci.types.Types.ResponseCommit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseCommit buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseCommit result = new com.github.jtendermint.jabci.types.Types.ResponseCommit(this);
        result.code_ = code_;
        result.data_ = data_;
        result.log_ = log_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseCommit) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseCommit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseCommit other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseCommit.getDefaultInstance()) return this;
        if (other.code_ != 0) {
          setCodeValue(other.getCodeValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getLog().isEmpty()) {
          log_ = other.log_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseCommit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseCommit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int code_ = 0;
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public int getCodeValue() {
        return code_;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder setCodeValue(int value) {
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.CodeType getCode() {
        com.github.jtendermint.jabci.types.Types.CodeType result = com.github.jtendermint.jabci.types.Types.CodeType.valueOf(code_);
        return result == null ? com.github.jtendermint.jabci.types.Types.CodeType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder setCode(com.github.jtendermint.jabci.types.Types.CodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.CodeType code = 1;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.lang.Object log_ = "";
      /**
       * <code>string log = 3;</code>
       */
      public java.lang.String getLog() {
        java.lang.Object ref = log_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          log_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string log = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLogBytes() {
        java.lang.Object ref = log_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          log_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string log = 3;</code>
       */
      public Builder setLog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        log_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string log = 3;</code>
       */
      public Builder clearLog() {
        
        log_ = getDefaultInstance().getLog();
        onChanged();
        return this;
      }
      /**
       * <code>string log = 3;</code>
       */
      public Builder setLogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        log_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseCommit)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseCommit)
    private static final com.github.jtendermint.jabci.types.Types.ResponseCommit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseCommit();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseCommit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseCommit>
        PARSER = new com.google.protobuf.AbstractParser<ResponseCommit>() {
      public ResponseCommit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseCommit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseCommit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseCommit> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseCommit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseInitChainOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseInitChain)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseInitChain}
   */
  public  static final class ResponseInitChain extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseInitChain)
      ResponseInitChainOrBuilder {
    // Use ResponseInitChain.newBuilder() to construct.
    private ResponseInitChain(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseInitChain() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseInitChain(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseInitChain_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseInitChain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseInitChain.class, com.github.jtendermint.jabci.types.Types.ResponseInitChain.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseInitChain)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseInitChain other = (com.github.jtendermint.jabci.types.Types.ResponseInitChain) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseInitChain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInitChain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInitChain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInitChain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInitChain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInitChain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInitChain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInitChain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInitChain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseInitChain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseInitChain prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseInitChain}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseInitChain)
        com.github.jtendermint.jabci.types.Types.ResponseInitChainOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseInitChain_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseInitChain_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseInitChain.class, com.github.jtendermint.jabci.types.Types.ResponseInitChain.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseInitChain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseInitChain_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseInitChain getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseInitChain.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseInitChain build() {
        com.github.jtendermint.jabci.types.Types.ResponseInitChain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseInitChain buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseInitChain result = new com.github.jtendermint.jabci.types.Types.ResponseInitChain(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseInitChain) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseInitChain)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseInitChain other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseInitChain.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseInitChain parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseInitChain) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseInitChain)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseInitChain)
    private static final com.github.jtendermint.jabci.types.Types.ResponseInitChain DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseInitChain();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseInitChain getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseInitChain>
        PARSER = new com.google.protobuf.AbstractParser<ResponseInitChain>() {
      public ResponseInitChain parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseInitChain(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseInitChain> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseInitChain> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseInitChain getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseBeginBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseBeginBlock)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseBeginBlock}
   */
  public  static final class ResponseBeginBlock extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseBeginBlock)
      ResponseBeginBlockOrBuilder {
    // Use ResponseBeginBlock.newBuilder() to construct.
    private ResponseBeginBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseBeginBlock() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseBeginBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseBeginBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseBeginBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.class, com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseBeginBlock)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseBeginBlock other = (com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseBeginBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseBeginBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseBeginBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseBeginBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseBeginBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseBeginBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseBeginBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseBeginBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseBeginBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseBeginBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseBeginBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseBeginBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseBeginBlock)
        com.github.jtendermint.jabci.types.Types.ResponseBeginBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseBeginBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseBeginBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.class, com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseBeginBlock_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseBeginBlock getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseBeginBlock build() {
        com.github.jtendermint.jabci.types.Types.ResponseBeginBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseBeginBlock buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseBeginBlock result = new com.github.jtendermint.jabci.types.Types.ResponseBeginBlock(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseBeginBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseBeginBlock other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseBeginBlock.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseBeginBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseBeginBlock) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseBeginBlock)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseBeginBlock)
    private static final com.github.jtendermint.jabci.types.Types.ResponseBeginBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseBeginBlock();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseBeginBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseBeginBlock>
        PARSER = new com.google.protobuf.AbstractParser<ResponseBeginBlock>() {
      public ResponseBeginBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseBeginBlock(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseBeginBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseBeginBlock> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseBeginBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseEndBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.ResponseEndBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
     */
    java.util.List<com.github.jtendermint.jabci.types.Types.Validator> 
        getDiffsList();
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.Validator getDiffs(int index);
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
     */
    int getDiffsCount();
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
     */
    java.util.List<? extends com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder> 
        getDiffsOrBuilderList();
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
     */
    com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder getDiffsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseEndBlock}
   */
  public  static final class ResponseEndBlock extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.ResponseEndBlock)
      ResponseEndBlockOrBuilder {
    // Use ResponseEndBlock.newBuilder() to construct.
    private ResponseEndBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseEndBlock() {
      diffs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseEndBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                diffs_ = new java.util.ArrayList<com.github.jtendermint.jabci.types.Types.Validator>();
                mutable_bitField0_ |= 0x00000001;
              }
              diffs_.add(
                  input.readMessage(com.github.jtendermint.jabci.types.Types.Validator.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          diffs_ = java.util.Collections.unmodifiableList(diffs_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.ResponseEndBlock.class, com.github.jtendermint.jabci.types.Types.ResponseEndBlock.Builder.class);
    }

    public static final int DIFFS_FIELD_NUMBER = 1;
    private java.util.List<com.github.jtendermint.jabci.types.Types.Validator> diffs_;
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
     */
    public java.util.List<com.github.jtendermint.jabci.types.Types.Validator> getDiffsList() {
      return diffs_;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
     */
    public java.util.List<? extends com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder> 
        getDiffsOrBuilderList() {
      return diffs_;
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
     */
    public int getDiffsCount() {
      return diffs_.size();
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.Validator getDiffs(int index) {
      return diffs_.get(index);
    }
    /**
     * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
     */
    public com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder getDiffsOrBuilder(
        int index) {
      return diffs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < diffs_.size(); i++) {
        output.writeMessage(1, diffs_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < diffs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, diffs_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.ResponseEndBlock)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.ResponseEndBlock other = (com.github.jtendermint.jabci.types.Types.ResponseEndBlock) obj;

      boolean result = true;
      result = result && getDiffsList()
          .equals(other.getDiffsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDiffsCount() > 0) {
        hash = (37 * hash) + DIFFS_FIELD_NUMBER;
        hash = (53 * hash) + getDiffsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseEndBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEndBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEndBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEndBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEndBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEndBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEndBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEndBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEndBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.ResponseEndBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.ResponseEndBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.ResponseEndBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.ResponseEndBlock)
        com.github.jtendermint.jabci.types.Types.ResponseEndBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.ResponseEndBlock.class, com.github.jtendermint.jabci.types.Types.ResponseEndBlock.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.ResponseEndBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDiffsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (diffsBuilder_ == null) {
          diffs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          diffsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseEndBlock getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.ResponseEndBlock.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.ResponseEndBlock build() {
        com.github.jtendermint.jabci.types.Types.ResponseEndBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.ResponseEndBlock buildPartial() {
        com.github.jtendermint.jabci.types.Types.ResponseEndBlock result = new com.github.jtendermint.jabci.types.Types.ResponseEndBlock(this);
        int from_bitField0_ = bitField0_;
        if (diffsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            diffs_ = java.util.Collections.unmodifiableList(diffs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.diffs_ = diffs_;
        } else {
          result.diffs_ = diffsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.ResponseEndBlock) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.ResponseEndBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.ResponseEndBlock other) {
        if (other == com.github.jtendermint.jabci.types.Types.ResponseEndBlock.getDefaultInstance()) return this;
        if (diffsBuilder_ == null) {
          if (!other.diffs_.isEmpty()) {
            if (diffs_.isEmpty()) {
              diffs_ = other.diffs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDiffsIsMutable();
              diffs_.addAll(other.diffs_);
            }
            onChanged();
          }
        } else {
          if (!other.diffs_.isEmpty()) {
            if (diffsBuilder_.isEmpty()) {
              diffsBuilder_.dispose();
              diffsBuilder_ = null;
              diffs_ = other.diffs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              diffsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDiffsFieldBuilder() : null;
            } else {
              diffsBuilder_.addAllMessages(other.diffs_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.ResponseEndBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.ResponseEndBlock) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.github.jtendermint.jabci.types.Types.Validator> diffs_ =
        java.util.Collections.emptyList();
      private void ensureDiffsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          diffs_ = new java.util.ArrayList<com.github.jtendermint.jabci.types.Types.Validator>(diffs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.Validator, com.github.jtendermint.jabci.types.Types.Validator.Builder, com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder> diffsBuilder_;

      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public java.util.List<com.github.jtendermint.jabci.types.Types.Validator> getDiffsList() {
        if (diffsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(diffs_);
        } else {
          return diffsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public int getDiffsCount() {
        if (diffsBuilder_ == null) {
          return diffs_.size();
        } else {
          return diffsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.Validator getDiffs(int index) {
        if (diffsBuilder_ == null) {
          return diffs_.get(index);
        } else {
          return diffsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public Builder setDiffs(
          int index, com.github.jtendermint.jabci.types.Types.Validator value) {
        if (diffsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiffsIsMutable();
          diffs_.set(index, value);
          onChanged();
        } else {
          diffsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public Builder setDiffs(
          int index, com.github.jtendermint.jabci.types.Types.Validator.Builder builderForValue) {
        if (diffsBuilder_ == null) {
          ensureDiffsIsMutable();
          diffs_.set(index, builderForValue.build());
          onChanged();
        } else {
          diffsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public Builder addDiffs(com.github.jtendermint.jabci.types.Types.Validator value) {
        if (diffsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiffsIsMutable();
          diffs_.add(value);
          onChanged();
        } else {
          diffsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public Builder addDiffs(
          int index, com.github.jtendermint.jabci.types.Types.Validator value) {
        if (diffsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiffsIsMutable();
          diffs_.add(index, value);
          onChanged();
        } else {
          diffsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public Builder addDiffs(
          com.github.jtendermint.jabci.types.Types.Validator.Builder builderForValue) {
        if (diffsBuilder_ == null) {
          ensureDiffsIsMutable();
          diffs_.add(builderForValue.build());
          onChanged();
        } else {
          diffsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public Builder addDiffs(
          int index, com.github.jtendermint.jabci.types.Types.Validator.Builder builderForValue) {
        if (diffsBuilder_ == null) {
          ensureDiffsIsMutable();
          diffs_.add(index, builderForValue.build());
          onChanged();
        } else {
          diffsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public Builder addAllDiffs(
          java.lang.Iterable<? extends com.github.jtendermint.jabci.types.Types.Validator> values) {
        if (diffsBuilder_ == null) {
          ensureDiffsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, diffs_);
          onChanged();
        } else {
          diffsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public Builder clearDiffs() {
        if (diffsBuilder_ == null) {
          diffs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          diffsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public Builder removeDiffs(int index) {
        if (diffsBuilder_ == null) {
          ensureDiffsIsMutable();
          diffs_.remove(index);
          onChanged();
        } else {
          diffsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.Validator.Builder getDiffsBuilder(
          int index) {
        return getDiffsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder getDiffsOrBuilder(
          int index) {
        if (diffsBuilder_ == null) {
          return diffs_.get(index);  } else {
          return diffsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public java.util.List<? extends com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder> 
           getDiffsOrBuilderList() {
        if (diffsBuilder_ != null) {
          return diffsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(diffs_);
        }
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.Validator.Builder addDiffsBuilder() {
        return getDiffsFieldBuilder().addBuilder(
            com.github.jtendermint.jabci.types.Types.Validator.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public com.github.jtendermint.jabci.types.Types.Validator.Builder addDiffsBuilder(
          int index) {
        return getDiffsFieldBuilder().addBuilder(
            index, com.github.jtendermint.jabci.types.Types.Validator.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.jtendermint.jabci.types.Validator diffs = 1;</code>
       */
      public java.util.List<com.github.jtendermint.jabci.types.Types.Validator.Builder> 
           getDiffsBuilderList() {
        return getDiffsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.Validator, com.github.jtendermint.jabci.types.Types.Validator.Builder, com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder> 
          getDiffsFieldBuilder() {
        if (diffsBuilder_ == null) {
          diffsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.Validator, com.github.jtendermint.jabci.types.Types.Validator.Builder, com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder>(
                  diffs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          diffs_ = null;
        }
        return diffsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.ResponseEndBlock)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.ResponseEndBlock)
    private static final com.github.jtendermint.jabci.types.Types.ResponseEndBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.ResponseEndBlock();
    }

    public static com.github.jtendermint.jabci.types.Types.ResponseEndBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseEndBlock>
        PARSER = new com.google.protobuf.AbstractParser<ResponseEndBlock>() {
      public ResponseEndBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseEndBlock(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseEndBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseEndBlock> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.ResponseEndBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.Header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string chain_id = 1;</code>
     */
    java.lang.String getChainId();
    /**
     * <code>string chain_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getChainIdBytes();

    /**
     * <code>uint64 height = 2;</code>
     */
    long getHeight();

    /**
     * <code>uint64 time = 3;</code>
     */
    long getTime();

    /**
     * <code>uint64 num_txs = 4;</code>
     */
    long getNumTxs();

    /**
     * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
     */
    boolean hasLastBlockId();
    /**
     * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
     */
    com.github.jtendermint.jabci.types.Types.BlockID getLastBlockId();
    /**
     * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
     */
    com.github.jtendermint.jabci.types.Types.BlockIDOrBuilder getLastBlockIdOrBuilder();

    /**
     * <code>bytes last_commit_hash = 6;</code>
     */
    com.google.protobuf.ByteString getLastCommitHash();

    /**
     * <code>bytes data_hash = 7;</code>
     */
    com.google.protobuf.ByteString getDataHash();

    /**
     * <code>bytes validators_hash = 8;</code>
     */
    com.google.protobuf.ByteString getValidatorsHash();

    /**
     * <code>bytes app_hash = 9;</code>
     */
    com.google.protobuf.ByteString getAppHash();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.Header}
   */
  public  static final class Header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.Header)
      HeaderOrBuilder {
    // Use Header.newBuilder() to construct.
    private Header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Header() {
      chainId_ = "";
      height_ = 0L;
      time_ = 0L;
      numTxs_ = 0L;
      lastCommitHash_ = com.google.protobuf.ByteString.EMPTY;
      dataHash_ = com.google.protobuf.ByteString.EMPTY;
      validatorsHash_ = com.google.protobuf.ByteString.EMPTY;
      appHash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              chainId_ = s;
              break;
            }
            case 16: {

              height_ = input.readUInt64();
              break;
            }
            case 24: {

              time_ = input.readUInt64();
              break;
            }
            case 32: {

              numTxs_ = input.readUInt64();
              break;
            }
            case 42: {
              com.github.jtendermint.jabci.types.Types.BlockID.Builder subBuilder = null;
              if (lastBlockId_ != null) {
                subBuilder = lastBlockId_.toBuilder();
              }
              lastBlockId_ = input.readMessage(com.github.jtendermint.jabci.types.Types.BlockID.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lastBlockId_);
                lastBlockId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {

              lastCommitHash_ = input.readBytes();
              break;
            }
            case 58: {

              dataHash_ = input.readBytes();
              break;
            }
            case 66: {

              validatorsHash_ = input.readBytes();
              break;
            }
            case 74: {

              appHash_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Header_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.Header.class, com.github.jtendermint.jabci.types.Types.Header.Builder.class);
    }

    public static final int CHAIN_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object chainId_;
    /**
     * <code>string chain_id = 1;</code>
     */
    public java.lang.String getChainId() {
      java.lang.Object ref = chainId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        chainId_ = s;
        return s;
      }
    }
    /**
     * <code>string chain_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChainIdBytes() {
      java.lang.Object ref = chainId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chainId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HEIGHT_FIELD_NUMBER = 2;
    private long height_;
    /**
     * <code>uint64 height = 2;</code>
     */
    public long getHeight() {
      return height_;
    }

    public static final int TIME_FIELD_NUMBER = 3;
    private long time_;
    /**
     * <code>uint64 time = 3;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int NUM_TXS_FIELD_NUMBER = 4;
    private long numTxs_;
    /**
     * <code>uint64 num_txs = 4;</code>
     */
    public long getNumTxs() {
      return numTxs_;
    }

    public static final int LAST_BLOCK_ID_FIELD_NUMBER = 5;
    private com.github.jtendermint.jabci.types.Types.BlockID lastBlockId_;
    /**
     * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
     */
    public boolean hasLastBlockId() {
      return lastBlockId_ != null;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
     */
    public com.github.jtendermint.jabci.types.Types.BlockID getLastBlockId() {
      return lastBlockId_ == null ? com.github.jtendermint.jabci.types.Types.BlockID.getDefaultInstance() : lastBlockId_;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
     */
    public com.github.jtendermint.jabci.types.Types.BlockIDOrBuilder getLastBlockIdOrBuilder() {
      return getLastBlockId();
    }

    public static final int LAST_COMMIT_HASH_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString lastCommitHash_;
    /**
     * <code>bytes last_commit_hash = 6;</code>
     */
    public com.google.protobuf.ByteString getLastCommitHash() {
      return lastCommitHash_;
    }

    public static final int DATA_HASH_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString dataHash_;
    /**
     * <code>bytes data_hash = 7;</code>
     */
    public com.google.protobuf.ByteString getDataHash() {
      return dataHash_;
    }

    public static final int VALIDATORS_HASH_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString validatorsHash_;
    /**
     * <code>bytes validators_hash = 8;</code>
     */
    public com.google.protobuf.ByteString getValidatorsHash() {
      return validatorsHash_;
    }

    public static final int APP_HASH_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString appHash_;
    /**
     * <code>bytes app_hash = 9;</code>
     */
    public com.google.protobuf.ByteString getAppHash() {
      return appHash_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getChainIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, chainId_);
      }
      if (height_ != 0L) {
        output.writeUInt64(2, height_);
      }
      if (time_ != 0L) {
        output.writeUInt64(3, time_);
      }
      if (numTxs_ != 0L) {
        output.writeUInt64(4, numTxs_);
      }
      if (lastBlockId_ != null) {
        output.writeMessage(5, getLastBlockId());
      }
      if (!lastCommitHash_.isEmpty()) {
        output.writeBytes(6, lastCommitHash_);
      }
      if (!dataHash_.isEmpty()) {
        output.writeBytes(7, dataHash_);
      }
      if (!validatorsHash_.isEmpty()) {
        output.writeBytes(8, validatorsHash_);
      }
      if (!appHash_.isEmpty()) {
        output.writeBytes(9, appHash_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getChainIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, chainId_);
      }
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, height_);
      }
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, time_);
      }
      if (numTxs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, numTxs_);
      }
      if (lastBlockId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getLastBlockId());
      }
      if (!lastCommitHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, lastCommitHash_);
      }
      if (!dataHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, dataHash_);
      }
      if (!validatorsHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, validatorsHash_);
      }
      if (!appHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, appHash_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.Header)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.Header other = (com.github.jtendermint.jabci.types.Types.Header) obj;

      boolean result = true;
      result = result && getChainId()
          .equals(other.getChainId());
      result = result && (getHeight()
          == other.getHeight());
      result = result && (getTime()
          == other.getTime());
      result = result && (getNumTxs()
          == other.getNumTxs());
      result = result && (hasLastBlockId() == other.hasLastBlockId());
      if (hasLastBlockId()) {
        result = result && getLastBlockId()
            .equals(other.getLastBlockId());
      }
      result = result && getLastCommitHash()
          .equals(other.getLastCommitHash());
      result = result && getDataHash()
          .equals(other.getDataHash());
      result = result && getValidatorsHash()
          .equals(other.getValidatorsHash());
      result = result && getAppHash()
          .equals(other.getAppHash());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CHAIN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getChainId().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + NUM_TXS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNumTxs());
      if (hasLastBlockId()) {
        hash = (37 * hash) + LAST_BLOCK_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLastBlockId().hashCode();
      }
      hash = (37 * hash) + LAST_COMMIT_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getLastCommitHash().hashCode();
      hash = (37 * hash) + DATA_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getDataHash().hashCode();
      hash = (37 * hash) + VALIDATORS_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getValidatorsHash().hashCode();
      hash = (37 * hash) + APP_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getAppHash().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.Header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.Header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.Header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.Header)
        com.github.jtendermint.jabci.types.Types.HeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Header_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.Header.class, com.github.jtendermint.jabci.types.Types.Header.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        chainId_ = "";

        height_ = 0L;

        time_ = 0L;

        numTxs_ = 0L;

        if (lastBlockIdBuilder_ == null) {
          lastBlockId_ = null;
        } else {
          lastBlockId_ = null;
          lastBlockIdBuilder_ = null;
        }
        lastCommitHash_ = com.google.protobuf.ByteString.EMPTY;

        dataHash_ = com.google.protobuf.ByteString.EMPTY;

        validatorsHash_ = com.google.protobuf.ByteString.EMPTY;

        appHash_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Header_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.Header getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.Header.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.Header build() {
        com.github.jtendermint.jabci.types.Types.Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.Header buildPartial() {
        com.github.jtendermint.jabci.types.Types.Header result = new com.github.jtendermint.jabci.types.Types.Header(this);
        result.chainId_ = chainId_;
        result.height_ = height_;
        result.time_ = time_;
        result.numTxs_ = numTxs_;
        if (lastBlockIdBuilder_ == null) {
          result.lastBlockId_ = lastBlockId_;
        } else {
          result.lastBlockId_ = lastBlockIdBuilder_.build();
        }
        result.lastCommitHash_ = lastCommitHash_;
        result.dataHash_ = dataHash_;
        result.validatorsHash_ = validatorsHash_;
        result.appHash_ = appHash_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.Header) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.Header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.Header other) {
        if (other == com.github.jtendermint.jabci.types.Types.Header.getDefaultInstance()) return this;
        if (!other.getChainId().isEmpty()) {
          chainId_ = other.chainId_;
          onChanged();
        }
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (other.getNumTxs() != 0L) {
          setNumTxs(other.getNumTxs());
        }
        if (other.hasLastBlockId()) {
          mergeLastBlockId(other.getLastBlockId());
        }
        if (other.getLastCommitHash() != com.google.protobuf.ByteString.EMPTY) {
          setLastCommitHash(other.getLastCommitHash());
        }
        if (other.getDataHash() != com.google.protobuf.ByteString.EMPTY) {
          setDataHash(other.getDataHash());
        }
        if (other.getValidatorsHash() != com.google.protobuf.ByteString.EMPTY) {
          setValidatorsHash(other.getValidatorsHash());
        }
        if (other.getAppHash() != com.google.protobuf.ByteString.EMPTY) {
          setAppHash(other.getAppHash());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.Header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object chainId_ = "";
      /**
       * <code>string chain_id = 1;</code>
       */
      public java.lang.String getChainId() {
        java.lang.Object ref = chainId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          chainId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string chain_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChainIdBytes() {
        java.lang.Object ref = chainId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chainId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string chain_id = 1;</code>
       */
      public Builder setChainId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        chainId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string chain_id = 1;</code>
       */
      public Builder clearChainId() {
        
        chainId_ = getDefaultInstance().getChainId();
        onChanged();
        return this;
      }
      /**
       * <code>string chain_id = 1;</code>
       */
      public Builder setChainIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        chainId_ = value;
        onChanged();
        return this;
      }

      private long height_ ;
      /**
       * <code>uint64 height = 2;</code>
       */
      public long getHeight() {
        return height_;
      }
      /**
       * <code>uint64 height = 2;</code>
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 height = 2;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <code>uint64 time = 3;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>uint64 time = 3;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 time = 3;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private long numTxs_ ;
      /**
       * <code>uint64 num_txs = 4;</code>
       */
      public long getNumTxs() {
        return numTxs_;
      }
      /**
       * <code>uint64 num_txs = 4;</code>
       */
      public Builder setNumTxs(long value) {
        
        numTxs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 num_txs = 4;</code>
       */
      public Builder clearNumTxs() {
        
        numTxs_ = 0L;
        onChanged();
        return this;
      }

      private com.github.jtendermint.jabci.types.Types.BlockID lastBlockId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.BlockID, com.github.jtendermint.jabci.types.Types.BlockID.Builder, com.github.jtendermint.jabci.types.Types.BlockIDOrBuilder> lastBlockIdBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
       */
      public boolean hasLastBlockId() {
        return lastBlockIdBuilder_ != null || lastBlockId_ != null;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
       */
      public com.github.jtendermint.jabci.types.Types.BlockID getLastBlockId() {
        if (lastBlockIdBuilder_ == null) {
          return lastBlockId_ == null ? com.github.jtendermint.jabci.types.Types.BlockID.getDefaultInstance() : lastBlockId_;
        } else {
          return lastBlockIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
       */
      public Builder setLastBlockId(com.github.jtendermint.jabci.types.Types.BlockID value) {
        if (lastBlockIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastBlockId_ = value;
          onChanged();
        } else {
          lastBlockIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
       */
      public Builder setLastBlockId(
          com.github.jtendermint.jabci.types.Types.BlockID.Builder builderForValue) {
        if (lastBlockIdBuilder_ == null) {
          lastBlockId_ = builderForValue.build();
          onChanged();
        } else {
          lastBlockIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
       */
      public Builder mergeLastBlockId(com.github.jtendermint.jabci.types.Types.BlockID value) {
        if (lastBlockIdBuilder_ == null) {
          if (lastBlockId_ != null) {
            lastBlockId_ =
              com.github.jtendermint.jabci.types.Types.BlockID.newBuilder(lastBlockId_).mergeFrom(value).buildPartial();
          } else {
            lastBlockId_ = value;
          }
          onChanged();
        } else {
          lastBlockIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
       */
      public Builder clearLastBlockId() {
        if (lastBlockIdBuilder_ == null) {
          lastBlockId_ = null;
          onChanged();
        } else {
          lastBlockId_ = null;
          lastBlockIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
       */
      public com.github.jtendermint.jabci.types.Types.BlockID.Builder getLastBlockIdBuilder() {
        
        onChanged();
        return getLastBlockIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
       */
      public com.github.jtendermint.jabci.types.Types.BlockIDOrBuilder getLastBlockIdOrBuilder() {
        if (lastBlockIdBuilder_ != null) {
          return lastBlockIdBuilder_.getMessageOrBuilder();
        } else {
          return lastBlockId_ == null ?
              com.github.jtendermint.jabci.types.Types.BlockID.getDefaultInstance() : lastBlockId_;
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.BlockID last_block_id = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.BlockID, com.github.jtendermint.jabci.types.Types.BlockID.Builder, com.github.jtendermint.jabci.types.Types.BlockIDOrBuilder> 
          getLastBlockIdFieldBuilder() {
        if (lastBlockIdBuilder_ == null) {
          lastBlockIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.BlockID, com.github.jtendermint.jabci.types.Types.BlockID.Builder, com.github.jtendermint.jabci.types.Types.BlockIDOrBuilder>(
                  getLastBlockId(),
                  getParentForChildren(),
                  isClean());
          lastBlockId_ = null;
        }
        return lastBlockIdBuilder_;
      }

      private com.google.protobuf.ByteString lastCommitHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes last_commit_hash = 6;</code>
       */
      public com.google.protobuf.ByteString getLastCommitHash() {
        return lastCommitHash_;
      }
      /**
       * <code>bytes last_commit_hash = 6;</code>
       */
      public Builder setLastCommitHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastCommitHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes last_commit_hash = 6;</code>
       */
      public Builder clearLastCommitHash() {
        
        lastCommitHash_ = getDefaultInstance().getLastCommitHash();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString dataHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data_hash = 7;</code>
       */
      public com.google.protobuf.ByteString getDataHash() {
        return dataHash_;
      }
      /**
       * <code>bytes data_hash = 7;</code>
       */
      public Builder setDataHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dataHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data_hash = 7;</code>
       */
      public Builder clearDataHash() {
        
        dataHash_ = getDefaultInstance().getDataHash();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString validatorsHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes validators_hash = 8;</code>
       */
      public com.google.protobuf.ByteString getValidatorsHash() {
        return validatorsHash_;
      }
      /**
       * <code>bytes validators_hash = 8;</code>
       */
      public Builder setValidatorsHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        validatorsHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes validators_hash = 8;</code>
       */
      public Builder clearValidatorsHash() {
        
        validatorsHash_ = getDefaultInstance().getValidatorsHash();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString appHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes app_hash = 9;</code>
       */
      public com.google.protobuf.ByteString getAppHash() {
        return appHash_;
      }
      /**
       * <code>bytes app_hash = 9;</code>
       */
      public Builder setAppHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        appHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes app_hash = 9;</code>
       */
      public Builder clearAppHash() {
        
        appHash_ = getDefaultInstance().getAppHash();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.Header)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.Header)
    private static final com.github.jtendermint.jabci.types.Types.Header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.Header();
    }

    public static com.github.jtendermint.jabci.types.Types.Header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Header>
        PARSER = new com.google.protobuf.AbstractParser<Header>() {
      public Header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.Header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockIDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.BlockID)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes hash = 1;</code>
     */
    com.google.protobuf.ByteString getHash();

    /**
     * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
     */
    boolean hasParts();
    /**
     * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
     */
    com.github.jtendermint.jabci.types.Types.PartSetHeader getParts();
    /**
     * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
     */
    com.github.jtendermint.jabci.types.Types.PartSetHeaderOrBuilder getPartsOrBuilder();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.BlockID}
   */
  public  static final class BlockID extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.BlockID)
      BlockIDOrBuilder {
    // Use BlockID.newBuilder() to construct.
    private BlockID(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockID() {
      hash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BlockID(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              hash_ = input.readBytes();
              break;
            }
            case 18: {
              com.github.jtendermint.jabci.types.Types.PartSetHeader.Builder subBuilder = null;
              if (parts_ != null) {
                subBuilder = parts_.toBuilder();
              }
              parts_ = input.readMessage(com.github.jtendermint.jabci.types.Types.PartSetHeader.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parts_);
                parts_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_BlockID_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_BlockID_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.BlockID.class, com.github.jtendermint.jabci.types.Types.BlockID.Builder.class);
    }

    public static final int HASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString hash_;
    /**
     * <code>bytes hash = 1;</code>
     */
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }

    public static final int PARTS_FIELD_NUMBER = 2;
    private com.github.jtendermint.jabci.types.Types.PartSetHeader parts_;
    /**
     * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
     */
    public boolean hasParts() {
      return parts_ != null;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
     */
    public com.github.jtendermint.jabci.types.Types.PartSetHeader getParts() {
      return parts_ == null ? com.github.jtendermint.jabci.types.Types.PartSetHeader.getDefaultInstance() : parts_;
    }
    /**
     * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
     */
    public com.github.jtendermint.jabci.types.Types.PartSetHeaderOrBuilder getPartsOrBuilder() {
      return getParts();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!hash_.isEmpty()) {
        output.writeBytes(1, hash_);
      }
      if (parts_ != null) {
        output.writeMessage(2, getParts());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, hash_);
      }
      if (parts_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getParts());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.BlockID)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.BlockID other = (com.github.jtendermint.jabci.types.Types.BlockID) obj;

      boolean result = true;
      result = result && getHash()
          .equals(other.getHash());
      result = result && (hasParts() == other.hasParts());
      if (hasParts()) {
        result = result && getParts()
            .equals(other.getParts());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HASH_FIELD_NUMBER;
      hash = (53 * hash) + getHash().hashCode();
      if (hasParts()) {
        hash = (37 * hash) + PARTS_FIELD_NUMBER;
        hash = (53 * hash) + getParts().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.BlockID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.BlockID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.BlockID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.BlockID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.BlockID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.BlockID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.BlockID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.BlockID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.BlockID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.BlockID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.BlockID prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.BlockID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.BlockID)
        com.github.jtendermint.jabci.types.Types.BlockIDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_BlockID_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_BlockID_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.BlockID.class, com.github.jtendermint.jabci.types.Types.BlockID.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.BlockID.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        hash_ = com.google.protobuf.ByteString.EMPTY;

        if (partsBuilder_ == null) {
          parts_ = null;
        } else {
          parts_ = null;
          partsBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_BlockID_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.BlockID getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.BlockID.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.BlockID build() {
        com.github.jtendermint.jabci.types.Types.BlockID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.BlockID buildPartial() {
        com.github.jtendermint.jabci.types.Types.BlockID result = new com.github.jtendermint.jabci.types.Types.BlockID(this);
        result.hash_ = hash_;
        if (partsBuilder_ == null) {
          result.parts_ = parts_;
        } else {
          result.parts_ = partsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.BlockID) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.BlockID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.BlockID other) {
        if (other == com.github.jtendermint.jabci.types.Types.BlockID.getDefaultInstance()) return this;
        if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
          setHash(other.getHash());
        }
        if (other.hasParts()) {
          mergeParts(other.getParts());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.BlockID parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.BlockID) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes hash = 1;</code>
       */
      public com.google.protobuf.ByteString getHash() {
        return hash_;
      }
      /**
       * <code>bytes hash = 1;</code>
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes hash = 1;</code>
       */
      public Builder clearHash() {
        
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }

      private com.github.jtendermint.jabci.types.Types.PartSetHeader parts_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.PartSetHeader, com.github.jtendermint.jabci.types.Types.PartSetHeader.Builder, com.github.jtendermint.jabci.types.Types.PartSetHeaderOrBuilder> partsBuilder_;
      /**
       * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
       */
      public boolean hasParts() {
        return partsBuilder_ != null || parts_ != null;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.PartSetHeader getParts() {
        if (partsBuilder_ == null) {
          return parts_ == null ? com.github.jtendermint.jabci.types.Types.PartSetHeader.getDefaultInstance() : parts_;
        } else {
          return partsBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
       */
      public Builder setParts(com.github.jtendermint.jabci.types.Types.PartSetHeader value) {
        if (partsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parts_ = value;
          onChanged();
        } else {
          partsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
       */
      public Builder setParts(
          com.github.jtendermint.jabci.types.Types.PartSetHeader.Builder builderForValue) {
        if (partsBuilder_ == null) {
          parts_ = builderForValue.build();
          onChanged();
        } else {
          partsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
       */
      public Builder mergeParts(com.github.jtendermint.jabci.types.Types.PartSetHeader value) {
        if (partsBuilder_ == null) {
          if (parts_ != null) {
            parts_ =
              com.github.jtendermint.jabci.types.Types.PartSetHeader.newBuilder(parts_).mergeFrom(value).buildPartial();
          } else {
            parts_ = value;
          }
          onChanged();
        } else {
          partsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
       */
      public Builder clearParts() {
        if (partsBuilder_ == null) {
          parts_ = null;
          onChanged();
        } else {
          parts_ = null;
          partsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.PartSetHeader.Builder getPartsBuilder() {
        
        onChanged();
        return getPartsFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
       */
      public com.github.jtendermint.jabci.types.Types.PartSetHeaderOrBuilder getPartsOrBuilder() {
        if (partsBuilder_ != null) {
          return partsBuilder_.getMessageOrBuilder();
        } else {
          return parts_ == null ?
              com.github.jtendermint.jabci.types.Types.PartSetHeader.getDefaultInstance() : parts_;
        }
      }
      /**
       * <code>.com.github.jtendermint.jabci.types.PartSetHeader parts = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.jtendermint.jabci.types.Types.PartSetHeader, com.github.jtendermint.jabci.types.Types.PartSetHeader.Builder, com.github.jtendermint.jabci.types.Types.PartSetHeaderOrBuilder> 
          getPartsFieldBuilder() {
        if (partsBuilder_ == null) {
          partsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.jtendermint.jabci.types.Types.PartSetHeader, com.github.jtendermint.jabci.types.Types.PartSetHeader.Builder, com.github.jtendermint.jabci.types.Types.PartSetHeaderOrBuilder>(
                  getParts(),
                  getParentForChildren(),
                  isClean());
          parts_ = null;
        }
        return partsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.BlockID)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.BlockID)
    private static final com.github.jtendermint.jabci.types.Types.BlockID DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.BlockID();
    }

    public static com.github.jtendermint.jabci.types.Types.BlockID getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockID>
        PARSER = new com.google.protobuf.AbstractParser<BlockID>() {
      public BlockID parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BlockID(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockID> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockID> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.BlockID getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PartSetHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.PartSetHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 total = 1;</code>
     */
    long getTotal();

    /**
     * <code>bytes hash = 2;</code>
     */
    com.google.protobuf.ByteString getHash();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.PartSetHeader}
   */
  public  static final class PartSetHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.PartSetHeader)
      PartSetHeaderOrBuilder {
    // Use PartSetHeader.newBuilder() to construct.
    private PartSetHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PartSetHeader() {
      total_ = 0L;
      hash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PartSetHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              total_ = input.readUInt64();
              break;
            }
            case 18: {

              hash_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_PartSetHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_PartSetHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.PartSetHeader.class, com.github.jtendermint.jabci.types.Types.PartSetHeader.Builder.class);
    }

    public static final int TOTAL_FIELD_NUMBER = 1;
    private long total_;
    /**
     * <code>uint64 total = 1;</code>
     */
    public long getTotal() {
      return total_;
    }

    public static final int HASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString hash_;
    /**
     * <code>bytes hash = 2;</code>
     */
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (total_ != 0L) {
        output.writeUInt64(1, total_);
      }
      if (!hash_.isEmpty()) {
        output.writeBytes(2, hash_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (total_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, total_);
      }
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, hash_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.PartSetHeader)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.PartSetHeader other = (com.github.jtendermint.jabci.types.Types.PartSetHeader) obj;

      boolean result = true;
      result = result && (getTotal()
          == other.getTotal());
      result = result && getHash()
          .equals(other.getHash());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TOTAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotal());
      hash = (37 * hash) + HASH_FIELD_NUMBER;
      hash = (53 * hash) + getHash().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.PartSetHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.PartSetHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.PartSetHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.PartSetHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.PartSetHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.PartSetHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.PartSetHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.PartSetHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.PartSetHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.PartSetHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.PartSetHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.PartSetHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.PartSetHeader)
        com.github.jtendermint.jabci.types.Types.PartSetHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_PartSetHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_PartSetHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.PartSetHeader.class, com.github.jtendermint.jabci.types.Types.PartSetHeader.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.PartSetHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        total_ = 0L;

        hash_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_PartSetHeader_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.PartSetHeader getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.PartSetHeader.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.PartSetHeader build() {
        com.github.jtendermint.jabci.types.Types.PartSetHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.PartSetHeader buildPartial() {
        com.github.jtendermint.jabci.types.Types.PartSetHeader result = new com.github.jtendermint.jabci.types.Types.PartSetHeader(this);
        result.total_ = total_;
        result.hash_ = hash_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.PartSetHeader) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.PartSetHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.PartSetHeader other) {
        if (other == com.github.jtendermint.jabci.types.Types.PartSetHeader.getDefaultInstance()) return this;
        if (other.getTotal() != 0L) {
          setTotal(other.getTotal());
        }
        if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
          setHash(other.getHash());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.PartSetHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.PartSetHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long total_ ;
      /**
       * <code>uint64 total = 1;</code>
       */
      public long getTotal() {
        return total_;
      }
      /**
       * <code>uint64 total = 1;</code>
       */
      public Builder setTotal(long value) {
        
        total_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 total = 1;</code>
       */
      public Builder clearTotal() {
        
        total_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes hash = 2;</code>
       */
      public com.google.protobuf.ByteString getHash() {
        return hash_;
      }
      /**
       * <code>bytes hash = 2;</code>
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes hash = 2;</code>
       */
      public Builder clearHash() {
        
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.PartSetHeader)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.PartSetHeader)
    private static final com.github.jtendermint.jabci.types.Types.PartSetHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.PartSetHeader();
    }

    public static com.github.jtendermint.jabci.types.Types.PartSetHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PartSetHeader>
        PARSER = new com.google.protobuf.AbstractParser<PartSetHeader>() {
      public PartSetHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PartSetHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PartSetHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PartSetHeader> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.PartSetHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ValidatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.jtendermint.jabci.types.Validator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes pubKey = 1;</code>
     */
    com.google.protobuf.ByteString getPubKey();

    /**
     * <code>uint64 power = 2;</code>
     */
    long getPower();
  }
  /**
   * Protobuf type {@code com.github.jtendermint.jabci.types.Validator}
   */
  public  static final class Validator extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.jtendermint.jabci.types.Validator)
      ValidatorOrBuilder {
    // Use Validator.newBuilder() to construct.
    private Validator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Validator() {
      pubKey_ = com.google.protobuf.ByteString.EMPTY;
      power_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Validator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              pubKey_ = input.readBytes();
              break;
            }
            case 16: {

              power_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Validator_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Validator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jtendermint.jabci.types.Types.Validator.class, com.github.jtendermint.jabci.types.Types.Validator.Builder.class);
    }

    public static final int PUBKEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString pubKey_;
    /**
     * <code>bytes pubKey = 1;</code>
     */
    public com.google.protobuf.ByteString getPubKey() {
      return pubKey_;
    }

    public static final int POWER_FIELD_NUMBER = 2;
    private long power_;
    /**
     * <code>uint64 power = 2;</code>
     */
    public long getPower() {
      return power_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!pubKey_.isEmpty()) {
        output.writeBytes(1, pubKey_);
      }
      if (power_ != 0L) {
        output.writeUInt64(2, power_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!pubKey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, pubKey_);
      }
      if (power_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, power_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.jtendermint.jabci.types.Types.Validator)) {
        return super.equals(obj);
      }
      com.github.jtendermint.jabci.types.Types.Validator other = (com.github.jtendermint.jabci.types.Types.Validator) obj;

      boolean result = true;
      result = result && getPubKey()
          .equals(other.getPubKey());
      result = result && (getPower()
          == other.getPower());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PUBKEY_FIELD_NUMBER;
      hash = (53 * hash) + getPubKey().hashCode();
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPower());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.jtendermint.jabci.types.Types.Validator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.Validator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Validator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jtendermint.jabci.types.Types.Validator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Validator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Validator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Validator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Validator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.jtendermint.jabci.types.Types.Validator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.jtendermint.jabci.types.Types.Validator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jtendermint.jabci.types.Types.Validator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.jtendermint.jabci.types.Validator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.jtendermint.jabci.types.Validator)
        com.github.jtendermint.jabci.types.Types.ValidatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Validator_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Validator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jtendermint.jabci.types.Types.Validator.class, com.github.jtendermint.jabci.types.Types.Validator.Builder.class);
      }

      // Construct using com.github.jtendermint.jabci.types.Types.Validator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        pubKey_ = com.google.protobuf.ByteString.EMPTY;

        power_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jtendermint.jabci.types.Types.internal_static_com_github_jtendermint_jabci_types_Validator_descriptor;
      }

      public com.github.jtendermint.jabci.types.Types.Validator getDefaultInstanceForType() {
        return com.github.jtendermint.jabci.types.Types.Validator.getDefaultInstance();
      }

      public com.github.jtendermint.jabci.types.Types.Validator build() {
        com.github.jtendermint.jabci.types.Types.Validator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jtendermint.jabci.types.Types.Validator buildPartial() {
        com.github.jtendermint.jabci.types.Types.Validator result = new com.github.jtendermint.jabci.types.Types.Validator(this);
        result.pubKey_ = pubKey_;
        result.power_ = power_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jtendermint.jabci.types.Types.Validator) {
          return mergeFrom((com.github.jtendermint.jabci.types.Types.Validator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jtendermint.jabci.types.Types.Validator other) {
        if (other == com.github.jtendermint.jabci.types.Types.Validator.getDefaultInstance()) return this;
        if (other.getPubKey() != com.google.protobuf.ByteString.EMPTY) {
          setPubKey(other.getPubKey());
        }
        if (other.getPower() != 0L) {
          setPower(other.getPower());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jtendermint.jabci.types.Types.Validator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jtendermint.jabci.types.Types.Validator) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString pubKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes pubKey = 1;</code>
       */
      public com.google.protobuf.ByteString getPubKey() {
        return pubKey_;
      }
      /**
       * <code>bytes pubKey = 1;</code>
       */
      public Builder setPubKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pubKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes pubKey = 1;</code>
       */
      public Builder clearPubKey() {
        
        pubKey_ = getDefaultInstance().getPubKey();
        onChanged();
        return this;
      }

      private long power_ ;
      /**
       * <code>uint64 power = 2;</code>
       */
      public long getPower() {
        return power_;
      }
      /**
       * <code>uint64 power = 2;</code>
       */
      public Builder setPower(long value) {
        
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 power = 2;</code>
       */
      public Builder clearPower() {
        
        power_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.jtendermint.jabci.types.Validator)
    }

    // @@protoc_insertion_point(class_scope:com.github.jtendermint.jabci.types.Validator)
    private static final com.github.jtendermint.jabci.types.Types.Validator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jtendermint.jabci.types.Types.Validator();
    }

    public static com.github.jtendermint.jabci.types.Types.Validator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Validator>
        PARSER = new com.google.protobuf.AbstractParser<Validator>() {
      public Validator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Validator(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Validator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Validator> getParserForType() {
      return PARSER;
    }

    public com.github.jtendermint.jabci.types.Types.Validator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_RequestEcho_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_RequestEcho_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_RequestFlush_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_RequestFlush_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_RequestInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_RequestInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_RequestSetOption_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_RequestSetOption_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_RequestDeliverTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_RequestDeliverTx_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_RequestCheckTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_RequestCheckTx_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_RequestQuery_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_RequestQuery_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_RequestCommit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_RequestCommit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_RequestInitChain_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_RequestInitChain_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_RequestBeginBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_RequestBeginBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_RequestEndBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_RequestEndBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseException_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseException_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseEcho_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseEcho_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseFlush_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseFlush_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseSetOption_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseSetOption_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseDeliverTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseDeliverTx_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseCheckTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseCheckTx_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseQuery_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseQuery_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseCommit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseCommit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseInitChain_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseInitChain_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseBeginBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseBeginBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_Header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_Header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_BlockID_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_BlockID_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_PartSetHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_PartSetHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_jtendermint_jabci_types_Validator_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_jtendermint_jabci_types_Validator_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021proto/types.proto\022\"com.github.jtenderm" +
      "int.jabci.types\"\243\006\n\007Request\022?\n\004echo\030\001 \001(" +
      "\0132/.com.github.jtendermint.jabci.types.R" +
      "equestEchoH\000\022A\n\005flush\030\002 \001(\01320.com.github" +
      ".jtendermint.jabci.types.RequestFlushH\000\022" +
      "?\n\004info\030\003 \001(\0132/.com.github.jtendermint.j" +
      "abci.types.RequestInfoH\000\022J\n\nset_option\030\004" +
      " \001(\01324.com.github.jtendermint.jabci.type" +
      "s.RequestSetOptionH\000\022J\n\ndeliver_tx\030\005 \001(\013" +
      "24.com.github.jtendermint.jabci.types.Re",
      "questDeliverTxH\000\022F\n\010check_tx\030\006 \001(\01322.com" +
      ".github.jtendermint.jabci.types.RequestC" +
      "heckTxH\000\022C\n\006commit\030\007 \001(\01321.com.github.jt" +
      "endermint.jabci.types.RequestCommitH\000\022A\n" +
      "\005query\030\010 \001(\01320.com.github.jtendermint.ja" +
      "bci.types.RequestQueryH\000\022J\n\ninit_chain\030\t" +
      " \001(\01324.com.github.jtendermint.jabci.type" +
      "s.RequestInitChainH\000\022L\n\013begin_block\030\n \001(" +
      "\01325.com.github.jtendermint.jabci.types.R" +
      "equestBeginBlockH\000\022H\n\tend_block\030\013 \001(\01323.",
      "com.github.jtendermint.jabci.types.Reque" +
      "stEndBlockH\000B\007\n\005value\"\036\n\013RequestEcho\022\017\n\007" +
      "message\030\001 \001(\t\"\016\n\014RequestFlush\"\r\n\013Request" +
      "Info\".\n\020RequestSetOption\022\013\n\003key\030\001 \001(\t\022\r\n" +
      "\005value\030\002 \001(\t\"\036\n\020RequestDeliverTx\022\n\n\002tx\030\001" +
      " \001(\014\"\034\n\016RequestCheckTx\022\n\n\002tx\030\001 \001(\014\"I\n\014Re" +
      "questQuery\022\014\n\004data\030\001 \001(\014\022\014\n\004path\030\002 \001(\t\022\016" +
      "\n\006height\030\003 \001(\004\022\r\n\005prove\030\004 \001(\010\"\017\n\rRequest" +
      "Commit\"U\n\020RequestInitChain\022A\n\nvalidators" +
      "\030\001 \003(\0132-.com.github.jtendermint.jabci.ty",
      "pes.Validator\"]\n\021RequestBeginBlock\022\014\n\004ha" +
      "sh\030\001 \001(\014\022:\n\006header\030\002 \001(\0132*.com.github.jt" +
      "endermint.jabci.types.Header\"!\n\017RequestE" +
      "ndBlock\022\016\n\006height\030\001 \001(\004\"\373\006\n\010Response\022J\n\t" +
      "exception\030\001 \001(\01325.com.github.jtendermint" +
      ".jabci.types.ResponseExceptionH\000\022@\n\004echo" +
      "\030\002 \001(\01320.com.github.jtendermint.jabci.ty" +
      "pes.ResponseEchoH\000\022B\n\005flush\030\003 \001(\01321.com." +
      "github.jtendermint.jabci.types.ResponseF" +
      "lushH\000\022@\n\004info\030\004 \001(\01320.com.github.jtende",
      "rmint.jabci.types.ResponseInfoH\000\022K\n\nset_" +
      "option\030\005 \001(\01325.com.github.jtendermint.ja" +
      "bci.types.ResponseSetOptionH\000\022K\n\ndeliver" +
      "_tx\030\006 \001(\01325.com.github.jtendermint.jabci" +
      ".types.ResponseDeliverTxH\000\022G\n\010check_tx\030\007" +
      " \001(\01323.com.github.jtendermint.jabci.type" +
      "s.ResponseCheckTxH\000\022D\n\006commit\030\010 \001(\01322.co" +
      "m.github.jtendermint.jabci.types.Respons" +
      "eCommitH\000\022B\n\005query\030\t \001(\01321.com.github.jt" +
      "endermint.jabci.types.ResponseQueryH\000\022K\n",
      "\ninit_chain\030\n \001(\01325.com.github.jtendermi" +
      "nt.jabci.types.ResponseInitChainH\000\022M\n\013be" +
      "gin_block\030\013 \001(\01326.com.github.jtendermint" +
      ".jabci.types.ResponseBeginBlockH\000\022I\n\tend" +
      "_block\030\014 \001(\01324.com.github.jtendermint.ja" +
      "bci.types.ResponseEndBlockH\000B\007\n\005value\"\"\n" +
      "\021ResponseException\022\r\n\005error\030\001 \001(\t\"\037\n\014Res" +
      "ponseEcho\022\017\n\007message\030\001 \001(\t\"\017\n\rResponseFl" +
      "ush\"e\n\014ResponseInfo\022\014\n\004data\030\001 \001(\t\022\017\n\007ver" +
      "sion\030\002 \001(\t\022\031\n\021last_block_height\030\003 \001(\004\022\033\n",
      "\023last_block_app_hash\030\004 \001(\014\" \n\021ResponseSe" +
      "tOption\022\013\n\003log\030\001 \001(\t\"j\n\021ResponseDeliverT" +
      "x\022:\n\004code\030\001 \001(\0162,.com.github.jtendermint" +
      ".jabci.types.CodeType\022\014\n\004data\030\002 \001(\014\022\013\n\003l" +
      "og\030\003 \001(\t\"h\n\017ResponseCheckTx\022:\n\004code\030\001 \001(" +
      "\0162,.com.github.jtendermint.jabci.types.C" +
      "odeType\022\014\n\004data\030\002 \001(\014\022\013\n\003log\030\003 \001(\t\"\242\001\n\rR" +
      "esponseQuery\022:\n\004code\030\001 \001(\0162,.com.github." +
      "jtendermint.jabci.types.CodeType\022\r\n\005inde" +
      "x\030\002 \001(\003\022\013\n\003key\030\003 \001(\014\022\r\n\005value\030\004 \001(\014\022\r\n\005p",
      "roof\030\005 \001(\014\022\016\n\006height\030\006 \001(\004\022\013\n\003log\030\007 \001(\t\"" +
      "g\n\016ResponseCommit\022:\n\004code\030\001 \001(\0162,.com.gi" +
      "thub.jtendermint.jabci.types.CodeType\022\014\n" +
      "\004data\030\002 \001(\014\022\013\n\003log\030\003 \001(\t\"\023\n\021ResponseInit" +
      "Chain\"\024\n\022ResponseBeginBlock\"P\n\020ResponseE" +
      "ndBlock\022<\n\005diffs\030\001 \003(\0132-.com.github.jten" +
      "dermint.jabci.types.Validator\"\345\001\n\006Header" +
      "\022\020\n\010chain_id\030\001 \001(\t\022\016\n\006height\030\002 \001(\004\022\014\n\004ti" +
      "me\030\003 \001(\004\022\017\n\007num_txs\030\004 \001(\004\022B\n\rlast_block_" +
      "id\030\005 \001(\0132+.com.github.jtendermint.jabci.",
      "types.BlockID\022\030\n\020last_commit_hash\030\006 \001(\014\022" +
      "\021\n\tdata_hash\030\007 \001(\014\022\027\n\017validators_hash\030\010 " +
      "\001(\014\022\020\n\010app_hash\030\t \001(\014\"Y\n\007BlockID\022\014\n\004hash" +
      "\030\001 \001(\014\022@\n\005parts\030\002 \001(\01321.com.github.jtend" +
      "ermint.jabci.types.PartSetHeader\",\n\rPart" +
      "SetHeader\022\r\n\005total\030\001 \001(\004\022\014\n\004hash\030\002 \001(\014\"*" +
      "\n\tValidator\022\016\n\006pubKey\030\001 \001(\014\022\r\n\005power\030\002 \001" +
      "(\004*\265\005\n\010CodeType\022\006\n\002OK\020\000\022\021\n\rInternalError" +
      "\020\001\022\021\n\rEncodingError\020\002\022\014\n\010BadNonce\020\003\022\020\n\014U" +
      "nauthorized\020\004\022\025\n\021InsufficientFunds\020\005\022\022\n\016",
      "UnknownRequest\020\006\022\030\n\024BaseDuplicateAddress" +
      "\020e\022\025\n\021BaseEncodingError\020f\022\030\n\024BaseInsuffi" +
      "cientFees\020g\022\031\n\025BaseInsufficientFunds\020h\022\034" +
      "\n\030BaseInsufficientGasPrice\020i\022\024\n\020BaseInva" +
      "lidInput\020j\022\025\n\021BaseInvalidOutput\020k\022\025\n\021Bas" +
      "eInvalidPubKey\020l\022\027\n\023BaseInvalidSequence\020" +
      "m\022\030\n\024BaseInvalidSignature\020n\022\026\n\022BaseUnkno" +
      "wnAddress\020o\022\025\n\021BaseUnknownPubKey\020p\022\025\n\021Ba" +
      "seUnknownPlugin\020q\022\025\n\020GovUnknownEntity\020\311\001" +
      "\022\024\n\017GovUnknownGroup\020\312\001\022\027\n\022GovUnknownProp",
      "osal\020\313\001\022\026\n\021GovDuplicateGroup\020\314\001\022\027\n\022GovDu" +
      "plicateMember\020\315\001\022\031\n\024GovDuplicateProposal" +
      "\020\316\001\022\025\n\020GovDuplicateVote\020\317\001\022\025\n\020GovInvalid" +
      "Member\020\320\001\022\023\n\016GovInvalidVote\020\321\001\022\032\n\025GovInv" +
      "alidVotingPower\020\322\0012\212\n\n\017ABCIApplication\022i" +
      "\n\004Echo\022/.com.github.jtendermint.jabci.ty" +
      "pes.RequestEcho\0320.com.github.jtendermint" +
      ".jabci.types.ResponseEcho\022l\n\005Flush\0220.com" +
      ".github.jtendermint.jabci.types.RequestF" +
      "lush\0321.com.github.jtendermint.jabci.type",
      "s.ResponseFlush\022i\n\004Info\022/.com.github.jte" +
      "ndermint.jabci.types.RequestInfo\0320.com.g" +
      "ithub.jtendermint.jabci.types.ResponseIn" +
      "fo\022x\n\tSetOption\0224.com.github.jtendermint" +
      ".jabci.types.RequestSetOption\0325.com.gith" +
      "ub.jtendermint.jabci.types.ResponseSetOp" +
      "tion\022x\n\tDeliverTx\0224.com.github.jtendermi" +
      "nt.jabci.types.RequestDeliverTx\0325.com.gi" +
      "thub.jtendermint.jabci.types.ResponseDel" +
      "iverTx\022r\n\007CheckTx\0222.com.github.jtendermi",
      "nt.jabci.types.RequestCheckTx\0323.com.gith" +
      "ub.jtendermint.jabci.types.ResponseCheck" +
      "Tx\022l\n\005Query\0220.com.github.jtendermint.jab" +
      "ci.types.RequestQuery\0321.com.github.jtend" +
      "ermint.jabci.types.ResponseQuery\022o\n\006Comm" +
      "it\0221.com.github.jtendermint.jabci.types." +
      "RequestCommit\0322.com.github.jtendermint.j" +
      "abci.types.ResponseCommit\022x\n\tInitChain\0224" +
      ".com.github.jtendermint.jabci.types.Requ" +
      "estInitChain\0325.com.github.jtendermint.ja",
      "bci.types.ResponseInitChain\022{\n\nBeginBloc" +
      "k\0225.com.github.jtendermint.jabci.types.R" +
      "equestBeginBlock\0326.com.github.jtendermin" +
      "t.jabci.types.ResponseBeginBlock\022u\n\010EndB" +
      "lock\0223.com.github.jtendermint.jabci.type" +
      "s.RequestEndBlock\0324.com.github.jtendermi" +
      "nt.jabci.types.ResponseEndBlockb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_github_jtendermint_jabci_types_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_github_jtendermint_jabci_types_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_Request_descriptor,
        new java.lang.String[] { "Echo", "Flush", "Info", "SetOption", "DeliverTx", "CheckTx", "Commit", "Query", "InitChain", "BeginBlock", "EndBlock", "Value", });
    internal_static_com_github_jtendermint_jabci_types_RequestEcho_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_github_jtendermint_jabci_types_RequestEcho_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_RequestEcho_descriptor,
        new java.lang.String[] { "Message", });
    internal_static_com_github_jtendermint_jabci_types_RequestFlush_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_github_jtendermint_jabci_types_RequestFlush_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_RequestFlush_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtendermint_jabci_types_RequestInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_github_jtendermint_jabci_types_RequestInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_RequestInfo_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtendermint_jabci_types_RequestSetOption_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_github_jtendermint_jabci_types_RequestSetOption_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_RequestSetOption_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_github_jtendermint_jabci_types_RequestDeliverTx_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_github_jtendermint_jabci_types_RequestDeliverTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_RequestDeliverTx_descriptor,
        new java.lang.String[] { "Tx", });
    internal_static_com_github_jtendermint_jabci_types_RequestCheckTx_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_github_jtendermint_jabci_types_RequestCheckTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_RequestCheckTx_descriptor,
        new java.lang.String[] { "Tx", });
    internal_static_com_github_jtendermint_jabci_types_RequestQuery_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_github_jtendermint_jabci_types_RequestQuery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_RequestQuery_descriptor,
        new java.lang.String[] { "Data", "Path", "Height", "Prove", });
    internal_static_com_github_jtendermint_jabci_types_RequestCommit_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_github_jtendermint_jabci_types_RequestCommit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_RequestCommit_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtendermint_jabci_types_RequestInitChain_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_com_github_jtendermint_jabci_types_RequestInitChain_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_RequestInitChain_descriptor,
        new java.lang.String[] { "Validators", });
    internal_static_com_github_jtendermint_jabci_types_RequestBeginBlock_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_com_github_jtendermint_jabci_types_RequestBeginBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_RequestBeginBlock_descriptor,
        new java.lang.String[] { "Hash", "Header", });
    internal_static_com_github_jtendermint_jabci_types_RequestEndBlock_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_com_github_jtendermint_jabci_types_RequestEndBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_RequestEndBlock_descriptor,
        new java.lang.String[] { "Height", });
    internal_static_com_github_jtendermint_jabci_types_Response_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_com_github_jtendermint_jabci_types_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_Response_descriptor,
        new java.lang.String[] { "Exception", "Echo", "Flush", "Info", "SetOption", "DeliverTx", "CheckTx", "Commit", "Query", "InitChain", "BeginBlock", "EndBlock", "Value", });
    internal_static_com_github_jtendermint_jabci_types_ResponseException_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_com_github_jtendermint_jabci_types_ResponseException_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseException_descriptor,
        new java.lang.String[] { "Error", });
    internal_static_com_github_jtendermint_jabci_types_ResponseEcho_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_com_github_jtendermint_jabci_types_ResponseEcho_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseEcho_descriptor,
        new java.lang.String[] { "Message", });
    internal_static_com_github_jtendermint_jabci_types_ResponseFlush_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_com_github_jtendermint_jabci_types_ResponseFlush_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseFlush_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtendermint_jabci_types_ResponseInfo_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_com_github_jtendermint_jabci_types_ResponseInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseInfo_descriptor,
        new java.lang.String[] { "Data", "Version", "LastBlockHeight", "LastBlockAppHash", });
    internal_static_com_github_jtendermint_jabci_types_ResponseSetOption_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_com_github_jtendermint_jabci_types_ResponseSetOption_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseSetOption_descriptor,
        new java.lang.String[] { "Log", });
    internal_static_com_github_jtendermint_jabci_types_ResponseDeliverTx_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_com_github_jtendermint_jabci_types_ResponseDeliverTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseDeliverTx_descriptor,
        new java.lang.String[] { "Code", "Data", "Log", });
    internal_static_com_github_jtendermint_jabci_types_ResponseCheckTx_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_com_github_jtendermint_jabci_types_ResponseCheckTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseCheckTx_descriptor,
        new java.lang.String[] { "Code", "Data", "Log", });
    internal_static_com_github_jtendermint_jabci_types_ResponseQuery_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_com_github_jtendermint_jabci_types_ResponseQuery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseQuery_descriptor,
        new java.lang.String[] { "Code", "Index", "Key", "Value", "Proof", "Height", "Log", });
    internal_static_com_github_jtendermint_jabci_types_ResponseCommit_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_com_github_jtendermint_jabci_types_ResponseCommit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseCommit_descriptor,
        new java.lang.String[] { "Code", "Data", "Log", });
    internal_static_com_github_jtendermint_jabci_types_ResponseInitChain_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_com_github_jtendermint_jabci_types_ResponseInitChain_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseInitChain_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtendermint_jabci_types_ResponseBeginBlock_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_com_github_jtendermint_jabci_types_ResponseBeginBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseBeginBlock_descriptor,
        new java.lang.String[] { });
    internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_ResponseEndBlock_descriptor,
        new java.lang.String[] { "Diffs", });
    internal_static_com_github_jtendermint_jabci_types_Header_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_com_github_jtendermint_jabci_types_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_Header_descriptor,
        new java.lang.String[] { "ChainId", "Height", "Time", "NumTxs", "LastBlockId", "LastCommitHash", "DataHash", "ValidatorsHash", "AppHash", });
    internal_static_com_github_jtendermint_jabci_types_BlockID_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_com_github_jtendermint_jabci_types_BlockID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_BlockID_descriptor,
        new java.lang.String[] { "Hash", "Parts", });
    internal_static_com_github_jtendermint_jabci_types_PartSetHeader_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_com_github_jtendermint_jabci_types_PartSetHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_PartSetHeader_descriptor,
        new java.lang.String[] { "Total", "Hash", });
    internal_static_com_github_jtendermint_jabci_types_Validator_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_com_github_jtendermint_jabci_types_Validator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_jtendermint_jabci_types_Validator_descriptor,
        new java.lang.String[] { "PubKey", "Power", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
